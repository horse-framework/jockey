{"version":3,"file":"src_app_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.module.ts"],"sourcesContent":["import Chart from 'chart.js';\r\nimport { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { BaseComponent } from 'src/lib/base-component';\r\nimport { DashboardService } from 'src/services/dashboard.service';\r\nimport { Dashboard } from 'src/models/dashboard';\r\nimport { interval } from 'rxjs';\r\nimport { TimespanPipe } from '../layout/pipes/timespan.pipe';\r\nimport { MessageCount } from 'src/models/message-count';\r\nimport { WebsocketService } from 'src/services/websocket.service';\r\nimport { SocketModels } from 'src/lib/socket-models';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { ChartService } from 'src/services/chart.service';\r\nimport { QueueService } from '../queue/services/queue.service';\r\nimport { HorseRouterService } from 'src/services/horse-router.service';\r\nimport { ChannelService } from '../channels/services/channel.service';\r\nimport { ClientService } from 'src/services/client.service';\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent extends BaseComponent implements OnInit, OnDestroy {\r\n\r\n    deliveryChart = null;\r\n    msgChart = null;\r\n    storeChart = null;\r\n    routerChart = null;\r\n    channelChart = null;\r\n    dashboard: Dashboard;\r\n    lifetime: string;\r\n\r\n    private dashboardService = inject(DashboardService);\r\n    private socket = inject(WebsocketService);\r\n    private chartService = inject(ChartService);\r\n    private queueService = inject(QueueService);\r\n    private routerService = inject(HorseRouterService);\r\n    private channelService = inject(ChannelService);\r\n    private clientService = inject(ClientService);\r\n\r\n    async ngOnInit() {\r\n\r\n        await this.load();\r\n\r\n        this.on(interval(5000)).subscribe(async () => {\r\n            this.dashboardService.load().then(d => {\r\n                this.dashboard = d;\r\n            });\r\n        });\r\n\r\n        this.subscribeWebsockets();\r\n    }\r\n\r\n    override ngOnDestroy(): void {\r\n        super.ngOnDestroy();\r\n        this.socket.send(SocketModels.Dashboard, { join: false });\r\n    }\r\n\r\n    private subscribeWebsockets(): void {\r\n\r\n        this.on(this.socket.onmessage)\r\n            .pipe(\r\n                filter(x => x.type == SocketModels.QueueGraph && x.payload.n == '*'),\r\n                filter(() => this.deliveryChart != null),\r\n                map(x => x.payload)\r\n            )\r\n            .subscribe((model: MessageCount) => this.chartService.updateChart(this.deliveryChart, model));\r\n\r\n        this.on(this.socket.onmessage)\r\n            .pipe(\r\n                filter(x => x.type == SocketModels.QueueStoreGraph && x.payload.n == '*'),\r\n                filter(() => this.storeChart != null),\r\n                map(x => x.payload)\r\n            )\r\n            .subscribe((model: MessageCount) => this.chartService.updateChart(this.storeChart, model));\r\n\r\n        this.on(this.socket.onmessage)\r\n            .pipe(\r\n                filter(x => x.type == SocketModels.DirectGraph && x.payload.n == '*'),\r\n                filter(() => this.msgChart != null),\r\n                map(x => x.payload)\r\n            )\r\n            .subscribe((model: MessageCount) => this.chartService.updateChart(this.msgChart, model));\r\n\r\n        this.on(this.socket.onmessage)\r\n            .pipe(\r\n                filter(x => x.type == SocketModels.RouterGraph && x.payload.n == '*'),\r\n                filter(() => this.routerChart != null),\r\n                map(x => x.payload)\r\n            )\r\n            .subscribe((model: MessageCount) => this.chartService.updateChart(this.routerChart, model));\r\n\r\n        this.on(this.socket.onmessage)\r\n            .pipe(\r\n                filter(x => x.type == SocketModels.ChannelGraph && x.payload.n == '*'),\r\n                filter(() => this.channelChart != null),\r\n                map(x => x.payload)\r\n            )\r\n            .subscribe((model: MessageCount) => this.chartService.updateChart(this.channelChart, model));\r\n\r\n        this.socket.send(SocketModels.Dashboard, { join: true });\r\n\r\n    }\r\n\r\n    private async load() {\r\n        this.dashboard = await this.dashboardService.load();\r\n        await this.loadCharts();\r\n\r\n        let pipe = new TimespanPipe();\r\n        this.on(interval(1000)).subscribe(() => {\r\n            if (!this.dashboard)\r\n                return;\r\n\r\n            let now = new Date().getTime() / 1000;\r\n            this.lifetime = pipe.transform(now, this.dashboard.server.startedDate);\r\n        });\r\n    }\r\n\r\n    private async loadCharts(): Promise<any> {\r\n\r\n        let queue = await this.queueService.getGraph(null, '1m');\r\n        let channel = await this.channelService.getGraph(null, '1m');\r\n        let router = await this.routerService.getGraph(null, '1m');\r\n        let client = await this.clientService.getGraph(null, '1m');\r\n\r\n        if (this.deliveryChart)\r\n            this.deliveryChart.destroy();\r\n\r\n        this.deliveryChart = new Chart(document.getElementById('delivery-chart'),\r\n            {\r\n                type: 'line',\r\n                hover: { mode: 'nearest', intersect: true },\r\n                data: this.getDeliveryChartData(queue.stream),\r\n                options: {\r\n                    animation: {\r\n                        duration: 0\r\n                    },\r\n                    responsive: true,\r\n                    scales: {\r\n                        xAxes: [{ display: false }],\r\n                        yAxes: [{ display: true, ticks: { precision: 0 } }]\r\n                    }\r\n                }\r\n            });\r\n\r\n        if (this.storeChart)\r\n            this.storeChart.destroy();\r\n\r\n        this.storeChart = new Chart(document.getElementById('store-chart'),\r\n            {\r\n                type: 'line',\r\n                hover: { mode: 'nearest', intersect: true },\r\n                data: this.getStoreChartData(queue.store),\r\n                options: {\r\n                    animation: {\r\n                        duration: 0\r\n                    },\r\n                    responsive: true,\r\n                    scales: {\r\n                        xAxes: [{ display: false }],\r\n                        yAxes: [{ display: true, ticks: { precision: 0 } }]\r\n                    }\r\n                }\r\n            });\r\n\r\n        if (this.msgChart)\r\n            this.msgChart.destroy();\r\n\r\n        this.msgChart = new Chart(document.getElementById('msg-chart'),\r\n            {\r\n                type: 'line',\r\n                hover: { mode: 'nearest', intersect: true },\r\n                data: this.getMessageChartData(client),\r\n                options: {\r\n                    animation: {\r\n                        duration: 0\r\n                    },\r\n                    responsive: true,\r\n                    scales: {\r\n                        xAxes: [{ display: false }],\r\n                        yAxes: [{ display: true, ticks: { precision: 0 } }]\r\n                    }\r\n                }\r\n            });\r\n\r\n        if (this.routerChart)\r\n            this.routerChart.destroy();\r\n\r\n        this.routerChart = new Chart(document.getElementById('router-chart'),\r\n            {\r\n                type: 'line',\r\n                hover: { mode: 'nearest', intersect: true },\r\n                data: this.getRouterChartData(router),\r\n                options: {\r\n                    animation: {\r\n                        duration: 0\r\n                    },\r\n                    responsive: true,\r\n                    scales: {\r\n                        xAxes: [{ display: false }],\r\n                        yAxes: [{ display: true, ticks: { precision: 0 } }]\r\n                    }\r\n                }\r\n            });\r\n\r\n        if (this.channelChart)\r\n            this.channelChart.destroy();\r\n\r\n        this.channelChart = new Chart(document.getElementById('channel-chart'),\r\n            {\r\n                type: 'line',\r\n                hover: { mode: 'nearest', intersect: true },\r\n                data: this.getChannelChartData(channel),\r\n                options: {\r\n                    animation: {\r\n                        duration: 0\r\n                    },\r\n                    responsive: true,\r\n                    scales: {\r\n                        xAxes: [{ display: false }],\r\n                        yAxes: [{ display: true, ticks: { precision: 0 } }]\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    private getDeliveryChartData(content: MessageCount) {\r\n        return {\r\n            labels: content.labels,\r\n            datasets: [\r\n                {\r\n                    label: 'Produced',\r\n                    borderColor: '#2070e0',\r\n                    data: content.d.map(x => x.r),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                },\r\n                {\r\n                    label: 'Ack',\r\n                    borderColor: '#12bf4a',\r\n                    data: content.d.map(x => x.d),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                },\r\n                {\r\n                    label: 'Neg. Ack',\r\n                    borderColor: '#c042ef',\r\n                    data: content.d.map(x => x.rs),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                },\r\n                {\r\n                    label: 'Unack',\r\n                    borderColor: '#eec236',\r\n                    data: content.d.map(x => x.nr),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                },\r\n                {\r\n                    label: 'Error',\r\n                    borderColor: '#ff3333',\r\n                    data: content.d.map(x => x.e),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                }]\r\n        };\r\n\r\n    }\r\n\r\n    private getStoreChartData(content: MessageCount) {\r\n        return {\r\n            labels: content.labels,\r\n            datasets: [\r\n                {\r\n                    label: 'Msgs',\r\n                    borderColor: '#2070e0',\r\n                    data: content.d.map(x => x.r),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                },\r\n                {\r\n                    label: 'High Prio Msgs',\r\n                    borderColor: '#ff9911',\r\n                    data: content.d.map(x => x.d),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                },\r\n                {\r\n                    label: 'Pending for Ack',\r\n                    borderColor: '#10a0a0',\r\n                    data: content.d.map(x => x.nr),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                },\r\n                {\r\n                    label: 'Processing',\r\n                    borderColor: '#f02020',\r\n                    data: content.d.map(x => x.s),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                }]\r\n        }\r\n    }\r\n\r\n    private getMessageChartData(content: MessageCount) {\r\n        return {\r\n            labels: content.labels,\r\n            datasets: [\r\n                {\r\n                    label: 'Direct Sent',\r\n                    borderColor: '#2070e0',\r\n                    data: content.d.map(x => x.s),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                },\r\n                {\r\n                    label: 'Direct Received',\r\n                    borderColor: '#f0f010',\r\n                    data: content.d.map(x => x.r),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                },\r\n                {\r\n                    label: 'Direct Respond',\r\n                    borderColor: '#10cf70',\r\n                    data: content.d.map(x => x.rs),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                },\r\n                {\r\n                    label: 'Direct No Receiver',\r\n                    borderColor: '#9a2ef0',\r\n                    data: content.d.map(x => x.nr),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                }]\r\n        };\r\n    }\r\n\r\n    private getRouterChartData(content: MessageCount) {\r\n        return {\r\n            labels: content.labels,\r\n            datasets: [\r\n                {\r\n                    label: 'Router Publish',\r\n                    borderColor: '#2070e0',\r\n                    data: content.d.map(x => x.s),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                },\r\n                {\r\n                    label: 'Router Received',\r\n                    borderColor: '#10c070',\r\n                    data: content.d.map(x => x.r),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                },\r\n                {\r\n                    label: 'Router No Receiver',\r\n                    borderColor: '#f06010',\r\n                    data: content.d.map(x => x.nr),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                }]\r\n        };\r\n    }\r\n\r\n    private getChannelChartData(content: MessageCount) {\r\n        return {\r\n            labels: content.labels,\r\n            datasets: [\r\n                {\r\n                    label: 'Published',\r\n                    borderColor: '#2070e0',\r\n                    data: content.d.map(x => x.s),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                },\r\n                {\r\n                    label: 'Received',\r\n                    borderColor: '#10c070',\r\n                    data: content.d.map(x => x.r),\r\n                    fill: false,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 8,\r\n                    lineTension: 0.2,\r\n                    borderWidth: 2\r\n                }]\r\n        };\r\n    }\r\n\r\n}\r\n","<div class=\"warning-bar\" *ngIf=\"dashboard && (dashboard.nodeState == 'Replica' || dashboard.nodeState == 'Successor')\">\r\n  <p>That node is a <b>{{dashboard.nodeState}}</b> Node. <a href=\"{{dashboard.mainNodeHost}}\">Click here</a> to open main node jockey panel.</p>\r\n</div>\r\n\r\n<div class=\"dashboard\" [hidden]=\"dashboard == null\">\r\n  <div class=\"dashboard-row\">\r\n    <div class=\"dashboard-portlet\">\r\n      <div class=\"portlet\">\r\n        <h3 class=\"portlet-title\">Stored Queue Messages</h3>\r\n        <div class=\"portlet-body\">\r\n          <div class=\"portlet-canvas\">\r\n            <canvas id=\"store-chart\"></canvas>\r\n          </div>\r\n          <div class=\"portlet-table canvas-info\" *ngIf=\"dashboard\">\r\n            <div class=\"key-value-table\">\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Queue Count</div>\r\n                <div class=\"kvt-value\">{{dashboard.queueCount}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Stored Messages</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Stored Priority Messages</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Timed out Messages</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Currently Processing Messages</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Putting Back Messages</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"dashboard-portlet\">\r\n      <div class=\"portlet\">\r\n        <h3 class=\"portlet-title\">Queue Messages and Deliveries</h3>\r\n        <div class=\"portlet-body\">\r\n          <div class=\"portlet-canvas\">\r\n            <canvas id=\"delivery-chart\"></canvas>\r\n          </div>\r\n          <div class=\"portlet-table canvas-info\" *ngIf=\"dashboard\">\r\n            <div class=\"key-value-table\">\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Produced</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Acknowledged</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Negative Acknowledged</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Pending for Acknowledge</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Acknowledge Timed out</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Delivery Errors</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"dashboard-row\">\r\n    <div class=\"dashboard-portlet dp-40\">\r\n      <div class=\"portlet\">\r\n        <h3 class=\"portlet-title\">Channel Messages</h3>\r\n        <div class=\"portlet-body\">\r\n          <div class=\"portlet-canvas\" style=\"min-height: 255px;\">\r\n            <canvas id=\"channel-chart\"></canvas>\r\n          </div>\r\n          <div class=\"portlet-table\" *ngIf=\"dashboard\">\r\n            <div class=\"key-value-table\">\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Channel Count</div>\r\n                <div class=\"kvt-value\">{{dashboard.channelCount}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Published Messages</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Received Messages</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"dashboard-portlet dp-60\">\r\n      <div class=\"portlet\">\r\n        <h3 class=\"portlet-title\">Server Information and Default Options</h3>\r\n        <div class=\"portlet-body\" *ngIf=\"dashboard\" style=\"min-height: 275px;\">\r\n          <div class=\"portlet-table\">\r\n            <div class=\"key-value-table\">\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Service Lifetime</div>\r\n                <div class=\"kvt-value\">{{lifetime}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Hostname</div>\r\n                <div class=\"kvt-value\">\r\n                  <span *ngFor=\"let host of dashboard.server.hosts\">{{host}}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Online Clients</div>\r\n                <div class=\"kvt-value\">{{dashboard.server.onlineClients}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-info\">All defined remote nodes.</div>\r\n                <div class=\"kvt-key\">Total Nodes</div>\r\n                <div class=\"kvt-value\">{{dashboard.server.totalNodes}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-info\">Connected nodes</div>\r\n                <div class=\"kvt-key\">Online Nodes</div>\r\n                <div class=\"kvt-value\">{{dashboard.server.connectedNodes}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Channel Subscribers Limit</div>\r\n                <div class=\"kvt-value\">{{dashboard.serverOptions.channelSubscriberLimit | unlimited}}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"portlet-table\">\r\n            <div class=\"key-value-table\">\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Max Queue Limit</div>\r\n                <div class=\"kvt-value\">{{dashboard.serverOptions.queueLimit | unlimited}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Max Router Limit</div>\r\n                <div class=\"kvt-value\">{{dashboard.serverOptions.routerLimit | unlimited}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Auto Channel Creation</div>\r\n                <div class=\"kvt-value\">{{dashboard.serverOptions.autoChannelCreation}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Auto Queue Creation</div>\r\n                <div class=\"kvt-value\">{{dashboard.queueOptions.autoQueueCreation}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Auto Queue Destroy</div>\r\n                <div class=\"kvt-value\">{{dashboard.queueOptions.autoDestroy}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Queue Subscribers Limit</div>\r\n                <div class=\"kvt-value\">{{dashboard.queueOptions.clientLimit | unlimited}}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"portlet-table\">\r\n            <div class=\"key-value-table\">\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Default Queue Type</div>\r\n                <div class=\"kvt-value\">{{dashboard.queueOptions.type}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Queue Acknowledge</div>\r\n                <div class=\"kvt-value\">\r\n                  {{dashboard.queueOptions.ack}}\r\n                  <em *ngIf=\"dashboard.queueOptions.ackTimeout > 0\">\r\n                    {{dashboard.queueOptions.ackTimeout}} ms timeout\r\n                  </em>\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Queue Message Timeout</div>\r\n                <div class=\"kvt-value\" *ngIf=\"dashboard.queueOptions.msgTimeout == 0\">No Timeout</div>\r\n                <div class=\"kvt-value\" *ngIf=\"dashboard.queueOptions.msgTimeout > 0\">\r\n                  {{dashboard.queueOptions.msgTimeout}} milliseconds\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Message Limit</div>\r\n                <div class=\"kvt-value\">\r\n                  {{dashboard.queueOptions.msgLimit | unlimited}}\r\n                  <em>Size Limit: {{dashboard.queueOptions.msgSizeLimit | filesize}}</em>\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Delay Between Messages</div>\r\n                <div class=\"kvt-value\" *ngIf=\"dashboard.queueOptions.delayBetweenMsgs == 0\">No Delay</div>\r\n                <div class=\"kvt-value\" *ngIf=\"dashboard.queueOptions.delayBetweenMsgs > 0\">\r\n                  {{dashboard.queueOptions.delayBetweenMsgs}} milliseconds\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"dashboard-row\">\r\n    <div class=\"dashboard-portlet\">\r\n      <div class=\"portlet\">\r\n        <h3 class=\"portlet-title\">Router Messages</h3>\r\n        <div class=\"portlet-body\">\r\n          <div class=\"portlet-canvas\">\r\n            <canvas id=\"router-chart\"></canvas>\r\n          </div>\r\n          <div class=\"portlet-table canvas-info\" *ngIf=\"dashboard\">\r\n            <div class=\"key-value-table\">\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Published Router Messages</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Delivered Router Messages</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Not Received Messages</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"dashboard-portlet\">\r\n      <div class=\"portlet\">\r\n        <h3 class=\"portlet-title\">Direct Messages and Responses</h3>\r\n        <div class=\"portlet-body\">\r\n          <div class=\"portlet-canvas\">\r\n            <canvas id=\"msg-chart\"></canvas>\r\n          </div>\r\n          <div class=\"portlet-table canvas-info\" *ngIf=\"dashboard\">\r\n            <div class=\"key-value-table\">\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Sent Direct Messages</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Delivered Direct Messages</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Direct Responses</div>\r\n                <div class=\"kvt-value\">***</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PipesModule } from '../layout/pipes/pipes.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [DashboardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PipesModule,\r\n    RouterModule.forChild([{ path: '', component: DashboardComponent }])\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}