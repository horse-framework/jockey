{"version":3,"file":"src_app_queue_detail_queue-detail_module_ts.js","mappings":"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","sources":["./src/app/queue/detail/messsage-move-modal/messsage-move-modal.component.ts","./src/app/queue/detail/messsage-move-modal/messsage-move-modal.component.html","./src/app/queue/detail/queue-detail.component.ts","./src/app/queue/detail/queue-detail.component.html","./src/app/queue/detail/queue-detail.module.ts","./src/app/queue/detail/queue-message-modal/queue-message-modal.component.ts","./src/app/queue/detail/queue-message-modal/queue-message-modal.component.html","./src/app/queue/detail/queue-option-modal/queue-option-modal.component.ts","./src/app/queue/detail/queue-option-modal/queue-option-modal.component.html","./src/app/queue/detail/queue-push-modal/queue-push-modal.component.ts","./src/app/queue/detail/queue-push-modal/queue-push-modal.component.html","./src/app/queue/models/queue-message.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-messsage-move-modal',\n  templateUrl: './messsage-move-modal.component.html',\n  styleUrls: ['./messsage-move-modal.component.css']\n})\nexport class MesssageMoveModalComponent implements OnInit, OnDestroy {\n\n  private _onconfirmed: Subject<string> = new Subject<string>();\n  get onconfirmed(): Observable<string> { return this._onconfirmed; }\n\n  messageCount: number;\n  target: string = '';\n  private _confirmed = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  confirm(): void {\n    this._confirmed = true;\n    this._onconfirmed.next(this.target);\n  }\n\n  ngOnDestroy(): void {\n    if (!this._confirmed)\n      this._onconfirmed.next(null);\n  }\n}\n","<h2 class=\"title\" mat-dialog-title>Confirmation</h2>\n<mat-dialog-content class=\"content\">\n    <p>\n        You are about to move <b class=\"imp\">{{messageCount}}</b> messages.\n        Please type the target queue name.<br/>\n        If the target queue doesn't exist, it will be created with default queue options.\n    </p>\n    <div>\n        <input placeholder=\"Queue Name\" class=\"target-text\" type=\"text\" [(ngModel)]=\"target\" />\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions class=\"buttons\">\n    <button (click)=\"confirm()\" mat-button mat-dialog-close class=\"modal-btn btn-green\">Confirm</button>\n    <button mat-button mat-dialog-close class=\"modal-btn btn-grey\">Cancel</button>\n</mat-dialog-actions>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport Chart from 'chart.js';\r\nimport { BaseComponent } from 'src/lib/base-component';\r\nimport { SocketModels } from 'src/lib/socket-models';\r\nimport { HorseQueue } from 'src/app/queue/models/horse-queue';\r\nimport { QueueService } from 'src/app/queue/services/queue.service';\r\nimport { WebsocketService } from 'src/services/websocket.service';\r\nimport { ConfirmModalComponent } from '../../layout/portal-layout/confirm-modal/confirm-modal.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { filter, map, take } from 'rxjs/operators';\r\nimport { MesssageMoveModalComponent } from './messsage-move-modal/messsage-move-modal.component';\r\nimport { QueueMessageModalComponent } from './queue-message-modal/queue-message-modal.component';\r\nimport { QueueMessage } from 'src/app/queue/models/queue-message';\r\nimport { QueuePushModalComponent } from './queue-push-modal/queue-push-modal.component';\r\nimport { QueueOptionModalComponent } from './queue-option-modal/queue-option-modal.component';\r\nimport { MessageCount } from 'src/models/message-count';\r\nimport { DateHelper } from 'src/lib/date-helper';\r\nimport { QueueGraphData } from '../models/queue-graph-data';\r\nimport { ChartService } from 'src/services/chart.service';\r\n\r\n@Component({\r\n    selector: 'queue-detail',\r\n    templateUrl: './queue-detail.component.html',\r\n    styleUrls: ['./queue-detail.component.css']\r\n})\r\nexport class QueueDetailComponent extends BaseComponent implements OnInit, OnDestroy {\r\n\r\n    queue: HorseQueue;\r\n    graph: QueueGraphData;\r\n    deliveryChart: any;\r\n    storeChart: any;\r\n    queueName: string;\r\n    resolution: string = '1m';\r\n\r\n    constructor(private dialog: MatDialog,\r\n        private chartService: ChartService,\r\n        private activatedRoute: ActivatedRoute,\r\n        private socket: WebsocketService,\r\n        private router: Router,\r\n        private queueService: QueueService) {\r\n        super();\r\n    }\r\n\r\n    async ngOnInit() {\r\n\r\n        this.queueName = this.activatedRoute.snapshot.params.name;\r\n        if (this.queueName == null || this.queueName.length === 0) return;\r\n\r\n        await this.load();\r\n        this.subscribeWebsocket();\r\n    }\r\n\r\n    private subscribeWebsocket() {\r\n\r\n        this.on(this.socket.onmessage)\r\n            .pipe(\r\n                filter(x => x.type == SocketModels.QueueGraph && x.payload.n == this.queueName),\r\n                filter(() => this.deliveryChart != null),\r\n                map(x => x.payload)\r\n            )\r\n            .subscribe((model: MessageCount) => this.chartService.updateChart(this.deliveryChart, model));\r\n\r\n        this.on(this.socket.onmessage)\r\n            .pipe(\r\n                filter(x => x.type == SocketModels.QueueStoreGraph && x.payload.n == this.queueName),\r\n                filter(() => this.storeChart != null),\r\n                map(x => x.payload)\r\n            )\r\n            .subscribe((model: MessageCount) => this.chartService.updateChart(this.storeChart, model));\r\n\r\n        const request = {\r\n            requestId: new Date().getTime().toString(),\r\n            name: this.queue.info.name\r\n        };\r\n\r\n        this.socket.send(SocketModels.QueueDetailRequest, request);\r\n    }\r\n\r\n    private async load() {\r\n\r\n        this.queue = await this.queueService.get(this.queueName);\r\n        this.graph = await this.queueService.getGraph(this.queueName, this.resolution);\r\n\r\n        if (this.deliveryChart)\r\n            this.deliveryChart.destroy();\r\n\r\n        this.deliveryChart = new Chart(document.getElementById('queue-delivery-chart'),\r\n            {\r\n                type: 'line',\r\n                hover: { mode: 'nearest', intersect: true },\r\n                data: {\r\n                    labels: this.graph.stream.labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Produced',\r\n                            borderColor: '#2070e0',\r\n                            data: this.graph.stream.d.map(x => x.r),\r\n                            fill: false,\r\n                            pointRadius: 1,\r\n                            pointHitRadius: 8,\r\n                            lineTension: 0.2,\r\n                            borderWidth: 2\r\n                        },\r\n                        {\r\n                            label: 'Ack',\r\n                            borderColor: '#12bf4a',\r\n                            data: this.graph.stream.d.map(x => x.d),\r\n                            fill: false,\r\n                            pointRadius: 1,\r\n                            pointHitRadius: 8,\r\n                            lineTension: 0.2,\r\n                            borderWidth: 2\r\n                        },\r\n                        {\r\n                            label: 'Neg. Ack',\r\n                            borderColor: '#c042ef',\r\n                            data: this.graph.stream.d.map(x => x.rs),\r\n                            fill: false,\r\n                            pointRadius: 1,\r\n                            pointHitRadius: 8,\r\n                            lineTension: 0.2,\r\n                            borderWidth: 2\r\n                        },\r\n                        {\r\n                            label: 'Unack',\r\n                            borderColor: '#eec236',\r\n                            data: this.graph.stream.d.map(x => x.nr),\r\n                            fill: false,\r\n                            pointRadius: 1,\r\n                            pointHitRadius: 8,\r\n                            lineTension: 0.2,\r\n                            borderWidth: 2\r\n                        },\r\n                        {\r\n                            label: 'Error',\r\n                            borderColor: '#ff3333',\r\n                            data: this.graph.stream.d.map(x => x.e),\r\n                            fill: false,\r\n                            pointRadius: 1,\r\n                            pointHitRadius: 8,\r\n                            lineTension: 0.2,\r\n                            borderWidth: 2\r\n                        }]\r\n                },\r\n                options: {\r\n                    animation: {\r\n                        duration: 0\r\n                    },\r\n                    responsive: true,\r\n                    scales: {\r\n                        xAxes: [{ display: false }],\r\n                        yAxes: [{ display: true, ticks: { precision: 0 } }]\r\n                    }\r\n                }\r\n            });\r\n\r\n        if (this.storeChart)\r\n            this.storeChart.destroy();\r\n\r\n        this.storeChart = new Chart(document.getElementById('queue-store-chart'),\r\n            {\r\n                type: 'line',\r\n                hover: { mode: 'nearest', intersect: true },\r\n                data: {\r\n                    labels: this.graph.store.labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Msgs',\r\n                            borderColor: '#2070e0',\r\n                            data: this.graph.store.d.map(x => x.r),\r\n                            fill: false,\r\n                            pointRadius: 1,\r\n                            pointHitRadius: 8,\r\n                            lineTension: 0.2,\r\n                            borderWidth: 2\r\n                        },\r\n                        {\r\n                            label: 'High Prio Msgs',\r\n                            borderColor: '#ff9911',\r\n                            data: this.graph.store.d.map(x => x.d),\r\n                            fill: false,\r\n                            pointRadius: 1,\r\n                            pointHitRadius: 8,\r\n                            lineTension: 0.2,\r\n                            borderWidth: 2\r\n                        },\r\n                        {\r\n                            label: 'Pending for Ack',\r\n                            borderColor: '#10a0a0',\r\n                            data: this.graph.store.d.map(x => x.nr),\r\n                            fill: false,\r\n                            pointRadius: 1,\r\n                            pointHitRadius: 8,\r\n                            lineTension: 0.2,\r\n                            borderWidth: 2\r\n                        },\r\n                        {\r\n                            label: 'Processing',\r\n                            borderColor: '#f02020',\r\n                            data: this.graph.store.d.map(x => x.s),\r\n                            fill: false,\r\n                            pointRadius: 1,\r\n                            pointHitRadius: 8,\r\n                            lineTension: 0.2,\r\n                            borderWidth: 2\r\n                        }]\r\n                },\r\n                options: {\r\n                    animation: {\r\n                        duration: 0\r\n                    },\r\n                    responsive: true,\r\n                    scales: {\r\n                        xAxes: [{ display: false }],\r\n                        yAxes: [{ display: true, ticks: { precision: 0 } }]\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n\r\n        super.ngOnDestroy();\r\n\r\n        const request = {\r\n            requestId: new Date().getTime().toString(),\r\n            name: null\r\n        };\r\n\r\n        this.socket.send(SocketModels.QueueDetailRequest, request);\r\n    }\r\n\r\n    push(): void {\r\n        let dialogRef = this.dialog.open(QueuePushModalComponent, { width: '550px' });\r\n        let component = <QueuePushModalComponent>dialogRef.componentInstance;\r\n        component.message.queue = this.queueName;\r\n        component.onconfirmed\r\n            .pipe(take(1))\r\n            .subscribe(msg => {\r\n                if (msg)\r\n                    this.queueService\r\n                        .push(msg)\r\n                        .then(result => {\r\n\r\n                        });\r\n            });\r\n    }\r\n\r\n    read(): void {\r\n        this.queueService\r\n            .read(this.queueName)\r\n            .then(msg => this.showQueueMessage(msg));\r\n    }\r\n\r\n    consume(): void {\r\n        let dialogRef = this.dialog.open(ConfirmModalComponent, { width: '600px' });\r\n        let component = <ConfirmModalComponent>dialogRef.componentInstance;\r\n        component.message = 'Your message will be <b class=\"imp\">consumed.</b> You will see the message after you confirmed this. But queue consumers will not receive that message and it will be deleted <b class=\"imp\">permanently.</b>';\r\n        component.onclosed\r\n            .pipe(take(1))\r\n            .subscribe(value => {\r\n                if (value)\r\n                    this.queueService\r\n                        .consume(this.queueName)\r\n                        .then(msg => this.showQueueMessage(msg));\r\n            });\r\n    }\r\n\r\n    private showQueueMessage(message: QueueMessage): void {\r\n\r\n        if (message == null) {\r\n            alert('There is no message in the queue');\r\n            return;\r\n        }\r\n\r\n        let dialogRef = this.dialog.open(QueueMessageModalComponent, { width: '920px' });\r\n        let component = <QueueMessageModalComponent>dialogRef.componentInstance;\r\n        try {\r\n            message.messageObj = JSON.parse(message.message);\r\n        }\r\n        catch { }\r\n        component.message = message;\r\n    }\r\n\r\n    clear(): void {\r\n\r\n        let dialogRef = this.dialog.open(ConfirmModalComponent, { width: '600px' });\r\n        let component = <ConfirmModalComponent>dialogRef.componentInstance;\r\n        component.message = 'All messages in queue will be deleted <b class=\"imp\">permanently.</b>';\r\n        component.onclosed\r\n            .pipe(take(1))\r\n            .subscribe(value => {\r\n                if (value)\r\n                    this.queueService.clear(this.queueName)\r\n                        .then(r => this.load());\r\n            });\r\n    }\r\n\r\n    move(): void {\r\n        let dialogRef = this.dialog.open(MesssageMoveModalComponent, { width: '600px' });\r\n        let component = <MesssageMoveModalComponent>dialogRef.componentInstance;\r\n        component.messageCount = 321;\r\n        component.onconfirmed\r\n            .pipe(take(1))\r\n            .subscribe(target => {\r\n                if (target == null || target.length < 1)\r\n                    return;\r\n\r\n                target = target.trim();\r\n\r\n                this.queueService.move(this.queueName, target)\r\n                    .then(r => this.load());\r\n            });\r\n    }\r\n\r\n    remove(): void {\r\n\r\n        let dialogRef = this.dialog.open(ConfirmModalComponent, { width: '600px' });\r\n        let component = <ConfirmModalComponent>dialogRef.componentInstance;\r\n        component.message = 'You are about to delete your queue. The queue and all messages in it will be deleted <b class=\"imp\">permanently.</b>';\r\n        component.onclosed\r\n            .pipe(take(1))\r\n            .subscribe(value => {\r\n\r\n                if (value)\r\n                    this.queueService.delete(this.queueName)\r\n                        .then(r => {\r\n                            this.router.navigateByUrl('/queues');\r\n                        });\r\n\r\n            });\r\n    }\r\n\r\n    setStatus(status: string): void {\r\n\r\n        let dialogRef = this.dialog.open(ConfirmModalComponent, { width: '600px' });\r\n        let component = <ConfirmModalComponent>dialogRef.componentInstance;\r\n        component.message = 'You are about to change your queue status to <b class=\"imp\">' + status + '.</b> That operation might affect your producers and consumers.';\r\n        component.onclosed\r\n            .pipe(take(1))\r\n            .subscribe(value => {\r\n                if (value)\r\n                    this.queueService.status(this.queueName, status)\r\n                        .then(r => this.load());\r\n            });\r\n    }\r\n\r\n    changeOption(title: string, name: string, value: any): void {\r\n\r\n        let dialogRef = this.dialog.open(QueueOptionModalComponent, { width: '500px' });\r\n        let component = <QueueOptionModalComponent>dialogRef.componentInstance;\r\n\r\n        component.model.title = title;\r\n        component.model.property = name;\r\n        component.model.value = value;\r\n\r\n        component.onconfirmed\r\n            .pipe(take(1))\r\n            .subscribe(value => {\r\n                if (value.confirmed) {\r\n                    this.queueService.setOption(this.queueName, value.property, value.value).then(() => this.load());\r\n                }\r\n            });\r\n    }\r\n\r\n    resetStats(): void {\r\n\r\n        let dialogRef = this.dialog.open(ConfirmModalComponent, { width: '450px' });\r\n        let component = <ConfirmModalComponent>dialogRef.componentInstance;\r\n        component.message = 'Queue statistics will be reset. Are you sure?';\r\n        component.onclosed\r\n            .pipe(take(1))\r\n            .subscribe(value => {\r\n                if (value) {\r\n                    this.queueService\r\n                        .resetStats(this.queue.info.name)\r\n                        .then(() => {\r\n                            this.load();\r\n                        });\r\n                }\r\n            });\r\n    }\r\n}\r\n","<div class=\"centered-body\" [hidden]=\"queue == null\">\r\n  <div class=\"vertical-content\">\r\n    <div class=\"vertical-col\">\r\n      <div class=\"portlet\">\r\n        <h3 class=\"portlet-title\">Queue Delivery</h3>\r\n        <div class=\"portlet-body\" style=\"height: 330px;\">\r\n          <canvas id=\"queue-delivery-chart\"></canvas>\r\n        </div>\r\n      </div>\r\n      <div class=\"portlet\">\r\n        <h3 class=\"portlet-title\">Queue Messages</h3>\r\n        <div class=\"portlet-body\">\r\n          <canvas id=\"queue-store-chart\"></canvas>\r\n        </div>\r\n      </div>\r\n      <div class=\"portlet\" *ngIf=\"queue\">\r\n        <h3 class=\"portlet-title\">\r\n          Queue Statistics\r\n          <a (click)=\"resetStats()\">Reset</a>\r\n        </h3>\r\n        <div class=\"portlet-body\" style=\"min-height: 377px;\">\r\n          <div class=\"key-value-table\">\r\n            <div class=\"kvt-row\">\r\n              <div class=\"kvt-key\">Published Messages</div>\r\n              <div class=\"kvt-value\">{{queue.stats.totalReceived}}</div>\r\n            </div>\r\n            <div class=\"kvt-row\">\r\n              <div class=\"kvt-key\">Consumed Messages</div>\r\n              <div class=\"kvt-value\">{{queue.stats.totalDelivered}} consumes, {{queue.stats.totalSent}} unique msgs\r\n              </div>\r\n            </div>\r\n            <div class=\"kvt-row\">\r\n              <div class=\"kvt-key\">Acknowledge Messages</div>\r\n              <div class=\"kvt-value\">{{queue.stats.totalAck}} ack, {{queue.stats.totalNack}} nack,\r\n                {{queue.stats.totalUnack}} unack</div>\r\n            </div>\r\n            <div class=\"kvt-row\">\r\n              <div class=\"kvt-key\">Total Timed out Messages</div>\r\n              <div class=\"kvt-value\">{{queue.stats.totalTimedout}}</div>\r\n            </div>\r\n            <div class=\"kvt-row\">\r\n              <div class=\"kvt-key\">Total Errors</div>\r\n              <div class=\"kvt-value\">{{queue.stats.totalErrors}}</div>\r\n            </div>\r\n            <div class=\"kvt-row\">\r\n              <div class=\"kvt-key\">Last Publish Date</div>\r\n              <div class=\"kvt-value\" *ngIf=\"queue.stats.lastReceived > 0\">{{(queue.stats.lastReceived*1000) |\r\n                date:'yyyy-MM-dd HH:mm:ss'}}</div>\r\n              <div class=\"kvt-value\" *ngIf=\"queue.stats.lastReceived == 0\">None</div>\r\n            </div>\r\n            <div class=\"kvt-row\">\r\n              <div class=\"kvt-key\">Last Consume Date</div>\r\n              <div class=\"kvt-value\" *ngIf=\"queue.stats.lastSent > 0\">\r\n                {{(queue.stats.lastSent*1000) | date:'yyyy-MM-dd HH:mm:ss'}}\r\n              </div>\r\n              <div class=\"kvt-value\" *ngIf=\"queue.stats.lastSent == 0\">None</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"vertical-col\">\r\n      <div *ngIf=\"queue\">\r\n        <div class=\"portlet\">\r\n          <h3 class=\"portlet-title\">Queue Actions</h3>\r\n          <div class=\"portlet-body\" style=\"height: 330px\">\r\n            <div class=\"queue-panel\">\r\n              <div class=\"operation-panel\">\r\n                <div>\r\n                  <button (click)=\"push()\" class=\"operation-button btn-green\">Push New Message</button>\r\n                  <p>Creates and pushes a message into the queue</p>\r\n                </div>\r\n                <div>\r\n                  <button (click)=\"read()\" class=\"operation-button btn-yellow\">Read First Message</button>\r\n                  <p>Shows the first message information. Message will <b>not</b> be consumed.</p>\r\n                </div>\r\n                <div>\r\n                  <button (click)=\"consume()\" class=\"operation-button btn-cyan\">Consume First Message</button>\r\n                  <p>Shows the first message information. Message will be <b>consumed.</b></p>\r\n                </div>\r\n                <div>\r\n                  <button (click)=\"move()\" class=\"operation-button btn-purple\">Move Messages</button>\r\n                  <p>Moves all messages to another queue and removes them <b>permanently.</b></p>\r\n                </div>\r\n                <div>\r\n                  <button (click)=\"clear()\" class=\"operation-button btn-orange\">Clear All Messages</button>\r\n                  <p>Clears queue. Deletes all messages <b>permanently!</b></p>\r\n                </div>\r\n                <div>\r\n                  <button (click)=\"remove()\" class=\"operation-button btn-red\">Delete Queue</button>\r\n                  <p>Deletes queue and <b>all messages</b> in it <b>permanently!</b></p>\r\n                </div>\r\n              </div>\r\n              <div class=\"status-panel\">\r\n                <div>\r\n                  <em>Current Status</em>\r\n                  <strong>{{queue.info.status}}</strong>\r\n                </div>\r\n                <div>\r\n                  <em>New Status</em>\r\n                  <div>\r\n                    <button (click)=\"setStatus('Paused')\" class=\"status-button btn-orange\">Paused</button>\r\n                  </div>\r\n                  <div>\r\n                    <button (click)=\"setStatus('Running')\" class=\"status-button btn-green\">Running</button>\r\n                  </div>\r\n                  <div>\r\n                    <button (click)=\"setStatus('OnlyPush')\" class=\"status-button btn-purple\">Only Push</button>\r\n                  </div>\r\n                  <div>\r\n                    <button (click)=\"setStatus('OnlyConsume')\" class=\"status-button btn-cyan\">Only Consume</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"portlet\">\r\n          <h3 class=\"portlet-title\">Queue Information</h3>\r\n          <div class=\"portlet-body\" style=\"height: 790px;\">\r\n            <div class=\"key-value-table\">\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Name</div>\r\n                <div class=\"kvt-value\">{{queue.info.name}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Active Consumers</div>\r\n                <div class=\"kvt-value\">{{queue.stats.consumers}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Stored Messages</div>\r\n                <div class=\"kvt-value\">{{queue.stats.storedMsgs + queue.stats.storedPrioMsgs +\r\n                  queue.stats.processingMsgs + queue.stats.ackPendingMsgs}}</div>\r\n              </div>\r\n              <div class=\"kvt-row kvt-seperator\"></div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Topic</div>\r\n                <div class=\"kvt-value\">\r\n                  {{queue.info.topic ?? \"-\"}}\r\n                  <a class=\"change-option\" (click)=\"changeOption('Topic', 'topic', queue.info.topic)\">Change</a>\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Type</div>\r\n                <div class=\"kvt-value\">{{queue.info.type}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Manager</div>\r\n                <div class=\"kvt-value\">{{queue.info.manager}}</div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Consumer Limit</div>\r\n                <div class=\"kvt-value\">\r\n                  {{queue.options.clientLimit | unlimited}}\r\n                  <a class=\"change-option\" (click)=\"changeOption('Consumer Limit', 'clientLimit', queue.options.clientLimit)\">Change</a>\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Created Date</div>\r\n                <div class=\"kvt-value\">{{(queue.info.createdDate*1000) | date:'yyyy-MM-dd HH:mm:ss'}}</div>\r\n              </div>\r\n              <div class=\"kvt-row kvt-seperator\"></div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Acknowledge</div>\r\n                <div class=\"kvt-value\">\r\n                  {{queue.info.acknowledge}}\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Acknowledge Timeout</div>\r\n                <div class=\"kvt-value\" *ngIf=\"queue.info.ackTimeout > 0\">\r\n                  {{queue.info.ackTimeout}} ms Timeout\r\n                  <a class=\"change-option\" (click)=\"changeOption('Acknowledge Timeout', 'ackTimeout', queue.info.ackTimeout)\">Change</a>\r\n                </div>\r\n                <div class=\"kvt-value\" *ngIf=\"queue.info.ackTimeout == 0\">\r\n                  No Timeout\r\n                  <a class=\"change-option\" (click)=\"changeOption('Acknowledge Timeout', 'ackTimeout', queue.info.ackTimeout)\">Change</a>\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Commit When</div>\r\n                <div class=\"kvt-value\">\r\n                  {{queue.options.commitWhen}}\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row kvt-seperator\"></div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Message Timeout</div>\r\n                <div class=\"kvt-value\" *ngIf=\"queue.info.msgTimeout == 0\">No Timeout</div>\r\n                <div class=\"kvt-value\" *ngIf=\"queue.info.msgTimeout > 0\">\r\n                  {{queue.info.msgTimeout}} Milliseconds\r\n                  <a class=\"change-option\" (click)=\"changeOption('Message Timeout', 'msgTimeout', queue.info.msgTimeout)\">Change</a>\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Message Limit</div>\r\n                <div class=\"kvt-value\">\r\n                  {{queue.info.msgLimit | unlimited}}\r\n                  <a class=\"change-option\" (click)=\"changeOption('Message Timeout', 'msgLimit', queue.info.msgLimit)\">Change</a>\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Message Size Limit</div>\r\n                <div class=\"kvt-value\">\r\n                  {{queue.info.msgSizeLimit | filesize}}\r\n                  <a class=\"change-option\"\r\n                     (click)=\"changeOption('Message Size Limit', 'msgSizeLimit', queue.info.msgSizeLimit)\">Change</a>\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row kvt-seperator\"></div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Delay Between Messages</div>\r\n                <div class=\"kvt-value\" *ngIf=\"queue.info.delayBetweenMsgs == 0\">\r\n                  No Delay\r\n                  <a class=\"change-option\"\r\n                     (click)=\"changeOption('Delay Between Messages', 'delayBetweenMsgs', queue.info.delayBetweenMsgs)\">Change</a>\r\n                </div>\r\n                <div class=\"kvt-value\" *ngIf=\"queue.info.delayBetweenMsgs > 0\">\r\n                  {{queue.info.delayBetweenMsgs}} Milliseconds\r\n                  <a class=\"change-option\"\r\n                     (click)=\"changeOption('Delay Between Messages', 'delayBetweenMsgs', queue.info.delayBetweenMsgs)\">Change</a>\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Put Back Delay</div>\r\n                <div class=\"kvt-value\" *ngIf=\"queue.info.putBackDelay == 0\">\r\n                  No Delay\r\n                  <a class=\"change-option\" (click)=\"changeOption('Put Back Delay', 'putBackDelay', queue.info.putBackDelay)\">Change</a>\r\n                </div>\r\n                <div class=\"kvt-value\" *ngIf=\"queue.info.putBackDelay > 0\">\r\n                  {{queue.info.putBackDelay}} Milliseconds\r\n                  <a class=\"change-option\" (click)=\"changeOption('Put Back Delay', 'putBackDelay', queue.info.putBackDelay)\">Change</a>\r\n                </div>\r\n              </div>\r\n              <div class=\"kvt-row\">\r\n                <div class=\"kvt-key\">Auto Destroy</div>\r\n                <div class=\"kvt-value\">\r\n                  {{queue.info.autoDestroy}}\r\n                  <a class=\"change-option\" (click)=\"changeOption('Auto Destroy', 'autoDestroy', queue.info.autoDestroy)\">Change</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"centered-body\" *ngIf=\"queue && queue.consumers\">\r\n  <div class=\"vertical-content\">\r\n    <div class=\"portlet full\">\r\n      <h3 class=\"portlet-title\">Queue Consumers</h3>\r\n      <div class=\"portlet-body table table-small\">\r\n        <div class=\"thead\">\r\n          <div class=\"th fx14\">Type</div>\r\n          <div class=\"th fx14\">Name</div>\r\n          <div class=\"th fx22\">Id</div>\r\n          <div class=\"th fx10\">Subscribed Date</div>\r\n          <div class=\"th fx10\">Consumed</div>\r\n          <div class=\"th fx10\">Acknowledged</div>\r\n          <div class=\"th fx10\">Ack Timed out</div>\r\n          <div class=\"th fx10\">Status</div>\r\n        </div>\r\n        <div class=\"tbody\">\r\n          <div class=\"trow\" *ngFor=\"let consumer of queue.consumers\">\r\n            <div class=\"td fx14\"><span>{{consumer.type}}</span></div>\r\n            <div class=\"td fx14\"><span>{{consumer.name}}</span></div>\r\n            <div class=\"td fx22\"><a routerLink=\"/client/{{consumer.id}}\">{{consumer.id}}</a></div>\r\n            <div class=\"td fx10\"><span>{{(consumer.subscriptionDate*1000)| date: 'yyyy-MM-dd HH:mm:ss'}}</span></div>\r\n            <div class=\"td fx10\"><span>{{consumer.consumes}}</span></div>\r\n            <div class=\"td fx10\"><span>{{consumer.acks}}</span></div>\r\n            <div class=\"td fx10\"><span>{{consumer.ackTimeouts}}</span></div>\r\n            <div class=\"td fx10\" *ngIf=\"consumer.currentlyProcessing\">\r\n              <span>Processing</span>\r\n              <em>{{(consumer.processingDeadline*1000)| date: 'yyyy-MM-dd HH:mm:ss'}}</em>\r\n            </div>\r\n            <div class=\"td fx10\" *ngIf=\"!consumer.currentlyProcessing\"><span>Idle</span></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div style=\"height: 80px;\"></div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PipesModule } from '../../layout/pipes/pipes.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { QueueMessageModalComponent } from './queue-message-modal/queue-message-modal.component';\r\nimport { MesssageMoveModalComponent } from './messsage-move-modal/messsage-move-modal.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { QueuePushModalComponent } from './queue-push-modal/queue-push-modal.component';\r\nimport { QueueOptionModalComponent } from './queue-option-modal/queue-option-modal.component';\r\nimport { QueueDetailComponent } from './queue-detail.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        QueueDetailComponent,\r\n        QueueMessageModalComponent,\r\n        MesssageMoveModalComponent,\r\n        QueuePushModalComponent,\r\n        QueueOptionModalComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        PipesModule,\r\n        MatDialogModule,\r\n        FormsModule,\r\n        RouterModule.forChild([{ path: ':name', component: QueueDetailComponent }])\r\n    ],\r\n    schemas: [\r\n        CUSTOM_ELEMENTS_SCHEMA\r\n    ]\r\n})\r\nexport class QueueModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { QueueMessage } from 'src/app/queue/models/queue-message';\n\n@Component({\n  selector: 'app-queue-message-modal',\n  templateUrl: './queue-message-modal.component.html',\n  styleUrls: ['./queue-message-modal.component.css']\n})\nexport class QueueMessageModalComponent implements OnInit {\n\n  message: QueueMessage;\n  consumed: boolean = false;\n  isJson: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  setJson(value: boolean) {\n    this.isJson = value;\n  }\n}\n","<h2 class=\"title\" mat-dialog-title>Queue Message</h2>\n<mat-dialog-content class=\"content\">\n    <div class=\"queue-message\">\n        <div class=\"message-props\">\n            <div class=\"key-value-table\">\n                <div class=\"kvt-row\">\n                    <div class=\"kvt-key-narrow\">Id</div>\n                    <div class=\"kvt-value\">{{message.id}}</div>\n                </div>\n                <div class=\"kvt-row\">\n                    <div class=\"kvt-key-narrow\">Source</div>\n                    <div class=\"kvt-value\">{{message.source}}</div>\n                </div>\n                <div class=\"kvt-row\">\n                    <div class=\"kvt-key-narrow\">High Priority</div>\n                    <div class=\"kvt-value\">{{message.priority}}</div>\n                </div>\n                <div class=\"kvt-row\">\n                    <div class=\"kvt-key-narrow\">Created Date</div>\n                    <div class=\"kvt-value\">\n                        {{(message.createdDate*1000) | date:'yyyy-MM-dd HH:mm:ss'}}\n                    </div>\n                </div>\n                <div class=\"kvt-row\">\n                    <div class=\"kvt-key-narrow\">Deadline</div>\n                    <div class=\"kvt-value\">\n                        {{ message.deadline == 0 ? 'No' : (message.deadline*1000) | date:'yyyy-MM-dd HH:mm:ss'}}\n                    </div>\n                </div>\n                <div class=\"kvt-row\">\n                    <div class=\"kvt-key-narrow\">Persistently Saved</div>\n                    <div class=\"kvt-value\">{{message.isSaved}}</div>\n                </div>\n                <div class=\"kvt-row\">\n                    <div class=\"kvt-key-narrow\">Send Count</div>\n                    <div class=\"kvt-value\">{{message.sendCount}}</div>\n                </div>\n                <div class=\"kvt-row\">\n                    <div class=\"kvt-key-narrow\">Delivery Count</div>\n                    <div class=\"kvt-value\">{{message.deliveryCount}}</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"message-content\">\n            <h4>Headers</h4>\n            <div class=\"message-headers\">\n                <div class=\"key-value-table\" *ngIf=\"message.headers.length > 0\">\n                    <div class=\"kvt-row\" *ngFor=\"let h of message.headers\">\n                        <div class=\"kvt-key\">{{h.name}}</div>\n                        <div class=\"kvt-value\">{{h.value}}</div>\n                    </div>\n                </div>\n                <p *ngIf=\"message.headers.length == 0\">\n                    The message has no headers\n                </p>\n            </div>\n            <div class=\"message-content-title\">\n                <h4>Message Content</h4>\n                <span (click)=\"setJson(false)\" [class.active]=\"!isJson\">String</span>\n                <span (click)=\"setJson(true)\" [class.active]=\"isJson\">JSON</span>\n            </div>\n            <div class=\"string-content\" *ngIf=\"!isJson\">{{message.message}}</div>\n            <pre class=\"string-content\"  *ngIf=\"isJson\" [innerHTML]=\"message.messageObj | prettyprint\"></pre>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions class=\"buttons\">\n    <button mat-button mat-dialog-close class=\"modal-btn btn-grey\">Close</button>\n</mat-dialog-actions>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nexport interface OptionValue {\n  confirmed: boolean;\n  title: string;\n  property: string;\n  value: any;\n}\n\n@Component({\n  selector: 'app-queue-option-modal',\n  templateUrl: './queue-option-modal.component.html',\n  styleUrls: ['./queue-option-modal.component.css']\n})\nexport class QueueOptionModalComponent implements OnInit, OnDestroy {\n\n  private _onconfirmed: Subject<OptionValue> = new Subject<OptionValue>();\n  get onconfirmed(): Observable<OptionValue> { return this._onconfirmed; }\n\n  messageCount: number;\n  model: OptionValue = { confirmed: false, title: '', property: '', value: null };\n\n  private _confirmed = false;\n\n  autoDestroyItems = [\n    { value: 'Disabled', text: 'Queue stays forever. It\\'s removed only manually.' },\n    { value: 'NoMessages', text: 'Queue is destroyed if empty' },\n    { value: 'NoConsumers', text: 'Queue is destroyed if there are no consumers (even not empty)' },\n    { value: 'Empty', text: 'Queue is destroyed when it\\'s empty and there are no consumers' }\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  confirm(): void {\n    this._confirmed = true;\n    this.model.confirmed = true;\n    this._onconfirmed.next(this.model);\n  }\n\n  ngOnDestroy(): void {\n    if (!this._confirmed) {\n      this.model.confirmed = false;\n      this._onconfirmed.next(this.model);\n    }\n  }\n}","<h2 class=\"title\" mat-dialog-title>Queue Option Change</h2>\n<mat-dialog-content class=\"content\">\n    <div class=\"form-item\">\n        <label>{{model.title}}</label>\n        \n        <input *ngIf=\"model.property != 'autoDestroy'\" placeholder=\"Option Value\" class=\"target-text\" type=\"text\" [(ngModel)]=\"model.value\" />\n\n        <select *ngIf=\"model.property == 'autoDestroy'\" [(ngModel)]=\"model.value\" class=\"jockey-select\">\n            <option [ngValue]=\"i.value\" *ngFor=\"let i of autoDestroyItems\">{{i.text}}</option>\n        </select>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions class=\"buttons\">\n    <button (click)=\"confirm()\" mat-button mat-dialog-close class=\"modal-btn btn-green\">Confirm</button>\n    <button mat-button mat-dialog-close class=\"modal-btn btn-grey\">Cancel</button>\n</mat-dialog-actions>","import { Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { QueuePushMessage } from 'src/app/queue/models/queue-message';\n\n@Component({\n  selector: 'app-queue-push-modal',\n  templateUrl: './queue-push-modal.component.html',\n  styleUrls: ['./queue-push-modal.component.css']\n})\nexport class QueuePushModalComponent implements OnInit, OnDestroy {\n\n  message: QueuePushMessage;\n\n  addingHeaderKey: string;\n  addingHeaderValue: string;\n\n  @ViewChild('headerKeyInput')\n  headerKeyInput: ElementRef;\n\n  @ViewChild('headerValueInput')\n  headerValueInput: ElementRef;\n\n  private _onconfirmed: Subject<QueuePushMessage> = new Subject<QueuePushMessage>();\n  get onconfirmed(): Observable<QueuePushMessage> { return this._onconfirmed; }\n  private _confirmed: boolean = false;\n\n  constructor() {\n    this.message = new QueuePushMessage();\n    this.message.id = this.generateUUID();\n    this.message.headers = [];\n    this.message.contentType = 0;\n    this.message.priority = false;\n    this.message.message = \"\";\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnDestroy(): void {\n    if (!this._confirmed)\n      this._onconfirmed.next(null);\n  }\n\n  headerKeyUp(key: boolean, event: KeyboardEvent) {\n    if (event.key == 'Enter') {\n      if (key)\n        this.headerValueInput.nativeElement.focus();\n      else\n        this.addHeader();\n    }\n  }\n\n  removeHeader(key: string): void {\n    let index = this.message.headers.findIndex(x => x.name == key);\n    if (index < 0)\n      return;\n\n    this.message.headers.splice(index, 1);\n  }\n\n  addHeader(): void {\n\n    let key = this.addingHeaderKey.trim();\n    let value = this.addingHeaderValue.trim();\n\n    if (key.length < 1 || value.length < 1)\n      return;\n\n    this.message.headers.push({ name: key, value: value });\n    this.addingHeaderKey = '';\n    this.addingHeaderValue = '';\n    this.headerKeyInput.nativeElement.focus();\n  }\n\n  push(): void {\n    this._confirmed = true;\n    this._onconfirmed.next(this.message);\n  }\n\n  private generateUUID() { // Public Domain/MIT\n    var d = new Date().getTime();//Timestamp\n    var d2 = ((typeof performance !== 'undefined') && performance.now && (performance.now() * 1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16;//random number between 0 and 16\n      if (d > 0) {//Use timestamp until depleted\n        r = (d + r) % 16 | 0;\n        d = Math.floor(d / 16);\n      } else {//Use microseconds since page-load if supported\n        r = (d2 + r) % 16 | 0;\n        d2 = Math.floor(d2 / 16);\n      }\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n  }\n}\n","<h2 class=\"title\" mat-dialog-title>Push New Queue Message</h2>\n<mat-dialog-content class=\"content\">\n    <div class=\"queue-message\">\n        <h4>Message Properties</h4>\n        <div class=\"key-value-table\">\n            <div class=\"kvt-row\">\n                <div class=\"kvt-key-narrow\">Id</div>\n                <div class=\"kvt-value\">\n                    <input class=\"jockey-text\" type=\"text\" style=\"width: 280px;\" [(ngModel)]=\"message.id\" />\n                </div>\n            </div>\n            <div class=\"kvt-row\">\n                <div class=\"kvt-key-narrow\">Content Type</div>\n                <div class=\"kvt-value\">\n                    <input class=\"jockey-text\" type=\"number\" style=\"width: 120px;\" min=\"0\" max=\"65535\"\n                        [(ngModel)]=\"message.contentType\" />\n                </div>\n            </div>\n            <div class=\"kvt-row\">\n                <div class=\"kvt-key-narrow\">High Priority</div>\n                <div class=\"kvt-value\">\n                    <input class=\"jockey-text\" type=\"checkbox\" [(ngModel)]=\"message.priority\" />\n                </div>\n            </div>\n        </div>\n        <br>\n        <h4>Headers</h4>\n        <div class=\"message-headers\">\n            <div class=\"header-scroll scroll\">\n                <table class=\"message-header-table\">\n                    <tr *ngFor=\"let h of message.headers\">\n                        <td class=\"header-key\">{{h.name}}</td>\n                        <td class=\"header-value\">{{h.value}}</td>\n                        <td class=\"header-action\"><span (click)=\"removeHeader(h.name)\">Remove</span></td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class=\"header-row\">\n            <div class=\"header-input\">\n                <input #headerKeyInput (keyup)=\"headerKeyUp(true, $event)\" class=\"jockey-text\" placeholder=\"Key\"\n                    type=\"text\" [(ngModel)]=\"addingHeaderKey\" />\n            </div>\n            <div class=\"header-seperator\">:</div>\n            <div class=\"header-input\">\n                <input #headerValueInput (keyup)=\"headerKeyUp(false, $event)\" class=\"jockey-text\" placeholder=\"Value\"\n                    type=\"text\" [(ngModel)]=\"addingHeaderValue\" />\n            </div>\n        </div>\n        <br>\n        <h4>Message Content</h4>\n        <textarea class=\"jockey-text scroll\" [(ngModel)]=\"message.message\"></textarea>\n    </div>\n\n</mat-dialog-content>\n<mat-dialog-actions class=\"buttons\">\n    <button (click)=\"push()\" mat-button mat-dialog-close class=\"modal-btn btn-green\">Push Message</button>\n    <button mat-button mat-dialog-close class=\"modal-btn btn-grey\">Close</button>\n</mat-dialog-actions>","\r\nexport interface QueueMessageHeader {\r\n    name: string;\r\n    value: string;\r\n}\r\n\r\nexport interface QueueMessage {\r\n\r\n    id: string;\r\n    source: string;\r\n    contentType: number;\r\n    priority: boolean;\r\n    message: string;\r\n    headers: QueueMessageHeader[];\r\n    createdDate: number;\r\n    deadline: number;\r\n    isSaved: boolean;\r\n    sendCount: number;\r\n    deliveryCount: number;\r\n    messageObj: any;\r\n}\r\n\r\nexport class QueuePushMessage {\r\n    queue: string;\r\n    id: string;\r\n    contentType: number;\r\n    priority: boolean;\r\n    headers: QueueMessageHeader[];\r\n    message: string;\r\n}"],"names":[],"sourceRoot":"webpack:///"}