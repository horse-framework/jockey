{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/layout/guest-layout/guest-layout.component.ts","webpack:///src/app/layout/guest-layout/guest-layout.component.html","webpack:///src/app/layout/guest-layout/guest-layout.module.ts","webpack:///src/app/layout/portal-layout/portal-layout.component.ts","webpack:///src/app/layout/portal-layout/portal-layout.component.html","webpack:///src/app/layout/portal-layout/portal-layout.module.ts","webpack:///src/environments/environment.ts","webpack:///src/interceptors/session.guard.ts","webpack:///src/lib/api-client.ts","webpack:///src/lib/base-component.ts","webpack:///src/lib/base64-helper.ts","webpack:///src/main.ts","webpack:///src/models/api-response.ts","webpack:///src/models/session-user.ts","webpack:///src/services/client.service.ts","webpack:///src/services/dashboard.service.ts","webpack:///src/services/graph.service.ts","webpack:///src/services/login.service.ts","webpack:///src/services/queue.service.ts","webpack:///src/services/route.service.ts","webpack:///src/services/session.service.ts","webpack:///src/services/websocket.service.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","loadChildren","m","QueueModule","canActivate","QueuesModule","RouteModule","RoutesModule","ClientsModule","NodesModule","HandlersModule","LoginModule","DashboardModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","GuestLayoutComponent","GuestLayoutModule","schemas","PortalLayoutComponent","session","router","user","get","version","clear","navigateByUrl","PortalLayoutModule","environment","production","api","url","storage","token","SessionGuard","next","state","providedIn","ApiClient","http","contentType","headers","set","length","httpOptions","withCredentials","progress","requestProgress","request","model","JSON","stringify","form","json","method","body","pipe","input","options","getOptions","fullUrl","indexOf","url_slash","startsWith","post","put","patch","value","response","result","statusCode","statusMessage","data","success","err","status","message","error","finished","canceled","reportProgress","observe","type","UploadProgress","num","Math","round","loaded","total","Response","toPromise","ok","BaseComponent","_destroyed","observable","Base64Helper","plain","btoa","encodeURIComponent","replace","match","p1","String","fromCharCode","parseInt","encoded","decodeURIComponent","atob","split","map","c","charCodeAt","toString","slice","join","sp","decoded","decode","full","n1","randomizeInteger","n2","start","_keyStr","substr","n3","n4","end","str","encode","cipher","min","max","Number","MAX_SAFE_INTEGER","ceil","floor","random","bootstrapModule","console","ApiResponse","SessionUser","ClientService","socket","_clients","_onconnected","_ondisconnected","client","DashboardService","GraphService","_pipe","_maxLength","_onupdated","_data","splice","_labels","createLabels","content","labels","i","item","push","findTimeFromUnixSeconds","date","unix","Date","transform","LoginService","username","password","QueueService","_queues","_oncreated","_onremoved","queue","RouteService","SessionService","_current","read","_changed","subscribe","login","localStorage","setItem","deserialize","current","getItem","old","removeItem","token_info","parse","readBearer","sub","name","expiration","exp","WebsocketService"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SessionGuard } from 'src/interceptors/session.guard';\nimport { GuestLayoutComponent } from './layout/guest-layout/guest-layout.component';\nimport { PortalLayoutComponent } from './layout/portal-layout/portal-layout.component';\n\n\nconst routes: Routes = [\n    {\n        path: 'queue',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./queue/queue.module').then(m => m.QueueModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'queues',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./queues/queues.module').then(m => m.QueuesModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'route',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./route/route.module').then(m => m.RouteModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'routes',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./routes/routes.module').then(m => m.RoutesModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'clients',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./clients/clients.module').then(m => m.ClientsModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'nodes',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./nodes/nodes.module').then(m => m.NodesModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'handlers',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./handlers/handlers.module').then(m => m.HandlersModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'login',\n        component: GuestLayoutComponent,\n        loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\n    },\n    {\n        path: 'dashboard',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: '',\n        redirectTo: 'dashboard',\n        pathMatch: 'full'\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { BaseComponent } from 'src/lib/base-component';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent extends BaseComponent {\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WebsocketService } from 'src/services/websocket.service';\nimport { SessionService } from 'src/services/session.service';\nimport { RouteService } from 'src/services/route.service';\nimport { QueueService } from 'src/services/queue.service';\nimport { LoginService } from 'src/services/login.service';\nimport { ClientService } from 'src/services/client.service';\nimport { GuestLayoutModule } from './layout/guest-layout/guest-layout.module';\nimport { PortalLayoutModule } from './layout/portal-layout/portal-layout.module';\nimport { ApiClient } from 'src/lib/api-client';\nimport { GraphService } from 'src/services/graph.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DashboardService } from 'src/services/dashboard.service';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        GuestLayoutModule,\n        PortalLayoutModule,\n        HttpClientModule\n    ],\n    providers: [\n        WebsocketService,\n        DashboardService,\n        SessionService,\n        RouteService,\n        QueueService,\n        LoginService,\n        ClientService,\n        GraphService,\n        ApiClient\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from 'src/lib/base-component';\n\n@Component({\n    selector: 'app-guest-layout',\n    templateUrl: './guest-layout.component.html',\n    styleUrls: ['./guest-layout.component.css']\n})\nexport class GuestLayoutComponent extends BaseComponent implements OnInit {\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div class=\"gbody\">\n    <div class=\"gframe\">\n        <div class=\"glogo\">\n            <img src=\"/assets/horse.svg\" alt=\"Horse MQ\" />\n            <div>\n                <h2>Jockey</h2>\n                <h1>Horse Messaging Queue Server</h1>\n            </div>\n        </div>\n        <div class=\"gcontent\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GuestLayoutComponent } from './guest-layout.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    declarations: [GuestLayoutComponent],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    schemas: [\n        CUSTOM_ELEMENTS_SCHEMA\n    ]\n})\nexport class GuestLayoutModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { BaseComponent } from 'src/lib/base-component';\nimport { SessionUser } from 'src/models/session-user';\nimport { SessionService } from 'src/services/session.service';\n\n@Component({\n    selector: 'app-portal-layout',\n    templateUrl: './portal-layout.component.html',\n    styleUrls: ['./portal-layout.component.css']\n})\nexport class PortalLayoutComponent extends BaseComponent implements OnInit {\n\n    user: SessionUser;\n    version: string;\n\n    constructor(private session: SessionService, private router: Router) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.user = this.session.get();\n        this.version = environment.version;\n    }\n\n    logout(): void {\n        this.session.clear();\n        this.router.navigateByUrl('/login');\n    }\n\n}\n","<header>\n    <div class=\"headline\">\n        <div class=\"logo\">\n            <img src=\"/assets/horse.svg\" alt=\"Horse MQ\" />\n            <div>\n                <h1>Horse MQ Jockey</h1>\n                <em>Version {{version}}</em>\n            </div>\n        </div>\n        <div class=\"menu\">\n            <ul>\n                <li><a routerLinkActive=\"active\" routerLink=\"/dashboard\">Dashboard</a></li>\n                <li><a routerLinkActive=\"active\" routerLink=\"/queues\">Queues</a></li>\n                <li><a routerLinkActive=\"active\" routerLink=\"/routes\">Routes</a></li>\n                <li><a routerLinkActive=\"active\" routerLink=\"/clients\">Clients</a></li>\n                <li><a routerLinkActive=\"active\" routerLink=\"/nodes\">Nodes</a></li>\n                <li><a routerLinkActive=\"active\" routerLink=\"/handlers\">Handlers</a></li>\n            </ul>\n        </div>\n        <div class=\"user\" *ngIf=\"user\">\n            <span class=\"user-name\">{{user.name}}</span>\n            <button class=\"logout\" (click)=\"logout()\">Logout</button>\n        </div>\n    </div>\n</header>\n<div class=\"portal-content\">\n    <router-outlet></router-outlet>\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PortalLayoutComponent } from './portal-layout.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    declarations: [PortalLayoutComponent],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    schemas: [\n        CUSTOM_ELEMENTS_SCHEMA\n    ]\n})\nexport class PortalLayoutModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    version: '5.0.3',\n\n    api: {\n        url: 'http://localhost:9998/api'\n    },\n\n    storage: {\n        token: 'token'\n    }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SessionService } from 'src/services/session.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionGuard implements CanActivate {\n\n    constructor(private session: SessionService, private router: Router) { }\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n        let user = this.session.get();\n        if (user == null) {\n            this.router.navigateByUrl('/login');\n        }\n        \n        return user != null;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpEventType } from '@angular/common/http';\nimport { SessionService } from 'src/services/session.service';\nimport { TransactionResult } from 'src/models/transaction-result';\nimport { catchError, filter, map, mergeMap, take, takeWhile } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { RequestProgress } from 'src/models/request-progress';\nimport { environment } from 'src/environments/environment';\nimport { ApiResponse, IResponse } from 'src/models/api-response';\n\n@Injectable({ providedIn: 'root' })\nexport class ApiClient {\n\n    constructor(private http: HttpClient, private session: SessionService) {\n    }\n\n    private getOptions(contentType: string): any {\n        let user = this.session.get();\n\n        let headers = new HttpHeaders();\n        headers = headers.set('Access-Control-Allow-Origin', '*');\n\n        if (contentType != null)\n            headers = headers.set('Content-Type', contentType);\n\n        if (user != null && user.token != null && user.token.length > 0)\n            headers = headers.set('Authorization', 'Bearer ' + user.token);\n\n        let httpOptions = {\n            headers: headers,\n            withCredentials: true\n        };\n\n        return httpOptions;\n    }\n\n    get(url: string, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'GET', url, null, progress);\n\n        return this.request(true, 'GET', url, null);\n    }\n\n    delete(url: string, model?: any, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'DELETE', url, JSON.stringify(model), progress);\n\n        return this.request(true, 'DELETE', url, JSON.stringify(model));\n    }\n\n    post(url: string, model: any, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'POST', url, JSON.stringify(model), progress);\n\n        return this.request(true, 'POST', url, JSON.stringify(model));\n    }\n\n    put(url: string, model: any, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'PUT', url, JSON.stringify(model), progress);\n\n        return this.request(true, 'PUT', url, JSON.stringify(model));\n    }\n\n    patch(url: string, model: any, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'PATCH', url, JSON.stringify(model), progress);\n\n        return this.request(true, 'PATCH', url, JSON.stringify(model));\n    }\n\n    postForm(url: string, form: FormData, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(false, 'POST', url, form, progress);\n\n        return this.request(false, 'POST', url, form);\n    }\n\n    putForm(url: string, form: FormData, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(false, 'PUT', url, form, progress);\n\n        return this.request(false, 'PUT', url, form);\n    }\n\n    patchForm(url: string, form: FormDataEntryValue, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(false, 'PATCH', url, form, progress);\n\n        return this.request(false, 'PATCH', url, form);\n    }\n\n    request(json: boolean, method: string, url: string, body: any): Observable<IResponse> {\n        return of({\n            json: json,\n            method: method,\n            url: url,\n            body: body\n        }).pipe(\n\n            //subscribe only once\n            take(1),\n\n            //prepares the request\n            mergeMap(input => {\n                let options = this.getOptions(input.json ? 'application/json' : null);\n\n                let fullUrl = input.url;\n                if (fullUrl.indexOf('//') < 0) {\n                    let url_slash = '';\n                    if (!fullUrl.startsWith('/'))\n                        url_slash = '/';\n\n                    fullUrl = environment.api.url + url_slash + fullUrl;\n                }\n\n                switch (method) {\n                    case 'GET':\n                        return this.http.get<any>(fullUrl, options);\n\n                    case 'DELETE':\n                        return this.http.delete<any>(fullUrl, options);\n\n                    case 'POST':\n                        return this.http.post<any>(fullUrl, body, options);\n\n                    case 'PUT':\n                        return this.http.put<any>(fullUrl, body, options);\n\n                    case 'PATCH':\n                        return this.http.patch<any>(fullUrl, body, options);\n\n                }\n\n                return of(null);\n            }),\n\n            //gets the response\n            map(value => {\n                var response: any = value;\n                let result = new ApiResponse();\n                result.statusCode = 200;\n                result.statusMessage = 'OK';\n                result.data = response;\n                result.success = true;\n\n                return result;\n            }),\n\n            //gets the failed response\n            catchError(err => {\n                let e = <HttpErrorResponse>err;\n\n                let result = new ApiResponse();\n                result.statusCode = e.status;\n                result.statusMessage = e.message;\n                result.error = e.error;\n                result.success = false;\n\n                if (result.statusCode == 401)\n                    this.session.clear();\n\n                return of(result);\n            })\n        );\n\n    }\n\n    requestProgress(json: boolean, method: string, url: string, body: any, progress: RequestProgress): Observable<IResponse> {\n        let finished = false;\n\n        return of({\n            json: json,\n            method: method,\n            url: url,\n            body: body\n        }).pipe(\n\n            //subscribe only once\n            takeWhile(() => !finished && !progress.canceled),\n\n            //prepares the request\n            mergeMap(input => {\n                let options = this.getOptions(input.json ? 'application/json' : null);\n                options.reportProgress = true;\n                options.observe = 'events';\n\n                let fullUrl = input.url;\n                if (fullUrl.indexOf('//') < 0) {\n                    let url_slash = '';\n                    if (!fullUrl.startsWith('/'))\n                        url_slash = '/';\n\n                    fullUrl = environment.api.url + url_slash + fullUrl;\n                }\n\n                switch (method) {\n                    case 'GET':\n                        return this.http.get<any>(fullUrl, options);\n\n                    case 'DELETE':\n                        return this.http.delete<any>(fullUrl, options);\n\n                    case 'POST':\n                        return this.http.post<any>(fullUrl, body, options);\n\n                    case 'PUT':\n                        return this.http.put<any>(fullUrl, body, options);\n\n                    case 'PATCH':\n                        return this.http.patch<any>(fullUrl, body, options);\n\n                }\n\n                return of(null);\n            }),\n\n            map(value => {\n                if (progress.canceled)\n                    throw new Error('file upload canceled');\n\n                if (value.type == HttpEventType.UploadProgress) {\n                    if (progress) {\n                        let num = Math.round(100 * value.loaded / value.total);\n                        progress.progress(num);\n                    }\n\n                    return null;\n                }\n                else if (value.type == HttpEventType.Response) {\n                    finished = true;\n                    return value;\n                }\n\n                return null;\n            }),\n\n            filter(value => value != null),\n\n            //gets the response\n            map(value => {\n                var response: any = value;\n                let result = new ApiResponse();\n                result.statusCode = 200;\n                result.statusMessage = 'OK';\n                result.data = response.body;\n                result.success = true;\n\n                return result;\n            }),\n\n            //gets the failed response\n            catchError(err => {\n                let e = <HttpErrorResponse>err;\n\n                let result = new ApiResponse();\n                result.statusCode = e.status;\n                result.statusMessage = e.message;\n                result.error = e.error;\n                result.success = false;\n\n                if (result.statusCode == 401)\n                    this.session.clear();\n\n                return of(result);\n            })\n        );\n\n    }\n\n    toTransaction(response: Observable<IResponse>): Promise<TransactionResult> {\n        return response.pipe(\n            mergeMap(response => {\n                if (response.data != null)\n                    return of(<TransactionResult>response.data);\n                else if (response.error != null)\n                    return of(<TransactionResult>response.error);\n\n                return of(null);\n            })\n        ).toPromise();\n    }\n\n    toObject<T>(response: Observable<IResponse>): Promise<T> {\n        return response.pipe(\n            mergeMap(response => {\n                if (response.ok())\n                    return of(<T>response.data);\n\n                return of(null);\n            })\n        ).toPromise<T>();\n    }\n}","import { OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nexport class BaseComponent implements OnDestroy {\n\n    private _destroyed: boolean = false;\n\n    on<T>(observable: Observable<T>): Observable<T> {\n        return observable.pipe(takeWhile(() => !this._destroyed));\n    }\n\n    ngOnDestroy(): void {\n        this._destroyed = true;\n    }\n}","export class Base64Helper {\n\n    private static _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n    public static encode(plain: string): string {\n        return btoa(encodeURIComponent(plain).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n            return String.fromCharCode(parseInt(p1, 16))\n        }))\n    }\n\n    public static decode(encoded: string): string {\n        // Going backwards: from bytestream, to percent-encoding, to original string.\n        return decodeURIComponent(atob(encoded).split('').map(function (c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    public static readBearer(token: string): string {\n        let sp = token.split('.');\n        if (sp.length != 3)\n            return null;\n\n        let decoded = this.decode(sp[1]);\n        return decoded;\n    }\n\n    public static encryptx(plain: string, full: boolean = false): string {\n        let n1 = this.randomizeInteger(10, 40);\n        let n2 = this.randomizeInteger(10, 99);\n        let start = this._keyStr.substr(n1, 1);\n\n        let n3 = this.randomizeInteger(10, 40);\n        let n4 = this.randomizeInteger(10, 99);\n        let end = this._keyStr.substr(n3, 1);\n\n        let str;\n        if (full)\n            str = plain;\n        else\n            str = plain.length > 15 ? plain.substr(0, 15) : plain;\n\n        return start + n2 + this.encode(str).replace('=', '') + end + n4;\n    }\n\n    public static decryptx(cipher: string): string {\n        if (cipher.length < 7)\n            return null;\n\n        let encoded = cipher.substr(3, cipher.length - 6);\n        if (encoded.length % 2 == 1)\n            encoded += '=';\n\n        return this.decode(encoded);\n\n    }\n\n    private static randomizeInteger(min: number, max: number): number {\n        if (max == null) {\n            max = (min == null ? Number.MAX_SAFE_INTEGER : min);\n            min = 0;\n        }\n\n        min = Math.ceil(min);  // inclusive min\n        max = Math.floor(max); // exclusive max\n\n        if (min > max - 1) {\n            throw new Error(\"Incorrect arguments.\");\n        }\n\n        return min + Math.floor((max - min) * Math.random());\n    }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","\nexport interface IResponse {\n    statusCode: number;\n    statusMessage: string;\n    data?: any;\n    error?: any;\n    success: boolean;\n\n    ok(): boolean;\n    getErrorMessage(): string;\n}\n\nexport class ApiResponse implements IResponse {\n    statusCode: number;\n    statusMessage: string;\n    data: any;\n    error: any;\n    success: boolean;\n\n    ok(): boolean {\n        return this.success && this.data;\n    }\n\n    getErrorMessage(): string {\n        if (this.statusMessage)\n            return this.statusMessage;\n\n        return null;\n    }\n\n}","\nexport class SessionUser {\n    id: string;\n    name: string;\n    token: string;\n    expiration: number;\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ApiClient } from 'src/lib/api-client';\nimport { HorseClient } from 'src/models/horse-client';\nimport { TransactionResult } from 'src/models/transaction-result';\nimport { WebsocketService } from './websocket.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientService {\n\n    private _clients: HorseClient[] = [];\n    private _onconnected: Subject<HorseClient> = new Subject<HorseClient>();\n    private _ondisconnected: Subject<HorseClient> = new Subject<HorseClient>();\n\n    get clients(): HorseClient[] { return this._clients; }\n    get onconnected(): Observable<HorseClient> { return this._onconnected; }\n    get ondisconnected(): Observable<HorseClient> { return this._ondisconnected; }\n\n    constructor(private api: ApiClient, private socket: WebsocketService) { }\n\n    refresh(): Promise<TransactionResult> {\n        return null;\n    }\n\n    remove(client: HorseClient): Promise<TransactionResult> {\n        return null;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { ApiClient } from 'src/lib/api-client';\nimport { Dashboard } from 'src/models/dashboard';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DashboardService {\n\n    constructor(private api: ApiClient) {\n\n    }\n\n    /** Refreshes graph data */\n    load(): Promise<Dashboard> {\n\n        return this.api.get('/dashboard/stats')\n            .pipe(\n                map(response => {\n\n                    if (response.ok()) {\n                        return response.data;\n                    }\n                    return null;\n                }))\n            .toPromise();\n    }\n}\n","import { DatePipe } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ApiClient } from 'src/lib/api-client';\nimport { QueueGraphData } from 'src/models/queue-graph-data';\nimport { WebsocketService } from './websocket.service';\n\nexport interface GraphContent {\n    data: QueueGraphData[];\n    labels: string[];\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GraphService {\n\n    private _data: QueueGraphData[];\n    private _labels: string[];\n    private _pipe: DatePipe = new DatePipe('en-US');\n    private _maxLength: number = 60;\n\n    private _onupdated: Subject<any> = new Subject<any>();\n    get onupdated(): Observable<any> { return this._onupdated; }\n\n    constructor(private api: ApiClient, private socket: WebsocketService) {\n\n    }\n\n    /** Refreshes graph data */\n    load(): Promise<GraphContent> {\n\n        return of(this)\n            .pipe(\n                mergeMap(() => this.api.get('/dashboard/graph')),\n                map(response => {\n\n                    if (!response.success)\n                        return null;\n\n                    this._data = response.data;\n\n                    //remove from beginning if data contains more than max elements\n                    if (this._data.length > this._maxLength) {\n                        this._data.splice(0, this._data.length - this._maxLength);\n                    }\n\n                    this._labels = this.createLabels(this._data);\n\n                    let content: GraphContent = {\n                        data: this._data,\n                        labels: this._labels\n                    };\n\n                    return content;\n                })\n            )\n            .toPromise();\n    }\n\n    /** Creates labels of graph data */\n    private createLabels(data: QueueGraphData[]): string[] {\n\n        let labels = [];\n        for (let i = 0; i < data.length; i++) {\n            let item = data[i];\n            labels.push(this.findTimeFromUnixSeconds(item.date));\n        }\n        return labels;\n    }\n\n    /** Returns HH:mm:ss string from unix time in seconds */\n    private findTimeFromUnixSeconds(unix: number): string {\n        let date = new Date(unix * 1000);\n        return this._pipe.transform(date, 'HH:mm:ss');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { ApiClient } from 'src/lib/api-client';\nimport { SessionUser } from 'src/models/session-user';\nimport { SessionService } from './session.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginService {\n\n    constructor(private api: ApiClient, private session: SessionService) {\n    }\n\n    login(username: string, password: string): Promise<SessionUser> {\n\n        let model = {\n            username: username,\n            password: password\n        };\n\n        return this.api.post('/user/login', model)\n            .pipe(\n                map(response => {\n                    this.session.clear();\n                    \n                    if (response.ok()) {\n                        if (response.data.ok) {\n                            this.session.set(response.data);\n                            return this.session.get();\n                        }\n                    }\n\n                    return this.session.get();\n                })\n            )\n            .toPromise();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ApiClient } from 'src/lib/api-client';\nimport { HorseQueue } from 'src/models/horse-queue';\nimport { TransactionResult } from 'src/models/transaction-result';\nimport { WebsocketService } from './websocket.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class QueueService {\n\n    private _queues: HorseQueue[] = [];\n    private _oncreated: Subject<HorseQueue> = new Subject<HorseQueue>();\n    private _onremoved: Subject<HorseQueue> = new Subject<HorseQueue>();\n    private _onupdated: Subject<HorseQueue> = new Subject<HorseQueue>();\n\n    get queues(): HorseQueue[] { return this._queues; }\n    get oncreated(): Observable<HorseQueue> { return this._oncreated; }\n    get onremoved(): Observable<HorseQueue> { return this._onremoved; }\n    get onupdated(): Observable<HorseQueue> { return this._onupdated; }\n\n    constructor(private api: ApiClient, private socket: WebsocketService) { }\n\n    create(queue: HorseQueue): Promise<TransactionResult> {\n        return null;\n    }\n\n    update(queue: HorseQueue): Promise<TransactionResult> {\n        return null;\n    }\n\n    remove(queue: HorseQueue): Promise<TransactionResult> {\n        return null;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiClient } from 'src/lib/api-client';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RouteService {\n\n    constructor(private api: ApiClient) { }\n}\n","import { Injectable } from '@angular/core';\nimport { interval, Observable, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Base64Helper } from 'src/lib/base64-helper';\nimport { LoginResult } from 'src/models/login-result';\nimport { SessionUser } from 'src/models/session-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionService {\n\n    private _current: SessionUser;\n    private _changed: Subject<SessionUser>;\n\n    get onchanged(): Observable<SessionUser> {\n        return this._changed.pipe();\n    }\n\n    constructor() {\n        this._current = this.read();\n        this._changed = new Subject<SessionUser>();\n\n        interval(1000)\n            .subscribe(() => {\n                this._current = this.read();\n            });\n    }\n\n    set(login: LoginResult): SessionUser {\n\n        localStorage.setItem(environment.storage.token, login.token);\n        let user = this.deserialize(login.token);\n\n        this._current = user;\n        this._changed.next(user);\n\n        return user;\n    }\n\n\n    refresh(token: string): void {\n        let current = localStorage.getItem(environment.storage.token);\n        if (!current)\n            return;\n\n        localStorage.setItem(environment.storage.token, token);\n    }\n\n    clear(): void {\n        let old = this._current;\n\n        localStorage.removeItem(environment.storage.token);\n        this._current = null;\n\n        if (this._changed && old != null)\n            this._changed.next(null);\n    }\n\n    get(): SessionUser {\n        if (this._current)\n            return this._current;\n\n        this._current = this.read();\n        return this._current;\n    }\n\n    read(): SessionUser {\n        try {\n            let str = localStorage.getItem(environment.storage.token);\n            if (str == null) {\n                if (this._current && this._changed)\n                    this._changed.next(null);\n\n                return null;\n            }\n\n            let user = this.deserialize(str);\n\n            if (!this._current && this._changed)\n                this._changed.next(user);\n\n            this._current = user;\n            return user;\n        }\n        catch {\n            localStorage.removeItem(environment.storage.token);\n            return null;\n        }\n    }\n\n    private deserialize(token: string): SessionUser {\n        let token_info = JSON.parse(Base64Helper.readBearer(token));\n        let user = new SessionUser();\n\n        user.token = token;\n        user.id = token_info.sub;\n        user.name = token_info.name;\n        user.expiration = parseInt(token_info.exp) * 1000;\n\n        return user;\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  constructor() {\n      \n  }\n}\n"]}