{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/layout/guest-layout/guest-layout.component.ts","webpack:///src/app/layout/guest-layout/guest-layout.component.html","webpack:///src/app/layout/guest-layout/guest-layout.module.ts","webpack:///src/app/layout/portal-layout/portal-layout.component.ts","webpack:///src/app/layout/portal-layout/portal-layout.component.html","webpack:///src/app/layout/portal-layout/portal-layout.module.ts","webpack:///src/environments/environment.ts","webpack:///src/interceptors/session.guard.ts","webpack:///src/lib/api-client.ts","webpack:///src/lib/base-component.ts","webpack:///src/main.ts","webpack:///src/models/api-response.ts","webpack:///src/services/client.service.ts","webpack:///src/services/dashboard.service.ts","webpack:///src/services/login.service.ts","webpack:///src/services/queue.service.ts","webpack:///src/services/route.service.ts","webpack:///src/services/session.service.ts","webpack:///src/services/websocket.service.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","loadChildren","m","QueueModule","canLoad","QueuesModule","RouteModule","RoutesModule","ClientModule","LoginModule","DashboardModule","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","GuestLayoutComponent","GuestLayoutModule","schemas","PortalLayoutComponent","PortalLayoutModule","environment","production","api","url","SessionGuard","next","state","providedIn","ApiClient","http","session","contentType","user","get","headers","set","token","length","httpOptions","withCredentials","progress","requestProgress","request","model","JSON","stringify","form","json","method","body","pipe","input","options","getOptions","fullUrl","indexOf","url_slash","startsWith","post","put","patch","value","response","result","statusCode","statusMessage","data","success","err","status","message","error","clear","finished","canceled","reportProgress","observe","type","UploadProgress","num","Math","round","loaded","total","Response","toPromise","ok","BaseComponent","_destroyed","observable","bootstrapModule","console","ApiResponse","ClientService","socket","_clients","_onconnected","_ondisconnected","client","DashboardService","LoginService","QueueService","_queues","_oncreated","_onremoved","_onupdated","queue","RouteService","SessionService","WebsocketService"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SessionGuard } from 'src/interceptors/session.guard';\nimport { GuestLayoutComponent } from './layout/guest-layout/guest-layout.component';\nimport { PortalLayoutComponent } from './layout/portal-layout/portal-layout.component';\n\n\nconst routes: Routes = [\n    {\n        path: 'queue',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./queue/queue.module').then(m => m.QueueModule),\n        canLoad: [SessionGuard]\n    },\n    {\n        path: 'queues',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./queues/queues.module').then(m => m.QueuesModule),\n        canLoad: [SessionGuard]\n    },\n    {\n        path: 'route',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./route/route.module').then(m => m.RouteModule),\n        canLoad: [SessionGuard]\n    },\n    {\n        path: 'routes',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./routes/routes.module').then(m => m.RoutesModule),\n        canLoad: [SessionGuard]\n    },\n    {\n        path: 'client',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./client/client.module').then(m => m.ClientModule),\n        canLoad: [SessionGuard]\n    },\n    {\n        path: 'login',\n        component: GuestLayoutComponent,\n        loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\n    },\n    {\n        path: '',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\n        canLoad: [SessionGuard]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { BaseComponent } from 'src/lib/base-component';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent extends BaseComponent {\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WebsocketService } from 'src/services/websocket.service';\nimport { SessionService } from 'src/services/session.service';\nimport { RouteService } from 'src/services/route.service';\nimport { QueueService } from 'src/services/queue.service';\nimport { LoginService } from 'src/services/login.service';\nimport { ClientService } from 'src/services/client.service';\nimport { DashboardService } from 'src/services/dashboard.service';\nimport { GuestLayoutModule } from './layout/guest-layout/guest-layout.module';\nimport { PortalLayoutModule } from './layout/portal-layout/portal-layout.module';\nimport { ApiClient } from 'src/lib/api-client';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        GuestLayoutModule,\n        PortalLayoutModule\n    ],\n    providers: [\n        WebsocketService,\n        SessionService,\n        RouteService,\n        QueueService,\n        LoginService,\n        ClientService,\n        DashboardService,\n        ApiClient\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from 'src/lib/base-component';\n\n@Component({\n    selector: 'app-guest-layout',\n    templateUrl: './guest-layout.component.html',\n    styleUrls: ['./guest-layout.component.css']\n})\nexport class GuestLayoutComponent extends BaseComponent implements OnInit {\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div class=\"guest-content\">\n    <router-outlet></router-outlet>\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GuestLayoutComponent } from './guest-layout.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    declarations: [GuestLayoutComponent],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    schemas: [\n        CUSTOM_ELEMENTS_SCHEMA\n    ]\n})\nexport class GuestLayoutModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from 'src/lib/base-component';\n\n@Component({\n    selector: 'app-portal-layout',\n    templateUrl: './portal-layout.component.html',\n    styleUrls: ['./portal-layout.component.css']\n})\nexport class PortalLayoutComponent extends BaseComponent implements OnInit {\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<header>\n    header\n</header>\n<div class=\"portal-content\">\n    <router-outlet></router-outlet>\n</div>\n<footer>\n    footer\n</footer>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PortalLayoutComponent } from './portal-layout.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    declarations: [PortalLayoutComponent],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    schemas: [\n        CUSTOM_ELEMENTS_SCHEMA\n    ]\n})\nexport class PortalLayoutModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n\n    api: {\n        url: ''\n    }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpEventType } from '@angular/common/http';\nimport { SessionService } from 'src/services/session.service';\nimport { TransactionResult } from 'src/models/transaction-result';\nimport { catchError, filter, map, mergeMap, take, takeWhile } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { RequestProgress } from 'src/models/request-progress';\nimport { environment } from 'src/environments/environment';\nimport { ApiResponse, IResponse } from 'src/models/api-response';\n\n@Injectable({ providedIn: 'root' })\nexport class ApiClient {\n\n    constructor(private http: HttpClient, private session: SessionService) {\n    }\n\n    private getOptions(contentType: string): any {\n        let user = this.session.get();\n\n        let headers = new HttpHeaders();\n        headers = headers.set('Access-Control-Allow-Origin', '*');\n\n        if (contentType != null)\n            headers = headers.set('Content-Type', contentType);\n\n        if (user != null && user.token != null && user.token.length > 0)\n            headers = headers.set('Authorization', 'Bearer ' + user.token);\n\n        let httpOptions = {\n            headers: headers,\n            withCredentials: true\n        };\n\n        return httpOptions;\n    }\n\n    get(url: string, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'GET', url, null, progress);\n\n        return this.request(true, 'GET', url, null);\n    }\n\n    delete(url: string, model?: any, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'DELETE', url, JSON.stringify(model), progress);\n\n        return this.request(true, 'DELETE', url, JSON.stringify(model));\n    }\n\n    post(url: string, model: any, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'POST', url, JSON.stringify(model), progress);\n\n        return this.request(true, 'POST', url, JSON.stringify(model));\n    }\n\n    put(url: string, model: any, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'PUT', url, JSON.stringify(model), progress);\n\n        return this.request(true, 'PUT', url, JSON.stringify(model));\n    }\n\n    patch(url: string, model: any, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'PATCH', url, JSON.stringify(model), progress);\n\n        return this.request(true, 'PATCH', url, JSON.stringify(model));\n    }\n\n    postForm(url: string, form: FormData, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(false, 'POST', url, form, progress);\n\n        return this.request(false, 'POST', url, form);\n    }\n\n    putForm(url: string, form: FormData, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(false, 'PUT', url, form, progress);\n\n        return this.request(false, 'PUT', url, form);\n    }\n\n    patchForm(url: string, form: FormDataEntryValue, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(false, 'PATCH', url, form, progress);\n\n        return this.request(false, 'PATCH', url, form);\n    }\n\n    request(json: boolean, method: string, url: string, body: any): Observable<IResponse> {\n        return of({\n            json: json,\n            method: method,\n            url: url,\n            body: body\n        }).pipe(\n\n            //subscribe only once\n            take(1),\n\n            //prepares the request\n            mergeMap(input => {\n                let options = this.getOptions(input.json ? 'application/json' : null);\n\n                let fullUrl = input.url;\n                if (fullUrl.indexOf('//') < 0) {\n                    let url_slash = '';\n                    if (!fullUrl.startsWith('/'))\n                        url_slash = '/';\n\n                    fullUrl = environment.api.url + url_slash + fullUrl;\n                }\n\n                switch (method) {\n                    case 'GET':\n                        return this.http.get<any>(fullUrl, options);\n\n                    case 'DELETE':\n                        return this.http.delete<any>(fullUrl, options);\n\n                    case 'POST':\n                        return this.http.post<any>(fullUrl, body, options);\n\n                    case 'PUT':\n                        return this.http.put<any>(fullUrl, body, options);\n\n                    case 'PATCH':\n                        return this.http.patch<any>(fullUrl, body, options);\n\n                }\n\n                return of(null);\n            }),\n\n            //gets the response\n            map(value => {\n                var response: any = value;\n                let result = new ApiResponse();\n                result.statusCode = 200;\n                result.statusMessage = 'OK';\n                result.data = response;\n                result.success = true;\n\n                return result;\n            }),\n\n            //gets the failed response\n            catchError(err => {\n                let e = <HttpErrorResponse>err;\n\n                let result = new ApiResponse();\n                result.statusCode = e.status;\n                result.statusMessage = e.message;\n                result.error = e.error;\n                result.success = false;\n\n                if (result.statusCode == 401)\n                    this.session.clear();\n\n                return of(result);\n            })\n        );\n\n    }\n\n    requestProgress(json: boolean, method: string, url: string, body: any, progress: RequestProgress): Observable<IResponse> {\n        let finished = false;\n\n        return of({\n            json: json,\n            method: method,\n            url: url,\n            body: body\n        }).pipe(\n\n            //subscribe only once\n            takeWhile(() => !finished && !progress.canceled),\n\n            //prepares the request\n            mergeMap(input => {\n                let options = this.getOptions(input.json ? 'application/json' : null);\n                options.reportProgress = true;\n                options.observe = 'events';\n\n                let fullUrl = input.url;\n                if (fullUrl.indexOf('//') < 0) {\n                    let url_slash = '';\n                    if (!fullUrl.startsWith('/'))\n                        url_slash = '/';\n\n                    fullUrl = environment.api.url + url_slash + fullUrl;\n                }\n\n                switch (method) {\n                    case 'GET':\n                        return this.http.get<any>(fullUrl, options);\n\n                    case 'DELETE':\n                        return this.http.delete<any>(fullUrl, options);\n\n                    case 'POST':\n                        return this.http.post<any>(fullUrl, body, options);\n\n                    case 'PUT':\n                        return this.http.put<any>(fullUrl, body, options);\n\n                    case 'PATCH':\n                        return this.http.patch<any>(fullUrl, body, options);\n\n                }\n\n                return of(null);\n            }),\n\n            map(value => {\n                if (progress.canceled)\n                    throw new Error('file upload canceled');\n\n                if (value.type == HttpEventType.UploadProgress) {\n                    if (progress) {\n                        let num = Math.round(100 * value.loaded / value.total);\n                        progress.progress(num);\n                    }\n\n                    return null;\n                }\n                else if (value.type == HttpEventType.Response) {\n                    finished = true;\n                    return value;\n                }\n\n                return null;\n            }),\n\n            filter(value => value != null),\n\n            //gets the response\n            map(value => {\n                var response: any = value;\n                let result = new ApiResponse();\n                result.statusCode = 200;\n                result.statusMessage = 'OK';\n                result.data = response.body;\n                result.success = true;\n\n                return result;\n            }),\n\n            //gets the failed response\n            catchError(err => {\n                let e = <HttpErrorResponse>err;\n\n                let result = new ApiResponse();\n                result.statusCode = e.status;\n                result.statusMessage = e.message;\n                result.error = e.error;\n                result.success = false;\n\n                if (result.statusCode == 401)\n                    this.session.clear();\n\n                return of(result);\n            })\n        );\n\n    }\n\n    toTransaction(response: Observable<IResponse>): Promise<TransactionResult> {\n        return response.pipe(\n            mergeMap(response => {\n                if (response.data != null)\n                    return of(<TransactionResult>response.data);\n                else if (response.error != null)\n                    return of(<TransactionResult>response.error);\n\n                return of(null);\n            })\n        ).toPromise();\n    }\n\n    toObject<T>(response: Observable<IResponse>): Promise<T> {\n        return response.pipe(\n            mergeMap(response => {\n                if (response.ok())\n                    return of(<T>response.data);\n\n                return of(null);\n            })\n        ).toPromise<T>();\n    }\n}","import { OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nexport class BaseComponent implements OnDestroy {\n\n    private _destroyed: boolean = false;\n\n    on<T>(observable: Observable<T>): Observable<T> {\n        return observable.pipe(takeWhile(() => !this._destroyed));\n    }\n\n    ngOnDestroy(): void {\n        this._destroyed = true;\n    }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","\nexport interface IResponse {\n    statusCode: number;\n    statusMessage: string;\n    data?: any;\n    error?: any;\n    success: boolean;\n\n    ok(): boolean;\n    getErrorMessage(): string;\n}\n\nexport class ApiResponse implements IResponse {\n    statusCode: number;\n    statusMessage: string;\n    data: any;\n    error: any;\n    success: boolean;\n\n    ok(): boolean {\n        return this.success && this.data;\n    }\n\n    getErrorMessage(): string {\n        if (this.statusMessage)\n            return this.statusMessage;\n\n        return null;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { HorseClient } from 'src/models/horse-client';\nimport { TransactionResult } from 'src/models/transaction-result';\nimport { WebsocketService } from './websocket.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientService {\n\n    private _clients: HorseClient[] = [];\n    private _onconnected: Subject<HorseClient> = new Subject<HorseClient>();\n    private _ondisconnected: Subject<HorseClient> = new Subject<HorseClient>();\n\n    get clients(): HorseClient[] { return this._clients; }\n    get onconnected(): Observable<HorseClient> { return this._onconnected; }\n    get ondisconnected(): Observable<HorseClient> { return this._ondisconnected; }\n\n    constructor(private socket: WebsocketService) { }\n\n    refresh(): Promise<TransactionResult> {\n        return null;\n    }\n\n    remove(client: HorseClient): Promise<TransactionResult> {\n        return null;\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { HorseQueue } from 'src/models/horse-queue';\nimport { TransactionResult } from 'src/models/transaction-result';\nimport { WebsocketService } from './websocket.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class QueueService {\n\n    private _queues: HorseQueue[] = [];\n    private _oncreated: Subject<HorseQueue> = new Subject<HorseQueue>();\n    private _onremoved: Subject<HorseQueue> = new Subject<HorseQueue>();\n    private _onupdated: Subject<HorseQueue> = new Subject<HorseQueue>();\n\n    get queues(): HorseQueue[] { return this._queues; }\n    get oncreated(): Observable<HorseQueue> { return this._oncreated; }\n    get onremoved(): Observable<HorseQueue> { return this._onremoved; }\n    get onupdated(): Observable<HorseQueue> { return this._onupdated; }\n\n    constructor(private socket: WebsocketService) { }\n\n    create(queue: HorseQueue): Promise<TransactionResult> {\n        return null;\n    }\n\n    update(queue: HorseQueue): Promise<TransactionResult> {\n        return null;\n    }\n\n    remove(queue: HorseQueue): Promise<TransactionResult> {\n        return null;\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { SessionUser } from 'src/models/session-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionService {\n\n    constructor() { }\n\n    get(): SessionUser {\n        return null;\n    }\n\n    clear(): void {\n\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  constructor() {\n      \n  }\n}\n"]}