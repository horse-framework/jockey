{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/layout/guest-layout/guest-layout.component.ts","./src/app/layout/guest-layout/guest-layout.component.html","./src/app/layout/guest-layout/guest-layout.module.ts","./src/app/layout/portal-layout/portal-layout.component.ts","./src/app/layout/portal-layout/portal-layout.component.html","./src/app/layout/portal-layout/portal-layout.module.ts","./src/environments/environment.ts","./src/interceptors/session.guard.ts","./src/lib/api-client.ts","./src/lib/base-component.ts","./src/lib/base64-helper.ts","./src/main.ts","./src/models/api-response.ts","./src/models/session-user.ts","./src/services/client.service.ts","./src/services/dashboard.service.ts","./src/services/graph.service.ts","./src/services/login.service.ts","./src/services/queue.service.ts","./src/services/route.service.ts","./src/services/session.service.ts","./src/services/websocket.service.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SessionGuard } from 'src/interceptors/session.guard';\nimport { GuestLayoutComponent } from './layout/guest-layout/guest-layout.component';\nimport { PortalLayoutComponent } from './layout/portal-layout/portal-layout.component';\n\n\nconst routes: Routes = [\n    {\n        path: 'queue',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./queue/queue.module').then(m => m.QueueModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'queues',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./queues/queues.module').then(m => m.QueuesModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'route',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./route/route.module').then(m => m.RouteModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'routes',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./routes/routes.module').then(m => m.RoutesModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'clients',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./clients/clients.module').then(m => m.ClientsModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'nodes',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./nodes/nodes.module').then(m => m.NodesModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'handlers',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./handlers/handlers.module').then(m => m.HandlersModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: 'login',\n        component: GuestLayoutComponent,\n        loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\n    },\n    {\n        path: 'dashboard',\n        component: PortalLayoutComponent,\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\n        canActivate: [SessionGuard]\n    },\n    {\n        path: '',\n        redirectTo: 'dashboard',\n        pathMatch: 'full'\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { BaseComponent } from 'src/lib/base-component';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent extends BaseComponent {\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WebsocketService } from 'src/services/websocket.service';\nimport { SessionService } from 'src/services/session.service';\nimport { RouteService } from 'src/services/route.service';\nimport { QueueService } from 'src/services/queue.service';\nimport { LoginService } from 'src/services/login.service';\nimport { ClientService } from 'src/services/client.service';\nimport { GuestLayoutModule } from './layout/guest-layout/guest-layout.module';\nimport { PortalLayoutModule } from './layout/portal-layout/portal-layout.module';\nimport { ApiClient } from 'src/lib/api-client';\nimport { GraphService } from 'src/services/graph.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DashboardService } from 'src/services/dashboard.service';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        GuestLayoutModule,\n        PortalLayoutModule,\n        HttpClientModule\n    ],\n    providers: [\n        WebsocketService,\n        DashboardService,\n        SessionService,\n        RouteService,\n        QueueService,\n        LoginService,\n        ClientService,\n        GraphService,\n        ApiClient\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from 'src/lib/base-component';\n\n@Component({\n    selector: 'app-guest-layout',\n    templateUrl: './guest-layout.component.html',\n    styleUrls: ['./guest-layout.component.css']\n})\nexport class GuestLayoutComponent extends BaseComponent implements OnInit {\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div class=\"gbody\">\n    <div class=\"gframe\">\n        <div class=\"glogo\">\n            <img src=\"/assets/horse.svg\" alt=\"Horse MQ\" />\n            <div>\n                <h2>Jockey</h2>\n                <h1>Horse Messaging Queue Server</h1>\n            </div>\n        </div>\n        <div class=\"gcontent\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GuestLayoutComponent } from './guest-layout.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    declarations: [GuestLayoutComponent],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    schemas: [\n        CUSTOM_ELEMENTS_SCHEMA\n    ]\n})\nexport class GuestLayoutModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { BaseComponent } from 'src/lib/base-component';\nimport { SessionUser } from 'src/models/session-user';\nimport { SessionService } from 'src/services/session.service';\n\n@Component({\n    selector: 'app-portal-layout',\n    templateUrl: './portal-layout.component.html',\n    styleUrls: ['./portal-layout.component.css']\n})\nexport class PortalLayoutComponent extends BaseComponent implements OnInit {\n\n    user: SessionUser;\n    version: string;\n\n    constructor(private session: SessionService, private router: Router) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.user = this.session.get();\n        this.version = environment.version;\n    }\n\n    logout(): void {\n        this.session.clear();\n        this.router.navigateByUrl('/login');\n    }\n\n}\n","<header>\n    <div class=\"headline\">\n        <div class=\"logo\">\n            <img src=\"/assets/horse.svg\" alt=\"Horse MQ\" />\n            <div>\n                <h1>Horse MQ Jockey</h1>\n                <em>Version {{version}}</em>\n            </div>\n        </div>\n        <div class=\"menu\">\n            <ul>\n                <li><a routerLinkActive=\"active\" routerLink=\"/dashboard\">Dashboard</a></li>\n                <li><a routerLinkActive=\"active\" routerLink=\"/queues\">Queues</a></li>\n                <li><a routerLinkActive=\"active\" routerLink=\"/routes\">Routes</a></li>\n                <li><a routerLinkActive=\"active\" routerLink=\"/clients\">Clients</a></li>\n                <li><a routerLinkActive=\"active\" routerLink=\"/nodes\">Nodes</a></li>\n                <li><a routerLinkActive=\"active\" routerLink=\"/handlers\">Handlers</a></li>\n            </ul>\n        </div>\n        <div class=\"user\" *ngIf=\"user\">\n            <span class=\"user-name\">{{user.name}}</span>\n            <button class=\"logout\" (click)=\"logout()\">Logout</button>\n        </div>\n    </div>\n</header>\n<div class=\"portal-content\">\n    <router-outlet></router-outlet>\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PortalLayoutComponent } from './portal-layout.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    declarations: [PortalLayoutComponent],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    schemas: [\n        CUSTOM_ELEMENTS_SCHEMA\n    ]\n})\nexport class PortalLayoutModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    version: '5.0.3',\n\n    api: {\n        url: 'http://localhost:9998/api'\n    },\n\n    storage: {\n        token: 'token'\n    }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SessionService } from 'src/services/session.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionGuard implements CanActivate {\n\n    constructor(private session: SessionService, private router: Router) { }\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n        let user = this.session.get();\n        if (user == null) {\n            this.router.navigateByUrl('/login');\n        }\n        \n        return user != null;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpEventType } from '@angular/common/http';\nimport { SessionService } from 'src/services/session.service';\nimport { TransactionResult } from 'src/models/transaction-result';\nimport { catchError, filter, map, mergeMap, take, takeWhile } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { RequestProgress } from 'src/models/request-progress';\nimport { environment } from 'src/environments/environment';\nimport { ApiResponse, IResponse } from 'src/models/api-response';\n\n@Injectable({ providedIn: 'root' })\nexport class ApiClient {\n\n    constructor(private http: HttpClient, private session: SessionService) {\n    }\n\n    private getOptions(contentType: string): any {\n        let user = this.session.get();\n\n        let headers = new HttpHeaders();\n        headers = headers.set('Access-Control-Allow-Origin', '*');\n\n        if (contentType != null)\n            headers = headers.set('Content-Type', contentType);\n\n        if (user != null && user.token != null && user.token.length > 0)\n            headers = headers.set('Authorization', 'Bearer ' + user.token);\n\n        let httpOptions = {\n            headers: headers,\n            withCredentials: true\n        };\n\n        return httpOptions;\n    }\n\n    get(url: string, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'GET', url, null, progress);\n\n        return this.request(true, 'GET', url, null);\n    }\n\n    delete(url: string, model?: any, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'DELETE', url, JSON.stringify(model), progress);\n\n        return this.request(true, 'DELETE', url, JSON.stringify(model));\n    }\n\n    post(url: string, model: any, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'POST', url, JSON.stringify(model), progress);\n\n        return this.request(true, 'POST', url, JSON.stringify(model));\n    }\n\n    put(url: string, model: any, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'PUT', url, JSON.stringify(model), progress);\n\n        return this.request(true, 'PUT', url, JSON.stringify(model));\n    }\n\n    patch(url: string, model: any, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(true, 'PATCH', url, JSON.stringify(model), progress);\n\n        return this.request(true, 'PATCH', url, JSON.stringify(model));\n    }\n\n    postForm(url: string, form: FormData, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(false, 'POST', url, form, progress);\n\n        return this.request(false, 'POST', url, form);\n    }\n\n    putForm(url: string, form: FormData, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(false, 'PUT', url, form, progress);\n\n        return this.request(false, 'PUT', url, form);\n    }\n\n    patchForm(url: string, form: FormDataEntryValue, progress?: RequestProgress): Observable<IResponse> {\n        if (progress)\n            return this.requestProgress(false, 'PATCH', url, form, progress);\n\n        return this.request(false, 'PATCH', url, form);\n    }\n\n    request(json: boolean, method: string, url: string, body: any): Observable<IResponse> {\n        return of({\n            json: json,\n            method: method,\n            url: url,\n            body: body\n        }).pipe(\n\n            //subscribe only once\n            take(1),\n\n            //prepares the request\n            mergeMap(input => {\n                let options = this.getOptions(input.json ? 'application/json' : null);\n\n                let fullUrl = input.url;\n                if (fullUrl.indexOf('//') < 0) {\n                    let url_slash = '';\n                    if (!fullUrl.startsWith('/'))\n                        url_slash = '/';\n\n                    fullUrl = environment.api.url + url_slash + fullUrl;\n                }\n\n                switch (method) {\n                    case 'GET':\n                        return this.http.get<any>(fullUrl, options);\n\n                    case 'DELETE':\n                        return this.http.delete<any>(fullUrl, options);\n\n                    case 'POST':\n                        return this.http.post<any>(fullUrl, body, options);\n\n                    case 'PUT':\n                        return this.http.put<any>(fullUrl, body, options);\n\n                    case 'PATCH':\n                        return this.http.patch<any>(fullUrl, body, options);\n\n                }\n\n                return of(null);\n            }),\n\n            //gets the response\n            map(value => {\n                var response: any = value;\n                let result = new ApiResponse();\n                result.statusCode = 200;\n                result.statusMessage = 'OK';\n                result.data = response;\n                result.success = true;\n\n                return result;\n            }),\n\n            //gets the failed response\n            catchError(err => {\n                let e = <HttpErrorResponse>err;\n\n                let result = new ApiResponse();\n                result.statusCode = e.status;\n                result.statusMessage = e.message;\n                result.error = e.error;\n                result.success = false;\n\n                if (result.statusCode == 401)\n                    this.session.clear();\n\n                return of(result);\n            })\n        );\n\n    }\n\n    requestProgress(json: boolean, method: string, url: string, body: any, progress: RequestProgress): Observable<IResponse> {\n        let finished = false;\n\n        return of({\n            json: json,\n            method: method,\n            url: url,\n            body: body\n        }).pipe(\n\n            //subscribe only once\n            takeWhile(() => !finished && !progress.canceled),\n\n            //prepares the request\n            mergeMap(input => {\n                let options = this.getOptions(input.json ? 'application/json' : null);\n                options.reportProgress = true;\n                options.observe = 'events';\n\n                let fullUrl = input.url;\n                if (fullUrl.indexOf('//') < 0) {\n                    let url_slash = '';\n                    if (!fullUrl.startsWith('/'))\n                        url_slash = '/';\n\n                    fullUrl = environment.api.url + url_slash + fullUrl;\n                }\n\n                switch (method) {\n                    case 'GET':\n                        return this.http.get<any>(fullUrl, options);\n\n                    case 'DELETE':\n                        return this.http.delete<any>(fullUrl, options);\n\n                    case 'POST':\n                        return this.http.post<any>(fullUrl, body, options);\n\n                    case 'PUT':\n                        return this.http.put<any>(fullUrl, body, options);\n\n                    case 'PATCH':\n                        return this.http.patch<any>(fullUrl, body, options);\n\n                }\n\n                return of(null);\n            }),\n\n            map(value => {\n                if (progress.canceled)\n                    throw new Error('file upload canceled');\n\n                if (value.type == HttpEventType.UploadProgress) {\n                    if (progress) {\n                        let num = Math.round(100 * value.loaded / value.total);\n                        progress.progress(num);\n                    }\n\n                    return null;\n                }\n                else if (value.type == HttpEventType.Response) {\n                    finished = true;\n                    return value;\n                }\n\n                return null;\n            }),\n\n            filter(value => value != null),\n\n            //gets the response\n            map(value => {\n                var response: any = value;\n                let result = new ApiResponse();\n                result.statusCode = 200;\n                result.statusMessage = 'OK';\n                result.data = response.body;\n                result.success = true;\n\n                return result;\n            }),\n\n            //gets the failed response\n            catchError(err => {\n                let e = <HttpErrorResponse>err;\n\n                let result = new ApiResponse();\n                result.statusCode = e.status;\n                result.statusMessage = e.message;\n                result.error = e.error;\n                result.success = false;\n\n                if (result.statusCode == 401)\n                    this.session.clear();\n\n                return of(result);\n            })\n        );\n\n    }\n\n    toTransaction(response: Observable<IResponse>): Promise<TransactionResult> {\n        return response.pipe(\n            mergeMap(response => {\n                if (response.data != null)\n                    return of(<TransactionResult>response.data);\n                else if (response.error != null)\n                    return of(<TransactionResult>response.error);\n\n                return of(null);\n            })\n        ).toPromise();\n    }\n\n    toObject<T>(response: Observable<IResponse>): Promise<T> {\n        return response.pipe(\n            mergeMap(response => {\n                if (response.ok())\n                    return of(<T>response.data);\n\n                return of(null);\n            })\n        ).toPromise<T>();\n    }\n}","import { OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nexport class BaseComponent implements OnDestroy {\n\n    private _destroyed: boolean = false;\n\n    on<T>(observable: Observable<T>): Observable<T> {\n        return observable.pipe(takeWhile(() => !this._destroyed));\n    }\n\n    ngOnDestroy(): void {\n        this._destroyed = true;\n    }\n}","export class Base64Helper {\n\n    private static _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n    public static encode(plain: string): string {\n        return btoa(encodeURIComponent(plain).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n            return String.fromCharCode(parseInt(p1, 16))\n        }))\n    }\n\n    public static decode(encoded: string): string {\n        // Going backwards: from bytestream, to percent-encoding, to original string.\n        return decodeURIComponent(atob(encoded).split('').map(function (c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    public static readBearer(token: string): string {\n        let sp = token.split('.');\n        if (sp.length != 3)\n            return null;\n\n        let decoded = this.decode(sp[1]);\n        return decoded;\n    }\n\n    public static encryptx(plain: string, full: boolean = false): string {\n        let n1 = this.randomizeInteger(10, 40);\n        let n2 = this.randomizeInteger(10, 99);\n        let start = this._keyStr.substr(n1, 1);\n\n        let n3 = this.randomizeInteger(10, 40);\n        let n4 = this.randomizeInteger(10, 99);\n        let end = this._keyStr.substr(n3, 1);\n\n        let str;\n        if (full)\n            str = plain;\n        else\n            str = plain.length > 15 ? plain.substr(0, 15) : plain;\n\n        return start + n2 + this.encode(str).replace('=', '') + end + n4;\n    }\n\n    public static decryptx(cipher: string): string {\n        if (cipher.length < 7)\n            return null;\n\n        let encoded = cipher.substr(3, cipher.length - 6);\n        if (encoded.length % 2 == 1)\n            encoded += '=';\n\n        return this.decode(encoded);\n\n    }\n\n    private static randomizeInteger(min: number, max: number): number {\n        if (max == null) {\n            max = (min == null ? Number.MAX_SAFE_INTEGER : min);\n            min = 0;\n        }\n\n        min = Math.ceil(min);  // inclusive min\n        max = Math.floor(max); // exclusive max\n\n        if (min > max - 1) {\n            throw new Error(\"Incorrect arguments.\");\n        }\n\n        return min + Math.floor((max - min) * Math.random());\n    }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","\nexport interface IResponse {\n    statusCode: number;\n    statusMessage: string;\n    data?: any;\n    error?: any;\n    success: boolean;\n\n    ok(): boolean;\n    getErrorMessage(): string;\n}\n\nexport class ApiResponse implements IResponse {\n    statusCode: number;\n    statusMessage: string;\n    data: any;\n    error: any;\n    success: boolean;\n\n    ok(): boolean {\n        return this.success && this.data;\n    }\n\n    getErrorMessage(): string {\n        if (this.statusMessage)\n            return this.statusMessage;\n\n        return null;\n    }\n\n}","\nexport class SessionUser {\n    id: string;\n    name: string;\n    token: string;\n    expiration: number;\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ApiClient } from 'src/lib/api-client';\nimport { HorseClient } from 'src/models/horse-client';\nimport { TransactionResult } from 'src/models/transaction-result';\nimport { WebsocketService } from './websocket.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientService {\n\n    private _clients: HorseClient[] = [];\n    private _onconnected: Subject<HorseClient> = new Subject<HorseClient>();\n    private _ondisconnected: Subject<HorseClient> = new Subject<HorseClient>();\n\n    get clients(): HorseClient[] { return this._clients; }\n    get onconnected(): Observable<HorseClient> { return this._onconnected; }\n    get ondisconnected(): Observable<HorseClient> { return this._ondisconnected; }\n\n    constructor(private api: ApiClient, private socket: WebsocketService) { }\n\n    refresh(): Promise<TransactionResult> {\n        return null;\n    }\n\n    remove(client: HorseClient): Promise<TransactionResult> {\n        return null;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { ApiClient } from 'src/lib/api-client';\nimport { Dashboard } from 'src/models/dashboard';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DashboardService {\n\n    constructor(private api: ApiClient) {\n\n    }\n\n    /** Refreshes graph data */\n    load(): Promise<Dashboard> {\n\n        return this.api.get('/dashboard/stats')\n            .pipe(\n                map(response => {\n\n                    if (response.ok()) {\n                        return response.data;\n                    }\n                    return null;\n                }))\n            .toPromise();\n    }\n}\n","import { DatePipe } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ApiClient } from 'src/lib/api-client';\nimport { QueueGraphData } from 'src/models/queue-graph-data';\nimport { WebsocketService } from './websocket.service';\n\nexport interface GraphContent {\n    data: QueueGraphData[];\n    labels: string[];\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GraphService {\n\n    private _data: QueueGraphData[];\n    private _labels: string[];\n    private _pipe: DatePipe = new DatePipe('en-US');\n    private _maxLength: number = 60;\n\n    private _onupdated: Subject<any> = new Subject<any>();\n    get onupdated(): Observable<any> { return this._onupdated; }\n\n    constructor(private api: ApiClient, private socket: WebsocketService) {\n\n    }\n\n    /** Refreshes graph data */\n    load(): Promise<GraphContent> {\n\n        return of(this)\n            .pipe(\n                mergeMap(() => this.api.get('/dashboard/graph')),\n                map(response => {\n\n                    if (!response.success)\n                        return null;\n\n                    this._data = response.data;\n\n                    //remove from beginning if data contains more than max elements\n                    if (this._data.length > this._maxLength) {\n                        this._data.splice(0, this._data.length - this._maxLength);\n                    }\n\n                    this._labels = this.createLabels(this._data);\n\n                    let content: GraphContent = {\n                        data: this._data,\n                        labels: this._labels\n                    };\n\n                    return content;\n                })\n            )\n            .toPromise();\n    }\n\n    /** Creates labels of graph data */\n    private createLabels(data: QueueGraphData[]): string[] {\n\n        let labels = [];\n        for (let i = 0; i < data.length; i++) {\n            let item = data[i];\n            labels.push(this.findTimeFromUnixSeconds(item.date));\n        }\n        return labels;\n    }\n\n    /** Returns HH:mm:ss string from unix time in seconds */\n    private findTimeFromUnixSeconds(unix: number): string {\n        let date = new Date(unix * 1000);\n        return this._pipe.transform(date, 'HH:mm:ss');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { ApiClient } from 'src/lib/api-client';\nimport { SessionUser } from 'src/models/session-user';\nimport { SessionService } from './session.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginService {\n\n    constructor(private api: ApiClient, private session: SessionService) {\n    }\n\n    login(username: string, password: string): Promise<SessionUser> {\n\n        let model = {\n            username: username,\n            password: password\n        };\n\n        return this.api.post('/user/login', model)\n            .pipe(\n                map(response => {\n                    this.session.clear();\n                    \n                    if (response.ok()) {\n                        if (response.data.ok) {\n                            this.session.set(response.data);\n                            return this.session.get();\n                        }\n                    }\n\n                    return this.session.get();\n                })\n            )\n            .toPromise();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ApiClient } from 'src/lib/api-client';\nimport { HorseQueue } from 'src/models/horse-queue';\nimport { TransactionResult } from 'src/models/transaction-result';\nimport { WebsocketService } from './websocket.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class QueueService {\n\n    private _queues: HorseQueue[] = [];\n    private _oncreated: Subject<HorseQueue> = new Subject<HorseQueue>();\n    private _onremoved: Subject<HorseQueue> = new Subject<HorseQueue>();\n    private _onupdated: Subject<HorseQueue> = new Subject<HorseQueue>();\n\n    get queues(): HorseQueue[] { return this._queues; }\n    get oncreated(): Observable<HorseQueue> { return this._oncreated; }\n    get onremoved(): Observable<HorseQueue> { return this._onremoved; }\n    get onupdated(): Observable<HorseQueue> { return this._onupdated; }\n\n    constructor(private api: ApiClient, private socket: WebsocketService) { }\n\n    create(queue: HorseQueue): Promise<TransactionResult> {\n        return null;\n    }\n\n    update(queue: HorseQueue): Promise<TransactionResult> {\n        return null;\n    }\n\n    remove(queue: HorseQueue): Promise<TransactionResult> {\n        return null;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiClient } from 'src/lib/api-client';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RouteService {\n\n    constructor(private api: ApiClient) { }\n}\n","import { Injectable } from '@angular/core';\nimport { interval, Observable, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Base64Helper } from 'src/lib/base64-helper';\nimport { LoginResult } from 'src/models/login-result';\nimport { SessionUser } from 'src/models/session-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionService {\n\n    private _current: SessionUser;\n    private _changed: Subject<SessionUser>;\n\n    get onchanged(): Observable<SessionUser> {\n        return this._changed.pipe();\n    }\n\n    constructor() {\n        this._current = this.read();\n        this._changed = new Subject<SessionUser>();\n\n        interval(1000)\n            .subscribe(() => {\n                this._current = this.read();\n            });\n    }\n\n    set(login: LoginResult): SessionUser {\n\n        localStorage.setItem(environment.storage.token, login.token);\n        let user = this.deserialize(login.token);\n\n        this._current = user;\n        this._changed.next(user);\n\n        return user;\n    }\n\n\n    refresh(token: string): void {\n        let current = localStorage.getItem(environment.storage.token);\n        if (!current)\n            return;\n\n        localStorage.setItem(environment.storage.token, token);\n    }\n\n    clear(): void {\n        let old = this._current;\n\n        localStorage.removeItem(environment.storage.token);\n        this._current = null;\n\n        if (this._changed && old != null)\n            this._changed.next(null);\n    }\n\n    get(): SessionUser {\n        if (this._current)\n            return this._current;\n\n        this._current = this.read();\n        return this._current;\n    }\n\n    read(): SessionUser {\n        try {\n            let str = localStorage.getItem(environment.storage.token);\n            if (str == null) {\n                if (this._current && this._changed)\n                    this._changed.next(null);\n\n                return null;\n            }\n\n            let user = this.deserialize(str);\n\n            if (!this._current && this._changed)\n                this._changed.next(user);\n\n            this._current = user;\n            return user;\n        }\n        catch {\n            localStorage.removeItem(environment.storage.token);\n            return null;\n        }\n    }\n\n    private deserialize(token: string): SessionUser {\n        let token_info = JSON.parse(Base64Helper.readBearer(token));\n        let user = new SessionUser();\n\n        user.token = token;\n        user.id = token_info.sub;\n        user.name = token_info.name;\n        user.expiration = parseInt(token_info.exp) * 1000;\n\n        return user;\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  constructor() {\n      \n  }\n}\n"],"sourceRoot":"webpack:///"}