{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;AACuD;AACO;AACsB;AACG;;;AAGvF,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,gGAAqB;QAChC,YAAY,EAAE,GAAG,EAAE,CAAC,qdAA4C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;QACzF,WAAW,EAAE,CAAC,wEAAY,CAAC;KAC9B;IACD;QACI,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,gGAAqB;QAChC,YAAY,EAAE,GAAG,EAAE,CAAC,wUAAoC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;QAClF,WAAW,EAAE,CAAC,wEAAY,CAAC;KAC9B;IACD;QACI,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,gGAAqB;QAChC,YAAY,EAAE,GAAG,EAAE,CAAC,+TAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC;QACnF,WAAW,EAAE,CAAC,wEAAY,CAAC;KAC9B;IACD;QACI,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,gGAAqB;QAChC,YAAY,EAAE,GAAG,EAAE,CAAC,oUAAkC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC;QACjF,WAAW,EAAE,CAAC,wEAAY,CAAC;KAC9B;IACD;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,gGAAqB;QAChC,YAAY,EAAE,GAAG,EAAE,CAAC,4TAA8B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;QAC3E,WAAW,EAAE,CAAC,wEAAY,CAAC;KAC9B;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,gGAAqB;QAChC,YAAY,EAAE,GAAG,EAAE,CAAC,wUAAoC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;QACpF,WAAW,EAAE,CAAC,wEAAY,CAAC;KAC9B;IACD;QACI,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,gGAAqB;QAChC,YAAY,EAAE,GAAG,EAAE,CAAC,oPAAkC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC;QACjF,WAAW,EAAE,CAAC,wEAAY,CAAC;KAC9B;IACD;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,gGAAqB;QAChC,YAAY,EAAE,GAAG,EAAE,CAAC,4JAA8B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;QAC3E,WAAW,EAAE,CAAC,wEAAY,CAAC;KAC9B;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,gGAAqB;QAChC,YAAY,EAAE,GAAG,EAAE,CAAC,wKAAoC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;QACpF,WAAW,EAAE,CAAC,wEAAY,CAAC;KAC9B;IACD;QACI,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,gGAAqB;QAChC,YAAY,EAAE,GAAG,EAAE,CAAC,kQAAkC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC;QACjF,WAAW,EAAE,CAAC,wEAAY,CAAC;KAC9B;IACD;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,6FAAoB;QAC/B,YAAY,EAAE,GAAG,EAAE,CAAC,2TAA8B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;KAC9E;IACD;QACI,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gGAAqB;QAChC,YAAY,EAAE,GAAG,EAAE,CAAC,yXAAsC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC;QACvF,WAAW,EAAE,CAAC,wEAAY,CAAC;KAC9B;IACD;QACI,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,WAAW;QACvB,SAAS,EAAE,MAAM;KACpB;CACJ,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHhB,CAAC,iEAAoB,CAAC,MAAM,EAAE,EAAE,sBAAsB,EAAE,QAAQ,EAAE,CAAC,CAAC,EACnE,yDAAY;mIAEb,gBAAgB,oFAFf,yDAAY;;;;;;;;;;;;;;;;;;;;ACvF6B;;;;;AAShD,MAAM,YAAa,SAAQ,iEAAa;IAE3C,YAAoB,OAAuB,EAC/B,gBAAkC;QAC1C,KAAK,EAAE,CAAC;QAFQ,YAAO,GAAP,OAAO,CAAgB;QAC/B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAG1C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAEpC,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC7C;iBACI;gBACD,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC;aACtC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ;IACR,CAAC;;wEApBQ,YAAY;0GAAZ,YAAY;QCVzB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA2B;AAEF;AACT;AACmB;AACJ;AACM;AACV;AACE;AACkB;AACG;AAClC;AACS;AACU;AACK;AACb;AACiB;AACP;AACW;AACpB;;AA8BpD,MAAM,SAAS;;kEAAT,SAAS;uGAAT,SAAS,cAFN,wDAAY;4GAZb;QACP,yDAAS;QACT,4EAAgB;QAChB,6EAAgB;QAChB,wEAAc;QACd,kFAAkB;QAClB,8EAAY;QACZ,oEAAY;QACZ,sEAAa;QACb,sFAAc;QACd,+EAAY;KACf,YArBQ;YACL,qEAAa;YACb,iEAAgB;YAChB,uFAAiB;YACjB,0FAAkB;YAClB,mEAAgB;YAChB,oEAAW;YACX,0FAAuB;YACvB,sEAAe;SAClB;oIAeQ,SAAS,mBA1Bd,wDAAY,aAGZ,qEAAa;QACb,iEAAgB;QAChB,uFAAiB;QACjB,0FAAkB;QAClB,mEAAgB;QAChB,oEAAW;QACX,0FAAuB;QACvB,sEAAe;;;;;;;;;;;;;;;;;;AChCc;;;AAO9B,MAAM,YAAY;IAEvB,YAAoB,GAAc;QAAd,QAAG,GAAH,GAAG,CAAW;IAAI,CAAC;IAEvC,IAAI;QAEF,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC;aAC/B,IAAI,CACH,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACb,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;aACtB;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;aACJ,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,GAAG,CAAC,GAAW;QAEb,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,iBAAiB,GAAG,GAAG,CAAC;aACzC,IAAI,CACH,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACb,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;aACtB;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;aACJ,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,MAAM,CAAC,GAAW;QAEhB,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,oBAAoB,GAAG,GAAG,CAAC;aAC/C,IAAI,CACH,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACb,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;aACtB;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;aACJ,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,MAAM,CAAC,GAAW,EAAE,OAAe,EAAE,QAAgB,EAAE,iBAAyB,EAAE,IAAc;QAE9F,IAAI,KAAK,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC;QAChE,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC;aACzC,IAAI,CACH,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACb,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACjB,OAAO,QAAQ,CAAC,IAAI,IAAI,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;aAClD;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;aACJ,SAAS,EAAE,CAAC;IACjB,CAAC;;wEAvDU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;;;;ACL2B;AAOrB;AAEuB;;;;AAK1C,MAAM,cAAc;IAEzB,YAAoB,GAAc,EAAU,MAAwB;QAAhD,QAAG,GAAH,GAAG,CAAW;QAAU,WAAM,GAAN,MAAM,CAAkB;IAAI,CAAC;IAEzE,IAAI;QAEF,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC;aACjC,IAAI,CACH,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACb,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;aACtB;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;aACJ,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,MAAM,CAAC,IAAiB;QACtB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC;aAC1C,IAAI,CACH,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACb,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;aACtB;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;aACJ,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,iBAAiB,CAAC,WAAmB;QAEnC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,gCAAgC,GAAG,WAAW,CAAC;aAChE,IAAI,CACH,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACb,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;aACtB;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;aACJ,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,QAAQ,CAAC,IAAY,EAAE,UAAkB;QAEvC,IAAI,GAAG,GAAG,4BAA4B,GAAG,UAAU,CAAC;QACpD,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACnC,GAAG,IAAI,QAAQ,GAAG,IAAI,CAAC;SACxB;QAED,OAAO,wCAAE,CAAC,IAAI,CAAC;aACZ,IAAI,CACH,wDAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACjC,mDAAG,CAAC,QAAQ,CAAC,EAAE;YAEb,IAAI,CAAC,QAAQ,CAAC,OAAO;gBACnB,OAAO,IAAI,CAAC;YAEd,IAAI,MAAM,GAAiB,QAAQ,CAAC,IAAI,CAAC;YACzC,MAAM,CAAC,MAAM,GAAG,wEAAuB,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEhE,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,CACH;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;;4EAhEU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;ACZmC;;;AAOhD,MAAM,oBAAqB,SAAQ,iEAAa;IAEnD;QACI,KAAK,EAAE,CAAC;IACZ,CAAC;IAED,QAAQ;IACR,CAAC;;wFAPQ,oBAAoB;kHAApB,oBAAoB;QCRjC,yEAAmB;QAGP,oEAAqD;QACrD,sEAAK;QACG,iEAAM;QAAA,4DAAK;QACf,qEAAI;QAAA,iFAAsB;QAAA,4DAAK;QAGvC,yEAAsB;QAClB,4EAA+B;QACnC,4DAAM;;;;;;;;;;;;;;;;;;;;ACViC;AACiB;AACjB;;AAYxC,MAAM,iBAAiB;;kFAAjB,iBAAiB;8GAAjB,iBAAiB;kHARjB;YACL,yDAAY;YACZ,yDAAY;SACf;mIAKQ,iBAAiB,mBATX,yEAAoB,aAE/B,yDAAY;QACZ,yDAAY;;;;;;;;;;;;;;;;;ACHb,MAAM,eAAe;IAExB,SAAS,CAAC,OAAsB;QAE5B,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAExB,IAAI,IAAI,IAAI,QAAQ,EAAE;YAElB,IAAI,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBAEhC,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBACpC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC1C;aAEJ;iBAAM;gBACH,OAAO,IAAI,CAAC;aACf;SACJ;QAED,IAAI,IAAI,IAAI,MAAM,EAAE;YAEhB,QAAQ,OAAO,CAAC,WAAW,EAAE;gBACzB,KAAK,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC;gBACrB,KAAK,CAAC,CAAC,CAAC,OAAO,MAAM,CAAC;gBACtB,KAAK,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC;gBACrB,KAAK,CAAC,CAAC,CAAC,OAAO,OAAO,CAAC;gBACvB,KAAK,CAAC,CAAC,CAAC,OAAO,QAAQ,CAAC;aAC3B;SACJ;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;YAC1B,OAAO,OAAO,CAAC;QAEnB,OAAO,IAAI,CAAC;IAChB,CAAC;;8EAnCQ,eAAe;8HAAf,eAAe;;;;;;;;;;;;;;;;;ACDrB,MAAM,YAAY;IAErB,SAAS,CAAC,KAAa;QAEnB,IAAI,KAAK,IAAI,CAAC;YACV,OAAO,MAAM,CAAC;QAElB,IAAI,KAAK,GAAG,IAAI;YACZ,OAAO,KAAK,GAAG,QAAQ,CAAC;QAE5B,IAAI,KAAK,GAAG,OAAO;YACf,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QAE7C,IAAI,KAAK,GAAG,UAAU;YAClB,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK;QAElD,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IAChD,CAAC;;wEAjBQ,YAAY;wHAAZ,YAAY;;;;;;;;;;;;;;;;;;;ACDlB,MAAM,cAAc;IAEzB,YAAoB,SAAmB;QAAnB,cAAS,GAAT,SAAS,CAAU;IAAI,CAAC;IAE5C,SAAS,CAAC,KAAa;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,EAAE,UAAU,CAAC,CAAC;IAC5D,CAAC;;4EANU,cAAc;4HAAd,cAAc;;;;;;;;;;;;;;;;;;;;;;;ACJ8B;AAEH;AACP;AACK;AACC;AACN;AACE;;AA0B1C,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;6GAJT;QACP,qDAAQ;KACX,YAbQ;YACL,yDAAY;SACf;mIAaQ,WAAW,mBAtBhB,wDAAY;QACZ,0DAAa;QACb,wDAAY;QACZ,+DAAe;QACf,6DAAc;QACd,8DAAe,aAGf,yDAAY,aAGZ,wDAAY;QACZ,0DAAa;QACb,wDAAY;QACZ,+DAAe;QACf,6DAAc;QACd,8DAAe;;;;;;;;;;;;;;;;;ACnBvB,MAAM,QAAQ,GAAkB,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;AAKzE,MAAM,eAAe;IAH5B;QAkBU,iBAAY,GAAG,CAAC,IAAY,EAAE,EAAE;YACtC,qCAAqC;YACrC,OAAO,IAAI;iBACR,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC;iBACtB,OAAO,CAAC,MAAM,EAAE,cAAc,CAAC;iBAC/B,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC;iBACrB,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC3B,CAAC;QAEO,aAAQ,GAAG,CAAC,KAAa,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAU,EAAE;YAC3F,qFAAqF;YACrF,MAAM,IAAI,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;YACzD,MAAM,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,qBAAqB,CAAC;YACzE,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;YACrC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC1F,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACpE,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;YAC/C,OAAO,UAAU,GAAG,OAAO,GAAG,SAAS,GAAG,OAAO,CAAC;QACpD,CAAC;QAEO,mBAAc,GAAG,CAAC,KAAa,EAAU,EAAE;YACjD,iEAAiE;YACjE,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC;YAC7C,MAAM,QAAQ,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC;YAChE,MAAM,QAAQ,GAAG,KAAK,KAAK,MAAM,IAAI,MAAM,CAAC;YAC5C,MAAM,IAAI,GAAG,QAAQ,IAAI,QAAQ,IAAI,OAAO,IAAI,QAAQ,CAAC;YACzD,MAAM,QAAQ,GAAG,qBAAqB,CAAC;YACvC,MAAM,QAAQ,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,2BAA2B,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC;YAC7F,MAAM,OAAO,GAAG,OAAO,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACzF,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACrC,CAAC;QAEO,YAAO,GAAG,CAAC,IAAc,EAAE,OAAgB,EAAU,EAAE,CAC7D,OAAO,CAAC,CAAC,CAAC,mBAAmB,GAAG,IAAI,GAAG,GAAG,GAAG,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE;KAExE;IAjDC,SAAS,CAAC,IAAS;QACjB,MAAM,QAAQ,GAAG,qDAAqD,CAAC;QACvE,6DAA6D;QAC7D,uFAAuF;QACvF,uFAAuF;QACvF,wEAAwE;QACxE,+EAA+E;QAC/E,yEAAyE;QACzE,sEAAsE;QACtE,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,WAAW,CAAC;QACxE,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClE,CAAC;;8EAbU,eAAe;8HAAf,eAAe;;;;;;;;;;;;;;;;;ACV5B,MAAM,GAAG,GAAG,EAAE,CAAC;AACf,MAAM,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AACrB,MAAM,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AAKlB,MAAM,YAAY;IAErB,SAAS,CAAC,KAAa,EAAE,MAAc,CAAC;QAEpC,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;QAE3C,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,IAAI,GAAG,CAAC,CAAC;QAEb,OAAO,YAAY,IAAI,GAAG,EAAE;YACxB,IAAI,EAAE,CAAC;YACP,YAAY,IAAI,GAAG,CAAC;SACvB;QAED,OAAO,YAAY,IAAI,IAAI,EAAE;YACzB,KAAK,EAAE,CAAC;YACR,YAAY,IAAI,IAAI,CAAC;SACxB;QAED,OAAO,YAAY,IAAI,GAAG,EAAE;YACxB,IAAI,EAAE,CAAC;YACP,YAAY,IAAI,GAAG,CAAC;SACvB;QAED,IAAI,MAAM,GAAG,EAAE,CAAC;QAEhB,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,MAAM,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;SAC5D;QAED,IAAI,KAAK,GAAG,CAAC,EAAE;YACX,MAAM,IAAI,KAAK,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;SAChE;QAED,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,MAAM,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;SAC5D;QAED,IAAI,YAAY,GAAG,CAAC,EAAE;YAClB,MAAM,IAAI,YAAY,GAAG,GAAG,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SACtE;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;;wEA5CQ,YAAY;wHAAZ,YAAY;;;;;;;;;;;;;;;;;ACLlB,MAAM,aAAa;IAEtB,SAAS,CAAC,KAAa;QAEnB,IAAI,KAAK,IAAI,CAAC;YACV,OAAO,WAAW,CAAC;QAEvB,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC5B,CAAC;;0EARQ,aAAa;0HAAb,aAAa;;;;;;;;;;;;;;;;;;ACJiB;;;AAOpC,MAAM,qBAAqB;IAQhC;QANQ,cAAS,GAAiB,IAAI,yCAAO,EAAO,CAAC;QAI7C,eAAU,GAAG,KAAK,CAAC;IAG3B,CAAC;IAND,IAAI,QAAQ,KAAsB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAQ1D,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,UAAU;YAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED,OAAO,CAAC,KAAc;QACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;;0FAnBU,qBAAqB;mHAArB,qBAAqB;QCRlC,wEAAmC;QAAA,uEAAY;QAAA,4DAAK;QACpD,wFAAoC;QAChC,kEAA6B;QAC7B,oEAAG;QAAA,sFAA2B;QAAA,4DAAI;QAEtC,wFAAoC;QACxB,6IAAS,YAAQ,IAAI,CAAC,IAAC;QAAuD,kEAAO;QAAA,4DAAS;QACtG,4EAAwF;QAAhF,6IAAS,YAAQ,KAAK,CAAC,IAAC;QAAwD,kEAAM;QAAA,4DAAS;;QALpG,0DAAqB;QAArB,gJAAqB;;;;;;;;;;;;;;;;;;;;;;ACA+B;AACJ;;;;;;;ICiBnD,0EAA+B;IACL,uDAAa;IAAA,4DAAO;IAC5C,6EAA0C;IAAnB,oSAAS,eAAQ,IAAC;IAAC,iEAAM;IAAA,4DAAS;;;IADjC,0DAAa;IAAb,iFAAa;;ADTpC,MAAM,qBAAsB,SAAQ,iEAAa;IAKpD,YAAoB,OAAuB,EAAU,MAAc;QAC/D,KAAK,EAAE,CAAC;QADQ,YAAO,GAAP,OAAO,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAEnE,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,6EAAmB,CAAC;IACvC,CAAC;IAED,MAAM;QACF,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC;;0FAjBQ,qBAAqB;mHAArB,qBAAqB;QCZlC,yEAAQ;QAGF,oEAAqD;QACrD,sEAAK;QACC,iFAAsB;QAAA,4DAAK;QAC/B,qEAAI;QAAA,uDAAmB;QAAA,4DAAK;QAGhC,yEAAkB;QAE2C,qEAAS;QAAA,4DAAI;QACtE,sEAAI;QAAoD,oEAAQ;QAAA,4DAAI;QACpE,sEAAI;QAAkD,kEAAM;QAAA,4DAAI;QAChE,sEAAI;QAAmD,mEAAO;QAAA,4DAAI;QAClE,sEAAI;QAAiD,iEAAK;QAAA,4DAAI;QAC9D,sEAAI;QAAmD,mEAAO;QAAA,4DAAI;QAClE,sEAAI;QAAmD,mEAAO;QAAA,4DAAI;QAGtE,oHAGM;QACR,4DAAM;QAER,sEAAgC;QAChC,2EAA4B;QAC1B,4EAA+B;QACjC,4DAAM;;QAvBM,0DAAmB;QAAnB,6FAAmB;QAcR,2DAAU;QAAV,0EAAU;;;;;;;;;;;;;;;;;;;;;;ACnBc;AACmB;AACnB;AACY;AACqB;;AAmBzE,MAAM,kBAAkB;;oFAAlB,kBAAkB;+GAAlB,kBAAkB;mHATlB;YACL,yDAAY;YACZ,yDAAY;YACZ,qEAAe;SAClB;mIAKQ,kBAAkB,mBAfvB,2EAAqB;QACrB,yFAAqB,aAMrB,yDAAY;QACZ,yDAAY;QACZ,qEAAe,aALf,yFAAqB;;;;;;;;;;;;;;;;;;;;;;;ACZkB;AACA;AAOE;;;;AAK1C,MAAM,YAAY;IAYrB,YAAoB,GAAc,EAAU,MAAwB;QAAhD,QAAG,GAAH,GAAG,CAAW;QAAU,WAAM,GAAN,MAAM,CAAkB;QAV5D,YAAO,GAAiB,EAAE,CAAC;QAC3B,eAAU,GAAwB,IAAI,yCAAO,EAAc,CAAC;QAC5D,eAAU,GAAwB,IAAI,yCAAO,EAAc,CAAC;QAC5D,eAAU,GAAwB,IAAI,yCAAO,EAAc,CAAC;IAOI,CAAC;IALzE,IAAI,MAAM,KAAmB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACnD,IAAI,SAAS,KAA6B,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IACnE,IAAI,SAAS,KAA6B,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IACnE,IAAI,SAAS,KAA6B,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAInE,IAAI;QAEA,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC;aAC7B,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QAEP,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC;aACnC,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QAEP,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC;aACjC,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,GAAG,CAAC,IAAY;QAEZ,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC;aACzC,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ,CAAC,IAAY,EAAE,UAAkB;QAErC,IAAI,GAAG,GAAG,0BAA0B,GAAG,UAAU,CAAC;QAClD,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,GAAG,IAAI,QAAQ,GAAG,IAAI,CAAC;SAC1B;QAED,OAAO,wCAAE,CAAC,IAAI,CAAC;aACV,IAAI,CACD,wDAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACjC,mDAAG,CAAC,QAAQ,CAAC,EAAE;YAEX,IAAI,CAAC,QAAQ,CAAC,OAAO;gBACjB,OAAO,IAAI,CAAC;YAEhB,IAAI,MAAM,GAAmB;gBACzB,KAAK,EAAE;oBACH,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI;oBACrB,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,UAAU;oBAC3B,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK;iBACzB;gBACD,MAAM,EAAE;oBACJ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI;oBACrB,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,UAAU;oBAC3B,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM;iBAC1B;aACJ,CAAC;YAEF,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,wEAAuB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5E,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,wEAAuB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE9E,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CACL;aACA,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,KAAuB;QAE1B,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC;aACvC,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,SAAS,CAAC,SAAiB,EAAE,UAAkB,EAAE,KAAU;QAEvD,IAAI,KAAK,GAAG;YACR,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,UAAU;YAChB,KAAK,EAAE,KAAK;SACf,CAAC;QAEF,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC;aACtC,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,IAAI,CAAC,OAAyB;QAE1B,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC;aACvC,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,IAAI,CAAC,IAAY;QAEb,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC;aAC1C,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,OAAO,CAAC,IAAY;QAEhB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC;aAC7C,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,IAAY,EAAE,MAAc;QAC/B,IAAI,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC;aACzC,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,IAAY;QACd,IAAI,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC;aACxC,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,IAAY;QACf,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,qBAAqB,GAAG,IAAI,CAAC;aAC/C,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,IAAI,CAAC,IAAY,EAAE,MAAc;QAE7B,IAAI,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE9B,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE,IAAI,CAAC;aACjD,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,UAAU,CAAC,IAAY;QACnB,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,oBAAoB,EAAE,IAAI,CAAC;aAC9C,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;;wEAlPQ,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFT,MAAM;;;;;;;;;;;;;;;ACZtB,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACvB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,OAAO;IAEhB,GAAG,EAAE;QACD,GAAG,EAAE,4BAA4B;QACjC,SAAS,EAAE,uBAAuB;KACrC;IAED,OAAO,EAAE;QACL,KAAK,EAAE,OAAO;KACjB;CACJ,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;;;;ACjB/D,MAAM,YAAY;IAErB,YAAoB,OAAuB,EAAU,MAAc;QAA/C,YAAO,GAAP,OAAO,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAExE,WAAW,CACP,IAA4B,EAC5B,KAA0B;QAE1B,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QAC9B,IAAI,IAAI,IAAI,IAAI,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACpC,OAAO,KAAK,CAAC;SAChB;QAED,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAI,IAAI,CAAC,UAAU,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACpC,OAAO,KAAK,CAAC;SAChB;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;;wEArBQ,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFT,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL2E;AAGb;AAC9C;AAEqB;AACM;;;;AAG1D,MAAM,SAAS;IAElB,YAAoB,IAAgB,EAAU,OAAuB;QAAjD,SAAI,GAAJ,IAAI,CAAY;QAAU,YAAO,GAAP,OAAO,CAAgB;IACrE,CAAC;IAEO,UAAU,CAAC,WAAmB;QAClC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QAE9B,IAAI,OAAO,GAAG,IAAI,6DAAW,EAAE,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;QAE1D,IAAI,WAAW,IAAI,IAAI;YACnB,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;QAEvD,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;YAC3D,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QAEnE,IAAI,WAAW,GAAG;YACd,OAAO,EAAE,OAAO;YAChB,eAAe,EAAE,IAAI;SACxB,CAAC;QAEF,OAAO,WAAW,CAAC;IACvB,CAAC;IAED,GAAG,CAAC,GAAW,EAAE,QAA0B;QACvC,IAAI,QAAQ;YACR,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QAElE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAED,MAAM,CAAC,GAAW,EAAE,KAAW,EAAE,QAA0B;QACvD,IAAI,QAAQ;YACR,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,CAAC;QAEtF,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,IAAI,CAAC,GAAW,EAAE,KAAU,EAAE,QAA0B;QACpD,IAAI,QAAQ;YACR,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,CAAC;QAEpF,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,GAAG,CAAC,GAAW,EAAE,KAAU,EAAE,QAA0B;QACnD,IAAI,QAAQ;YACR,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,CAAC;QAEnF,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACjE,CAAC;IAED,KAAK,CAAC,GAAW,EAAE,KAAU,EAAE,QAA0B;QACrD,IAAI,QAAQ;YACR,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,CAAC;QAErF,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,QAAQ,CAAC,GAAW,EAAE,IAAc,EAAE,QAA0B;QAC5D,IAAI,QAAQ;YACR,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QAEpE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,OAAO,CAAC,GAAW,EAAE,IAAc,EAAE,QAA0B;QAC3D,IAAI,QAAQ;YACR,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QAEnE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,SAAS,CAAC,GAAW,EAAE,IAAwB,EAAE,QAA0B;QACvE,IAAI,QAAQ;YACR,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QAErE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,OAAO,CAAC,IAAa,EAAE,MAAc,EAAE,GAAW,EAAE,IAAS;QACzD,OAAO,wCAAE,CAAC;YACN,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,IAAI;SACb,CAAC,CAAC,IAAI;QAEH,qBAAqB;QACrB,oDAAI,CAAC,CAAC,CAAC;QAEP,sBAAsB;QACtB,wDAAQ,CAAC,KAAK,CAAC,EAAE;YACb,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAEtE,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC;YACxB,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBAC3B,IAAI,SAAS,GAAG,EAAE,CAAC;gBACnB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC;oBACxB,SAAS,GAAG,GAAG,CAAC;gBAEpB,OAAO,GAAG,6EAAmB,GAAG,SAAS,GAAG,OAAO,CAAC;aACvD;YAED,QAAQ,MAAM,EAAE;gBACZ,KAAK,KAAK;oBACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,EAAE,OAAO,CAAC,CAAC;gBAEhD,KAAK,QAAQ;oBACT,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,OAAO,EAAE,OAAO,CAAC,CAAC;gBAEnD,KAAK,MAAM;oBACP,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;gBAEvD,KAAK,KAAK;oBACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;gBAEtD,KAAK,OAAO;oBACR,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAM,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;aAE3D;YAED,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC;QAEF,mBAAmB;QACnB,mDAAG,CAAC,KAAK,CAAC,EAAE;YACR,IAAI,QAAQ,GAAQ,KAAK,CAAC;YAC1B,IAAI,MAAM,GAAG,IAAI,gEAAW,EAAE,CAAC;YAC/B,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC;YACxB,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC;YAC5B,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;YACvB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YAEtB,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC;QAEF,0BAA0B;QAC1B,0DAAU,CAAC,GAAG,CAAC,EAAE;YACb,IAAI,CAAC,GAAsB,GAAG,CAAC;YAE/B,IAAI,MAAM,GAAG,IAAI,gEAAW,EAAE,CAAC;YAC/B,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC;YAC7B,MAAM,CAAC,aAAa,GAAG,CAAC,CAAC,OAAO,CAAC;YACjC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;YACvB,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;YAEvB,IAAI,MAAM,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;gBACrB,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;aAC9B;YAED,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CACL,CAAC;IAEN,CAAC;IAED,eAAe,CAAC,IAAa,EAAE,MAAc,EAAE,GAAW,EAAE,IAAS,EAAE,QAAyB;QAC5F,IAAI,QAAQ,GAAG,KAAK,CAAC;QAErB,OAAO,wCAAE,CAAC;YACN,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,IAAI;SACb,CAAC,CAAC,IAAI;QAEH,qBAAqB;QACrB,yDAAS,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAEhD,sBAAsB;QACtB,wDAAQ,CAAC,KAAK,CAAC,EAAE;YACb,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACtE,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC;YAC9B,OAAO,CAAC,OAAO,GAAG,QAAQ,CAAC;YAE3B,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC;YACxB,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBAC3B,IAAI,SAAS,GAAG,EAAE,CAAC;gBACnB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC;oBACxB,SAAS,GAAG,GAAG,CAAC;gBAEpB,OAAO,GAAG,6EAAmB,GAAG,SAAS,GAAG,OAAO,CAAC;aACvD;YAED,QAAQ,MAAM,EAAE;gBACZ,KAAK,KAAK;oBACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,EAAE,OAAO,CAAC,CAAC;gBAEhD,KAAK,QAAQ;oBACT,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,OAAO,EAAE,OAAO,CAAC,CAAC;gBAEnD,KAAK,MAAM;oBACP,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;gBAEvD,KAAK,KAAK;oBACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;gBAEtD,KAAK,OAAO;oBACR,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAM,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;aAE3D;YAED,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,EAEF,mDAAG,CAAC,KAAK,CAAC,EAAE;YACR,IAAI,QAAQ,CAAC,QAAQ;gBACjB,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;YAE5C,IAAI,KAAK,CAAC,IAAI,IAAI,8EAA4B,EAAE;gBAC5C,IAAI,QAAQ,EAAE;oBACV,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;oBACvD,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;iBAC1B;gBAED,OAAO,IAAI,CAAC;aACf;iBACI,IAAI,KAAK,CAAC,IAAI,IAAI,wEAAsB,EAAE;gBAC3C,QAAQ,GAAG,IAAI,CAAC;gBAChB,OAAO,KAAK,CAAC;aAChB;YAED,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,EAEF,uDAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC;QAE9B,mBAAmB;QACnB,mDAAG,CAAC,KAAK,CAAC,EAAE;YACR,IAAI,QAAQ,GAAQ,KAAK,CAAC;YAC1B,IAAI,MAAM,GAAG,IAAI,gEAAW,EAAE,CAAC;YAC/B,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC;YACxB,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC;YAC5B,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC5B,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YAEtB,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC;QAEF,0BAA0B;QAC1B,0DAAU,CAAC,GAAG,CAAC,EAAE;YACb,IAAI,CAAC,GAAsB,GAAG,CAAC;YAE/B,IAAI,MAAM,GAAG,IAAI,gEAAW,EAAE,CAAC;YAC/B,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC;YAC7B,MAAM,CAAC,aAAa,GAAG,CAAC,CAAC,OAAO,CAAC;YACjC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;YACvB,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;YAEvB,IAAI,MAAM,CAAC,UAAU,IAAI,GAAG;gBACxB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAEzB,OAAO,wCAAE,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CACL,CAAC;IAEN,CAAC;IAED,aAAa,CAAC,QAA+B;QACzC,OAAO,QAAQ,CAAC,IAAI,CAChB,wDAAQ,CAAC,QAAQ,CAAC,EAAE;YAChB,IAAI,QAAQ,CAAC,IAAI,IAAI,IAAI;gBACrB,OAAO,wCAAE,CAAoB,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC3C,IAAI,QAAQ,CAAC,KAAK,IAAI,IAAI;gBAC3B,OAAO,wCAAE,CAAoB,QAAQ,CAAC,KAAK,CAAC,CAAC;YAEjD,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CACL,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ,CAAI,QAA+B;QACvC,OAAO,QAAQ,CAAC,IAAI,CAChB,wDAAQ,CAAC,QAAQ,CAAC,EAAE;YAChB,IAAI,QAAQ,CAAC,EAAE,EAAE;gBACb,OAAO,wCAAE,CAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;YAEhC,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CACL,CAAC,SAAS,EAAK,CAAC;IACrB,CAAC;;kEA3RQ,SAAS;2GAAT,SAAS,WAAT,SAAS,mBADI,MAAM;;;;;;;;;;;;;;;;;ACRW;;AAG3C,kDAAkD;AAC3C,MAAM,aAAa;IAF1B;QAIY,eAAU,GAAY,KAAK,CAAC;KASvC;IAPG,EAAE,CAAI,UAAyB;QAC3B,OAAO,UAAU,CAAC,IAAI,CAAC,yDAAS,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,WAAW;QACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,CAAC;;0EAVQ,aAAa;2GAAb,aAAa;;;;;;;;;;;;;;;ACNnB,MAAM,YAAY;IAId,MAAM,CAAC,MAAM,CAAC,KAAa;QAC9B,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,iBAAiB,EAAE,UAAU,KAAK,EAAE,EAAE;YAChF,OAAO,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,MAAM,CAAC,OAAe;QAChC,6EAA6E;QAC7E,OAAO,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC;YAC7D,OAAO,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,CAAC;IAEM,MAAM,CAAC,UAAU,CAAC,KAAa;QAClC,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC;YACd,OAAO,IAAI,CAAC;QAEhB,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,OAAO,OAAO,CAAC;IACnB,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,KAAa,EAAE,OAAgB,KAAK;QACvD,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACvC,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACvC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACvC,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACvC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAErC,IAAI,GAAG,CAAC;QACR,IAAI,IAAI;YACJ,GAAG,GAAG,KAAK,CAAC;;YAEZ,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAE1D,OAAO,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;IACrE,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,MAAc;QACjC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC;YACjB,OAAO,IAAI,CAAC;QAEhB,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAClD,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC;YACvB,OAAO,IAAI,GAAG,CAAC;QAEnB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAEhC,CAAC;IAEO,MAAM,CAAC,gBAAgB,CAAC,GAAW,EAAE,GAAW;QACpD,IAAI,GAAG,IAAI,IAAI,EAAE;YACb,GAAG,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACpD,GAAG,GAAG,CAAC,CAAC;SACX;QAED,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE,gBAAgB;QACvC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,gBAAgB;QAEvC,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;SAC3C;QAED,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IACzD,CAAC;;AApEc,oBAAO,GAAG,mEAAmE,CAAC;;;;;;;;;;;;;;;;ACFtD;AAEpC,MAAM,UAAU;IAInB,yBAAyB;IACzB,MAAM,CAAC,gBAAgB,CAAC,KAAa,EAAE,YAAoB,EAAE,OAAgB;QAEzE,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;QAE1C,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,IAAI,YAAY,GAAG,KAAK,CAAC;SACnC;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAE5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC,CAAC;YAEnD,IAAI,OAAO,EAAE;gBAAE,OAAO,IAAI,YAAY,CAAC;aAAE;iBACpC;gBAAE,OAAO,IAAI,YAAY,CAAC;aAAE;SACpC;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,6DAA6D;IAC7D,MAAM,CAAC,YAAY,CAAC,KAAe;QAE/B,IAAI,MAAM,GAAG,EAAE,CAAC;QAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAEnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACvD;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,wDAAwD;IACxD,MAAM,CAAC,uBAAuB,CAAC,IAAY;QACvC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAClD,CAAC;;AAxCc,gBAAK,GAAa,IAAI,qDAAQ,CAAC,OAAO,CAAC,CAAC;;;;;;;;;;;;;;;;;ACJZ;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;ACC7B,MAAM,WAAW;IAOpB,EAAE;QACE,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC;IACrC,CAAC;IAED,eAAe;QACX,IAAI,IAAI,CAAC,aAAa;YAClB,OAAO,IAAI,CAAC,aAAa,CAAC;QAE9B,OAAO,IAAI,CAAC;IAChB,CAAC;CAEJ;;;;;;;;;;;;;;;AC7BM,MAAM,WAAW;CAKvB;;;;;;;;;;;;;;;;;;;;;;;ACL8C;AACA;AAME;;;;AAK1C,MAAM,aAAa;IAUtB,YAAoB,GAAc,EAAU,MAAwB;QAAhD,QAAG,GAAH,GAAG,CAAW;QAAU,WAAM,GAAN,MAAM,CAAkB;QAR5D,aAAQ,GAAkB,EAAE,CAAC;QAC7B,iBAAY,GAAyB,IAAI,yCAAO,EAAe,CAAC;QAChE,oBAAe,GAAyB,IAAI,yCAAO,EAAe,CAAC;IAMH,CAAC;IAJzE,IAAI,OAAO,KAAoB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtD,IAAI,WAAW,KAA8B,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACxE,IAAI,cAAc,KAA8B,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;IAI9E,IAAI;QACA,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC;aAC9B,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC9B,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,OAAO;QACH,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,MAAmB;QACtB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,QAAQ,CAAC,IAAY,EAAE,UAAkB;QAErC,IAAI,GAAG,GAAG,2BAA2B,GAAG,UAAU,CAAC;QACnD,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,GAAG,IAAI,QAAQ,GAAG,IAAI,CAAC;SAC1B;QAED,OAAO,wCAAE,CAAC,IAAI,CAAC;aACV,IAAI,CACD,wDAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACjC,mDAAG,CAAC,QAAQ,CAAC,EAAE;YAEX,IAAI,CAAC,QAAQ,CAAC,OAAO;gBACjB,OAAO,IAAI,CAAC;YAEhB,IAAI,MAAM,GAAiB,QAAQ,CAAC,IAAI,CAAC;YACzC,MAAM,CAAC,MAAM,GAAG,wEAAuB,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEhE,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CACL;aACA,SAAS,EAAE,CAAC;IACrB,CAAC;;0EAvDQ,aAAa;8GAAb,aAAa,WAAb,aAAa,mBAFV,MAAM;;;;;;;;;;;;;;;;;;ACVe;;;AAO9B,MAAM,gBAAgB;IAEzB,YAAoB,GAAc;QAAd,QAAG,GAAH,GAAG,CAAW;IAAI,CAAC;IAEvC,2BAA2B;IAC3B,IAAI;QAEA,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,kBAAkB,CAAC;aAClC,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YAEX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;;gFAjBQ,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;;;ACLI;AACqB;AAEE;;;AAS1C,MAAM,kBAAkB;IAI3B,YAAoB,GAAc;QAAd,QAAG,GAAH,GAAG,CAAW;IAAI,CAAC;IAEvC,IAAI;QACA,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC;aAC9B,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC9B,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,KAAwB;QAE3B,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC;aACxC,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,GAAG,CAAC,IAAY;QAEZ,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC;aAC1C,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ,CAAC,IAAY,EAAE,UAAkB;QAErC,IAAI,GAAG,GAAG,2BAA2B,GAAG,UAAU,CAAC;QACnD,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,GAAG,IAAI,QAAQ,GAAG,IAAI,CAAC;SAC1B;QAED,OAAO,wCAAE,CAAC,IAAI,CAAC;aACV,IAAI,CACD,wDAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACjC,mDAAG,CAAC,QAAQ,CAAC,EAAE;YAEX,IAAI,CAAC,QAAQ,CAAC,OAAO;gBACjB,OAAO,IAAI,CAAC;YAEhB,IAAI,MAAM,GAAiB,QAAQ,CAAC,IAAI,CAAC;YACzC,MAAM,CAAC,MAAM,GAAG,wEAAuB,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEhE,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC,CACL;aACA,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,IAAY;QAEf,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,sBAAsB,GAAG,IAAI,CAAC;aAChD,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,UAAU,CAAC,KAAsB;QAE7B,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,KAAK,CAAC;aACzC,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;IAGD,aAAa,CAAC,MAAc,EAAE,OAAe;QAEzC,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,6BAA6B,GAAG,MAAM,GAAG,eAAe,GAAG,OAAO,CAAC;aACrF,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,OAAO,QAAQ,CAAC,IAAI,CAAC;aACxB;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;aACN,SAAS,EAAE,CAAC;IACrB,CAAC;;oFA3GQ,kBAAkB;mHAAlB,kBAAkB,WAAlB,kBAAkB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;ACVe;;;;AAQ9B,MAAM,YAAY;IAErB,YAAoB,GAAc,EAAU,OAAuB;QAA/C,QAAG,GAAH,GAAG,CAAW;QAAU,YAAO,GAAP,OAAO,CAAgB;IACnE,CAAC;IAED,KAAK,CAAC,QAAgB,EAAE,QAAgB;QAEpC,IAAI,KAAK,GAAG;YACR,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,QAAQ;SACrB,CAAC;QAEF,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC;aACrC,IAAI,CACD,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAErB,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE;gBACf,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE;oBAClB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAChC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;iBAC7B;aACJ;YAED,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QAC9B,CAAC,CAAC,CACL;aACA,SAAS,EAAE,CAAC;IACrB,CAAC;;wEA5BQ,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFT,MAAM;;;;;;;;;;;;;;;;;;;;;ACN+B;AACM;AACN;AAEC;;AAK/C,MAAM,cAAc;IASvB;QAPQ,aAAQ,GAAgB,IAAI,CAAC;QAC7B,aAAQ,GAAyB,IAAI,yCAAO,EAAe,CAAC;IAOpE,CAAC;IALD,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IAChC,CAAC;IAKD,GAAG;QACC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,yCAAO,EAAe,CAAC;QAE3C,8CAAQ,CAAC,IAAI,CAAC;aACT,SAAS,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,GAAG,CAAC,KAAkB;QAElB,YAAY,CAAC,OAAO,CAAC,mFAAyB,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7D,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEzB,OAAO,IAAI,CAAC;IAChB,CAAC;IAGD,OAAO,CAAC,KAAa;QACjB,IAAI,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,mFAAyB,CAAC,CAAC;QAC9D,IAAI,CAAC,OAAO;YACR,OAAO;QAEX,YAAY,CAAC,OAAO,CAAC,mFAAyB,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;QAExB,YAAY,CAAC,UAAU,CAAC,mFAAyB,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,IAAI,CAAC,QAAQ,IAAI,GAAG,IAAI,IAAI;YAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,GAAG;QACC,IAAI,IAAI,CAAC,QAAQ;YACb,OAAO,IAAI,CAAC,QAAQ,CAAC;QAEzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAC5B,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,IAAI;QACA,IAAI;YACA,IAAI,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,mFAAyB,CAAC,CAAC;YAC1D,IAAI,GAAG,IAAI,IAAI,EAAE;gBACb,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ;oBAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAE7B,OAAO,IAAI,CAAC;aACf;YAED,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAEjC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI;gBACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,IAAI,CAAC;SACf;QACD,WAAM;YACF,YAAY,CAAC,UAAU,CAAC,mFAAyB,CAAC,CAAC;YACnD,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAEO,WAAW,CAAC,KAAa;QAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,0EAAuB,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5D,IAAI,IAAI,GAAG,IAAI,gEAAW,EAAE,CAAC;QAE7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,GAAG,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;QAElD,OAAO,IAAI,CAAC;IAChB,CAAC;;4EA9FQ,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFX,MAAM;;;;;;;;;;;;;;;;;;ACPqB;;AAE3C,IAAY,eAIX;AAJD,WAAY,eAAe;IACvB,qEAAY;IACZ,iEAAU;IACV,+DAAS;AACb,CAAC,EAJW,eAAe,KAAf,eAAe,QAI1B;AAUM,MAAM,gBAAgB;IAczB;QATQ,iBAAY,GAA8B,IAAI,yCAAO,EAAoB,CAAC;QAC1E,oBAAe,GAA8B,IAAI,yCAAO,EAAoB,CAAC;QAC7E,eAAU,GAA2B,IAAI,yCAAO,EAAiB,CAAC;IAO1D,CAAC;IALjB,IAAI,WAAW,KAAmC,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC7E,IAAI,cAAc,KAAmC,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;IACnF,IAAI,SAAS,KAAgC,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IACtE,IAAI,MAAM,KAAsB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAItD,OAAO,CAAC,KAAa;QAEjB,6DAA6D;QAC7D,MAAM,IAAI,GAAG,OAAO,GAAG,QAAQ,CAAC,IAAI,GAAG,SAAS,GAAG,KAAK,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;QAGnC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAS,EAAE,EAAE;YAChC,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,SAAS,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,EAAS,EAAE,EAAE;YACjC,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,YAAY,CAAC;YAC5C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IAED,IAAI,CAAC,IAAY,EAAE,KAAU;QAEzB,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,KAAK,eAAe,CAAC,SAAS;YAC3D,OAAO,KAAK,CAAC;QAEjB,MAAM,OAAO,GAAkB;YAC3B,IAAI;YACJ,OAAO,EAAE,KAAK;SACjB,CAAC;QAEF,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,UAAU;QACN,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACtB,IAAI;gBACA,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;aACxB;YACD,WAAM,GAAG;YACT,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,YAAY,CAAC;YAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACvB;IACL,CAAC;IAEO,eAAe,CAAC,KAAmB;QAEvC,MAAM,OAAO,GAAkB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,OAAO,CAAC,OAAO,IAAI,IAAI;YAClE,OAAO;QAEX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;;gFArEQ,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBAFb,MAAM","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cache/services/cache.service.ts","./src/app/channels/services/channel.service.ts","./src/app/layout/guest-layout/guest-layout.component.ts","./src/app/layout/guest-layout/guest-layout.component.html","./src/app/layout/guest-layout/guest-layout.module.ts","./src/app/layout/pipes/binding-type.pipe.ts","./src/app/layout/pipes/filesize.pipe.ts","./src/app/layout/pipes/jockey-time.pipe.ts","./src/app/layout/pipes/pipes.module.ts","./src/app/layout/pipes/prett-print.pipe.ts","./src/app/layout/pipes/timespan.pipe.ts","./src/app/layout/pipes/unlimited.pipe.ts","./src/app/layout/portal-layout/confirm-modal/confirm-modal.component.ts","./src/app/layout/portal-layout/confirm-modal/confirm-modal.component.html","./src/app/layout/portal-layout/portal-layout.component.ts","./src/app/layout/portal-layout/portal-layout.component.html","./src/app/layout/portal-layout/portal-layout.module.ts","./src/app/queue/services/queue.service.ts","./src/environments/environment.ts","./src/interceptors/session.guard.ts","./src/lib/api-client.ts","./src/lib/base-component.ts","./src/lib/base64-helper.ts","./src/lib/date-helper.ts","./src/main.ts","./src/models/api-response.ts","./src/models/session-user.ts","./src/services/client.service.ts","./src/services/dashboard.service.ts","./src/services/horse-router.service.ts","./src/services/login.service.ts","./src/services/session.service.ts","./src/services/websocket.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SessionGuard } from 'src/interceptors/session.guard';\r\nimport { GuestLayoutComponent } from './layout/guest-layout/guest-layout.component';\r\nimport { PortalLayoutComponent } from './layout/portal-layout/portal-layout.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'queue',\r\n        component: PortalLayoutComponent,\r\n        loadChildren: () => import('./queue/detail/queue-detail.module').then(m => m.QueueModule),\r\n        canActivate: [SessionGuard]\r\n    },\r\n    {\r\n        path: 'queues',\r\n        component: PortalLayoutComponent,\r\n        loadChildren: () => import('./queue/list/queues.module').then(m => m.QueuesModule),\r\n        canActivate: [SessionGuard]\r\n    },\r\n    {\r\n        path: 'router',\r\n        component: PortalLayoutComponent,\r\n        loadChildren: () => import('./router/router.module').then(m => m.HorseRouterModule),\r\n        canActivate: [SessionGuard]\r\n    },\r\n    {\r\n        path: 'routers',\r\n        component: PortalLayoutComponent,\r\n        loadChildren: () => import('./routers/routers.module').then(m => m.RoutersModule),\r\n        canActivate: [SessionGuard]\r\n    },\r\n    {\r\n        path: 'cache',\r\n        component: PortalLayoutComponent,\r\n        loadChildren: () => import('./cache/cache.module').then(m => m.CacheModule),\r\n        canActivate: [SessionGuard]\r\n    },\r\n    {\r\n        path: 'channels',\r\n        component: PortalLayoutComponent,\r\n        loadChildren: () => import('./channels/channels.module').then(m => m.ChannelsModule),\r\n        canActivate: [SessionGuard]\r\n    },\r\n    {\r\n        path: 'clients',\r\n        component: PortalLayoutComponent,\r\n        loadChildren: () => import('./clients/clients.module').then(m => m.ClientsModule),\r\n        canActivate: [SessionGuard]\r\n    },\r\n    {\r\n        path: 'nodes',\r\n        component: PortalLayoutComponent,\r\n        loadChildren: () => import('./nodes/nodes.module').then(m => m.NodesModule),\r\n        canActivate: [SessionGuard]\r\n    },\r\n    {\r\n        path: 'handlers',\r\n        component: PortalLayoutComponent,\r\n        loadChildren: () => import('./handlers/handlers.module').then(m => m.HandlersModule),\r\n        canActivate: [SessionGuard]\r\n    },\r\n    {\r\n        path: 'console',\r\n        component: PortalLayoutComponent,\r\n        loadChildren: () => import('./console/console.module').then(m => m.ConsoleModule),\r\n        canActivate: [SessionGuard]\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: GuestLayoutComponent,\r\n        loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\r\n    },\r\n    {\r\n        path: 'dashboard',\r\n        component: PortalLayoutComponent,\r\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\r\n        canActivate: [SessionGuard]\r\n    },\r\n    {\r\n        path: '',\r\n        redirectTo: 'dashboard',\r\n        pathMatch: 'full'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BaseComponent } from 'src/lib/base-component';\r\nimport { SessionService } from 'src/services/session.service';\r\nimport { WebsocketService } from 'src/services/websocket.service';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent extends BaseComponent implements OnInit {\r\n\r\n    constructor(private session: SessionService,\r\n        private websocketService: WebsocketService) {\r\n        super();\r\n\r\n        this.session.onchanged.subscribe(user => {\r\n\r\n            if (user) {\r\n                this.websocketService.connect(user.token);\r\n            }\r\n            else {\r\n                this.websocketService.disconnect();\r\n            }\r\n        });\r\n\r\n        this.session.run();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { WebsocketService } from 'src/services/websocket.service';\r\nimport { SessionService } from 'src/services/session.service';\r\nimport { QueueService } from 'src/app/queue/services/queue.service';\r\nimport { LoginService } from 'src/services/login.service';\r\nimport { ClientService } from 'src/services/client.service';\r\nimport { GuestLayoutModule } from './layout/guest-layout/guest-layout.module';\r\nimport { PortalLayoutModule } from './layout/portal-layout/portal-layout.module';\r\nimport { ApiClient } from 'src/lib/api-client';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DashboardService } from 'src/services/dashboard.service';\r\nimport { HorseRouterService } from 'src/services/horse-router.service';\r\nimport { PipesModule } from './layout/pipes/pipes.module';\r\nimport { ChannelService } from 'src/app/channels/services/channel.service';\r\nimport { CacheService } from 'src/app/cache/services/cache.service';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        GuestLayoutModule,\r\n        PortalLayoutModule,\r\n        HttpClientModule,\r\n        PipesModule,\r\n        BrowserAnimationsModule,\r\n        MatDialogModule\r\n    ],\r\n    providers: [\r\n        ApiClient,\r\n        WebsocketService,\r\n        DashboardService,\r\n        SessionService,\r\n        HorseRouterService,\r\n        QueueService,\r\n        LoginService,\r\n        ClientService,\r\n        ChannelService,\r\n        CacheService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { ApiClient } from 'src/lib/api-client';\nimport { CacheInfo } from 'src/app/cache/models/cache-info';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheService {\n\n  constructor(private api: ApiClient) { }\n\n  list(): Promise<CacheInfo[]> {\n\n    return this.api.get('/cache/list')\n      .pipe(\n        map(response => {\n          if (response.ok()) {\n            return response.data;\n          }\n          return null;\n        }))\n      .toPromise();\n  }\n\n  get(key: string): Promise<CacheInfo> {\n\n    return this.api.get('/cache/get?key=' + key)\n      .pipe(\n        map(response => {\n          if (response.ok()) {\n            return response.data;\n          }\n          return null;\n        }))\n      .toPromise();\n  }\n\n  remove(key: string): Promise<any> {\n\n    return this.api.delete('/cache/remove?key=' + key)\n      .pipe(\n        map(response => {\n          if (response.ok()) {\n            return response.data;\n          }\n          return null;\n        }))\n      .toPromise();\n  }\n\n  create(key: string, content: string, duration: number, expirationWarning: number, tags: string[]): Promise<boolean> {\n\n    let model = { key, content, duration, expirationWarning, tags };\n    return this.api.post('/cache/create', model)\n      .pipe(\n        map(response => {\n          if (response.ok()) {\n            return response.data != null && response.data.ok;\n          }\n          return null;\n        }))\n      .toPromise();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { ApiClient } from 'src/lib/api-client';\nimport { ChannelInfo } from 'src/app/channels/models/channel-info';\nimport { WebsocketService } from '../../../services/websocket.service';\nimport { ChannelForm } from 'src/app/channels/models/channel-form';\nimport { ApiResponse } from 'src/models/api-response';\nimport { HorseMessage } from 'src/models/horse-message';\nimport { of } from 'rxjs';\nimport { MessageCount } from 'src/models/message-count';\nimport { DateHelper } from 'src/lib/date-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChannelService {\n\n  constructor(private api: ApiClient, private socket: WebsocketService) { }\n\n  list(): Promise<ChannelInfo[]> {\n\n    return this.api.get('/channel/list')\n      .pipe(\n        map(response => {\n          if (response.ok()) {\n            return response.data;\n          }\n          return null;\n        }))\n      .toPromise();\n  }\n\n  create(form: ChannelForm): Promise<ApiResponse> {\n    return this.api.post('/channel/create', form)\n      .pipe(\n        map(response => {\n          if (response.ok()) {\n            return response.data;\n          }\n          return null;\n        }))\n      .toPromise();\n  }\n\n  getInitialMessage(channelName: string): Promise<HorseMessage> {\n\n    return this.api.get('/channel/initial-message?name=' + channelName)\n      .pipe(\n        map(response => {\n          if (response.ok()) {\n            return response.data;\n          }\n          return null;\n        }))\n      .toPromise();\n  }\n\n  getGraph(name: string, resolution: string): Promise<MessageCount> {\n\n    let url = '/channel/graph?resolution=' + resolution;\n    if (name != null && name.length > 0) {\n      url += '&name=' + name;\n    }\n\n    return of(this)\n      .pipe(\n        mergeMap(() => this.api.get(url)),\n        map(response => {\n\n          if (!response.success)\n            return null;\n\n          let result = <MessageCount>response.data;\n          result.labels = DateHelper.createLabels(result.d.map(x => x.u));\n\n          return result;\n        })\n      )\n      .toPromise();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { BaseComponent } from 'src/lib/base-component';\r\n\r\n@Component({\r\n    selector: 'app-guest-layout',\r\n    templateUrl: './guest-layout.component.html',\r\n    styleUrls: ['./guest-layout.component.css']\r\n})\r\nexport class GuestLayoutComponent extends BaseComponent implements OnInit {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","<div class=\"gbody\">\r\n    <div class=\"gframe\" style=\"min-width: 340px\">\r\n        <div class=\"glogo\">\r\n            <img src=\"/assets/horse.svg\" alt=\"Horse Messaging\" />\r\n            <div>\r\n                <h2>Jockey</h2>\r\n                <h1>Horse Messaging Server</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"gcontent\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GuestLayoutComponent } from './guest-layout.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n    declarations: [GuestLayoutComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule\r\n    ],\r\n    schemas: [\r\n        CUSTOM_ELEMENTS_SCHEMA\r\n    ]\r\n})\r\nexport class GuestLayoutModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { RouterBinding } from 'src/models/router-binding';\r\n\r\n@Pipe({\r\n    name: 'bindingType'\r\n})\r\nexport class BindingTypePipe implements PipeTransform {\r\n\r\n    transform(binding: RouterBinding): string {\r\n\r\n        let type = binding.type;\r\n\r\n        if (type == 'Direct') {\r\n\r\n            if (binding.target.startsWith('@')) {\r\n\r\n                let i = binding.target.indexOf(':');\r\n                if (i > 0) {\r\n                    return binding.target.substr(1, i - 1);\r\n                }\r\n\r\n            } else {\r\n                return 'Id';\r\n            }\r\n        }\r\n\r\n        if (type == 'Http') {\r\n\r\n            switch (binding.contentType) {\r\n                case 0: return 'GET';\r\n                case 1: return 'POST';\r\n                case 2: return 'PUT';\r\n                case 3: return 'PATCH';\r\n                case 4: return 'DELETE';\r\n            }\r\n        }\r\n\r\n        if (type.indexOf('Queue') >= 0)\r\n            return 'Queue';\r\n\r\n        return type;\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filesize'\r\n})\r\nexport class FilesizePipe implements PipeTransform {\r\n\r\n    transform(value: number): string {\r\n\r\n        if (value == 0)\r\n            return 'None';\r\n\r\n        if (value < 2014)\r\n            return value + ' bytes';\r\n\r\n        if (value < 1048576)\r\n            return (value / 1024).toFixed(2) + ' KB';\r\n\r\n        if (value > 1073741824)\r\n            return (value / 1073741824).toFixed(2) + ' GB'\r\n\r\n        return (value / 1048576).toFixed(2) + ' MB';\r\n    }\r\n\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'jockeyTime' })\r\nexport class JockeyTimePipe implements PipeTransform {\r\n\r\n  constructor(private _datePipe: DatePipe) { }\r\n\r\n  transform(value: number): string {\r\n    return this._datePipe.transform(value * 1000, 'HH:mm:ss');\r\n  }\r\n}\r\n","import { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { BindingTypePipe } from './binding-type.pipe';\r\nimport { FilesizePipe } from './filesize.pipe';\r\nimport { JockeyTimePipe } from './jockey-time.pipe';\r\nimport { PrettyPrintPipe } from './prett-print.pipe';\r\nimport { TimespanPipe } from './timespan.pipe';\r\nimport { UnlimitedPipe } from './unlimited.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TimespanPipe,\r\n        UnlimitedPipe,\r\n        FilesizePipe,\r\n        BindingTypePipe,\r\n        JockeyTimePipe,\r\n        PrettyPrintPipe\r\n    ],\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    exports: [\r\n        TimespanPipe,\r\n        UnlimitedPipe,\r\n        FilesizePipe,\r\n        BindingTypePipe,\r\n        JockeyTimePipe,\r\n        PrettyPrintPipe\r\n    ],\r\n    providers: [\r\n        DatePipe\r\n    ]\r\n})\r\nexport class PipesModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\ntype FormatOptions = {\r\n  indent?: number,\r\n  linkUrls?: boolean,\r\n  quoteKeys?: boolean;\r\n};\r\ntype JsonType = 'key' | 'string' | 'number' | 'boolean' | 'null' | 'mark';\r\nconst settings: FormatOptions = { indent: 3, linkUrls: true, quoteKeys: false };\r\n\r\n@Pipe({\r\n  name: 'prettyprint'\r\n})\r\nexport class PrettyPrintPipe implements PipeTransform {\r\n\r\n  transform(data: any): string {\r\n    const jsonLine = /^( *)(\"[^\"]+\": )?(\"[^\"]*\"|[\\w.+-]*)?([{}[\\],]*)?$/mg;\r\n    // Regex parses each line of the JSON string into four parts:\r\n    //    Capture group       Part        Description                  '   \"active\": true,'\r\n    //    ------------------  ----------  ---------------------------  --------------------\r\n    //    ( *)                p1: indent  Spaces for indentation       '   '\r\n    //    (\"[^\"]+\": )         p2: key     Key name                     '\"active\": '\r\n    //    (\"[^\"]*\"|[\\w.+-]*)  p3: value   Key value                    'true'\r\n    //    ([{}[\\],]*)         p4: end     Line termination characters  ','\r\n    const json = JSON.stringify(data, null, settings.indent) || 'undefined';\r\n    return this.htmlEntities(json).replace(jsonLine, this.replacer);\r\n  }\r\n\r\n  private htmlEntities = (text: string) => {\r\n    // Makes text displayable in browsers\r\n    return text\r\n      .replace(/&/g, '&amp;')\r\n      .replace(/\\\\\"/g, '&bsol;&quot;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;');\r\n  }\r\n\r\n  private replacer = (match: string, p1: string, p2: string, p3: string, p4: string): string => {\r\n    // Converts the four parenthesized capture groups (indent, key, value, end) into HTML\r\n    const part = { indent: p1, key: p2, value: p3, end: p4 };\r\n    const findName = settings.quoteKeys ? /(.*)(): / : /\"([\\w$]+)\": |(.*): /;\r\n    const indentHtml = part.indent || '';\r\n    const keyName = part.key && part.key.replace(findName, '$1$2');\r\n    const keyHtml = part.key ? this.spanTag('key', keyName) + this.spanTag('mark', ': ') : '';\r\n    const valueHtml = part.value ? this.buildValueHtml(part.value) : '';\r\n    const endHtml = this.spanTag('mark', part.end);\r\n    return indentHtml + keyHtml + valueHtml + endHtml;\r\n  }\r\n\r\n  private buildValueHtml = (value: string): string => {\r\n    // Returns a string like: \"<span class=json-number>3.1415</span>\"\r\n    const strType = /^\"/.test(value) && 'string';\r\n    const boolType = ['true', 'false'].includes(value) && 'boolean';\r\n    const nullType = value === 'null' && 'null';\r\n    const type = boolType || nullType || strType || 'number';\r\n    const urlRegex = /https?:\\/\\/[^\\s\"]+/g;\r\n    const makeLink = (link: string) => '<a class=json-link href=\"' + link + '\">' + link + '</a>';\r\n    const display = strType && settings.linkUrls ? value.replace(urlRegex, makeLink) : value;\r\n    return this.spanTag(type, display);\r\n  }\r\n\r\n  private spanTag = (type: JsonType, display?: string): string =>\r\n    display ? '<span class=json-' + type + '>' + display + '</span>' : ''\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\nconst MIN = 60;\r\nconst HOUR = 60 * 60;\r\nconst DAY = 60 * 60 * 24;\r\n\r\n@Pipe({\r\n    name: 'timespan'\r\n})\r\nexport class TimespanPipe implements PipeTransform {\r\n\r\n    transform(value: number, ref: number = 0): string {\r\n\r\n        let totalSeconds = Math.round(value - ref);\r\n\r\n        let days = 0;\r\n        let hours = 0;\r\n        let mins = 0;\r\n\r\n        while (totalSeconds >= DAY) {\r\n            days++;\r\n            totalSeconds -= DAY;\r\n        }\r\n\r\n        while (totalSeconds >= HOUR) {\r\n            hours++;\r\n            totalSeconds -= HOUR;\r\n        }\r\n\r\n        while (totalSeconds >= MIN) {\r\n            mins++;\r\n            totalSeconds -= MIN;\r\n        }\r\n\r\n        let result = '';\r\n\r\n        if (days > 0) {\r\n            result += days + ' ' + (days > 1 ? 'days' : 'day') + ' ';\r\n        }\r\n\r\n        if (hours > 0) {\r\n            result += hours + ' ' + (hours > 1 ? 'hours' : 'hour') + ' ';\r\n        }\r\n\r\n        if (mins > 0) {\r\n            result += mins + ' ' + (mins > 1 ? 'mins' : 'min') + ' ';\r\n        }\r\n\r\n        if (totalSeconds > 0) {\r\n            result += totalSeconds + ' ' + (totalSeconds > 1 ? 'secs' : 'sec');\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'unlimited'\r\n})\r\nexport class UnlimitedPipe implements PipeTransform {\r\n\r\n    transform(value: number): string {\r\n\r\n        if (value == 0)\r\n            return 'Unlimited';\r\n\r\n        return value.toString();\r\n    }\r\n\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-confirm-modal',\n  templateUrl: './confirm-modal.component.html',\n  styleUrls: ['./confirm-modal.component.css']\n})\nexport class ConfirmModalComponent implements OnDestroy {\n\n  private _onclosed: Subject<any> = new Subject<any>();\n  get onclosed(): Observable<any> { return this._onclosed; }\n\n  message: string;\n  private _confirmed = false;\n\n  constructor() {\n  }\n\n  ngOnDestroy() {\n    if (!this._confirmed)\n      this._onclosed.next(false);\n  }\n\n  confirm(value: boolean): void {\n    this._confirmed = true;\n    this._onclosed.next(value);\n  }\n\n}\n","<h2 class=\"title\" mat-dialog-title>Confirmation</h2>\n<mat-dialog-content class=\"content\">\n    <p [innerHTML]=\"message\"></p>\n    <p>Please confirm your action.</p>\n</mat-dialog-content>\n<mat-dialog-actions class=\"buttons\">\n    <button (click)=\"confirm(true)\" mat-button mat-dialog-close class=\"modal-btn btn-red\">Confirm</button>\n    <button (click)=\"confirm(false)\" mat-button mat-dialog-close class=\"modal-btn btn-grey\">Cancel</button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BaseComponent } from 'src/lib/base-component';\r\nimport { SessionUser } from 'src/models/session-user';\r\nimport { SessionService } from 'src/services/session.service';\r\n\r\n@Component({\r\n    selector: 'app-portal-layout',\r\n    templateUrl: './portal-layout.component.html',\r\n    styleUrls: ['./portal-layout.component.css']\r\n})\r\nexport class PortalLayoutComponent extends BaseComponent implements OnInit {\r\n\r\n    user: SessionUser;\r\n    version: string;\r\n\r\n    constructor(private session: SessionService, private router: Router) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.user = this.session.get();\r\n        this.version = environment.version;\r\n    }\r\n\r\n    logout(): void {\r\n        this.session.clear();\r\n        this.router.navigateByUrl('/login');\r\n    }\r\n\r\n}\r\n","<header>\r\n  <div class=\"headline\">\r\n    <div class=\"logo\">\r\n      <img src=\"/assets/horse.svg\" alt=\"Horse Messaging\" />\r\n      <div>\r\n        <h1>Horse Messaging Jockey</h1>\r\n        <em>Version {{version}}</em>\r\n      </div>\r\n    </div>\r\n    <div class=\"menu\">\r\n      <ul>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/dashboard\">Dashboard</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/channels\">Channels</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/queues\">Queues</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/routers\">Routers</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/cache\">Cache</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/clients\">Clients</a></li>\r\n        <li><a routerLinkActive=\"active\" routerLink=\"/console\">Console</a></li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"user\" *ngIf=\"user\">\r\n      <span class=\"user-name\">{{user.name}}</span>\r\n      <button class=\"logout\" (click)=\"logout()\">Logout</button>\r\n    </div>\r\n  </div>\r\n</header>\r\n<div class=\"after-header\"></div>\r\n<div class=\"portal-content\">\r\n  <router-outlet></router-outlet>\r\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PortalLayoutComponent } from './portal-layout.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PortalLayoutComponent,\r\n        ConfirmModalComponent\r\n    ],\r\n    exports: [\r\n        ConfirmModalComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        MatDialogModule\r\n    ],\r\n    schemas: [\r\n        CUSTOM_ELEMENTS_SCHEMA\r\n    ]\r\n})\r\nexport class PortalLayoutModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, of } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\nimport { ApiClient } from 'src/lib/api-client';\r\nimport { HorseQueue, HorseQueueSummary } from 'src/app/queue/models/horse-queue';\r\nimport { QueueCreateModel } from 'src/app/queue/models/queue-create-model';\r\nimport { QueueMessage, QueuePushMessage } from 'src/app/queue/models/queue-message';\r\nimport { WebsocketService } from '../../../services/websocket.service';\r\nimport { QueueGraphData } from '../models/queue-graph-data';\r\nimport { DateHelper } from 'src/lib/date-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class QueueService {\r\n\r\n    private _queues: HorseQueue[] = [];\r\n    private _oncreated: Subject<HorseQueue> = new Subject<HorseQueue>();\r\n    private _onremoved: Subject<HorseQueue> = new Subject<HorseQueue>();\r\n    private _onupdated: Subject<HorseQueue> = new Subject<HorseQueue>();\r\n\r\n    get queues(): HorseQueue[] { return this._queues; }\r\n    get oncreated(): Observable<HorseQueue> { return this._oncreated; }\r\n    get onremoved(): Observable<HorseQueue> { return this._onremoved; }\r\n    get onupdated(): Observable<HorseQueue> { return this._onupdated; }\r\n\r\n    constructor(private api: ApiClient, private socket: WebsocketService) { }\r\n\r\n    list(): Promise<HorseQueue[]> {\r\n\r\n        return this.api.get('/queue/list')\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    listSummary(): Promise<HorseQueueSummary[]> {\r\n\r\n        return this.api.get('/queue/list-names')\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    getManagers(): Promise<string[]> {\r\n\r\n        return this.api.get('/queue/managers')\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    get(name: string): Promise<HorseQueue> {\r\n\r\n        return this.api.get('/queue/get?name=' + name)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    getGraph(name: string, resolution: string): Promise<QueueGraphData> {\r\n\r\n        let url = '/queue/graph?resolution=' + resolution;\r\n        if (name != null && name.length > 0) {\r\n            url += '&name=' + name;\r\n        }\r\n\r\n        return of(this)\r\n            .pipe(\r\n                mergeMap(() => this.api.get(url)),\r\n                map(response => {\r\n\r\n                    if (!response.success)\r\n                        return null;\r\n\r\n                    let result: QueueGraphData = {\r\n                        store: {\r\n                            n: response.data.name,\r\n                            r: response.data.resolution,\r\n                            d: response.data.store\r\n                        },\r\n                        stream: {\r\n                            n: response.data.name,\r\n                            r: response.data.resolution,\r\n                            d: response.data.stream\r\n                        }\r\n                    };\r\n\r\n                    result.store.labels = DateHelper.createLabels(result.store.d.map(x => x.u));\r\n                    result.stream.labels = DateHelper.createLabels(result.stream.d.map(x => x.u));\r\n\r\n                    return result;\r\n                })\r\n            )\r\n            .toPromise();\r\n    }\r\n\r\n    create(model: QueueCreateModel): Promise<any> {\r\n\r\n        return this.api.post('/queue/create', model)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    setOption(queueName: string, optionName: string, value: any): Promise<any> {\r\n\r\n        let model = {\r\n            queue: queueName,\r\n            name: optionName,\r\n            value: value\r\n        };\r\n\r\n        return this.api.put('/queue/option', model)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    push(message: QueuePushMessage): Promise<any> {\r\n\r\n        return this.api.post('/queue/push', message)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    read(name: string): Promise<QueueMessage> {\r\n\r\n        return this.api.get('/queue/read?name=' + name)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    consume(name: string): Promise<QueueMessage> {\r\n\r\n        return this.api.get('/queue/consume?name=' + name)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    status(name: string, status: string): Promise<any> {\r\n        let form = new FormData();\r\n        form.append('name', name);\r\n        form.append('status', status);\r\n        return this.api.putForm('/queue/status', form)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    clear(name: string): Promise<any> {\r\n        let form = new FormData();\r\n        form.append('name', name);\r\n        return this.api.putForm('/queue/clear', form)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    delete(name: string): Promise<any> {\r\n        return this.api.delete('/queue/delete?name=' + name)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    move(name: string, target: string): Promise<any> {\r\n\r\n        let form = new FormData();\r\n        form.append('name', name);\r\n        form.append('target', target);\r\n\r\n        return this.api.postForm('/queue/move-messages', form)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    resetStats(name: string): Promise<any> {\r\n        return this.api.putForm('/queue/reset-stats', null)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    version: '6.6.2',\r\n\r\n    api: {\r\n        url: 'http://localhost:15400/api',\r\n        websocket: 'ws://localhost:15400/'\r\n    },\r\n\r\n    storage: {\r\n        token: 'token'\r\n    }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { SessionService } from 'src/services/session.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SessionGuard implements CanActivate {\r\n\r\n    constructor(private session: SessionService, private router: Router) { }\r\n\r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n        let user = this.session.get();\r\n        if (user == null) {\r\n            this.router.navigateByUrl('/login');\r\n            return false;\r\n        }\r\n\r\n        let now = new Date().getTime();\r\n        if (user.expiration < now) {\r\n            this.router.navigateByUrl('/login');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpEventType } from '@angular/common/http';\r\nimport { SessionService } from 'src/services/session.service';\r\nimport { TransactionResult } from 'src/models/transaction-result';\r\nimport { catchError, filter, map, mergeMap, take, takeWhile } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { RequestProgress } from 'src/models/request-progress';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ApiResponse, IResponse } from 'src/models/api-response';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ApiClient {\r\n\r\n    constructor(private http: HttpClient, private session: SessionService) {\r\n    }\r\n\r\n    private getOptions(contentType: string): any {\r\n        let user = this.session.get();\r\n\r\n        let headers = new HttpHeaders();\r\n        headers = headers.set('Access-Control-Allow-Origin', '*');\r\n\r\n        if (contentType != null)\r\n            headers = headers.set('Content-Type', contentType);\r\n\r\n        if (user != null && user.token != null && user.token.length > 0)\r\n            headers = headers.set('Authorization', 'Bearer ' + user.token);\r\n\r\n        let httpOptions = {\r\n            headers: headers,\r\n            withCredentials: true\r\n        };\r\n\r\n        return httpOptions;\r\n    }\r\n\r\n    get(url: string, progress?: RequestProgress): Observable<IResponse> {\r\n        if (progress)\r\n            return this.requestProgress(true, 'GET', url, null, progress);\r\n\r\n        return this.request(true, 'GET', url, null);\r\n    }\r\n\r\n    delete(url: string, model?: any, progress?: RequestProgress): Observable<IResponse> {\r\n        if (progress)\r\n            return this.requestProgress(true, 'DELETE', url, JSON.stringify(model), progress);\r\n\r\n        return this.request(true, 'DELETE', url, JSON.stringify(model));\r\n    }\r\n\r\n    post(url: string, model: any, progress?: RequestProgress): Observable<IResponse> {\r\n        if (progress)\r\n            return this.requestProgress(true, 'POST', url, JSON.stringify(model), progress);\r\n\r\n        return this.request(true, 'POST', url, JSON.stringify(model));\r\n    }\r\n\r\n    put(url: string, model: any, progress?: RequestProgress): Observable<IResponse> {\r\n        if (progress)\r\n            return this.requestProgress(true, 'PUT', url, JSON.stringify(model), progress);\r\n\r\n        return this.request(true, 'PUT', url, JSON.stringify(model));\r\n    }\r\n\r\n    patch(url: string, model: any, progress?: RequestProgress): Observable<IResponse> {\r\n        if (progress)\r\n            return this.requestProgress(true, 'PATCH', url, JSON.stringify(model), progress);\r\n\r\n        return this.request(true, 'PATCH', url, JSON.stringify(model));\r\n    }\r\n\r\n    postForm(url: string, form: FormData, progress?: RequestProgress): Observable<IResponse> {\r\n        if (progress)\r\n            return this.requestProgress(false, 'POST', url, form, progress);\r\n\r\n        return this.request(false, 'POST', url, form);\r\n    }\r\n\r\n    putForm(url: string, form: FormData, progress?: RequestProgress): Observable<IResponse> {\r\n        if (progress)\r\n            return this.requestProgress(false, 'PUT', url, form, progress);\r\n\r\n        return this.request(false, 'PUT', url, form);\r\n    }\r\n\r\n    patchForm(url: string, form: FormDataEntryValue, progress?: RequestProgress): Observable<IResponse> {\r\n        if (progress)\r\n            return this.requestProgress(false, 'PATCH', url, form, progress);\r\n\r\n        return this.request(false, 'PATCH', url, form);\r\n    }\r\n\r\n    request(json: boolean, method: string, url: string, body: any): Observable<IResponse> {\r\n        return of({\r\n            json: json,\r\n            method: method,\r\n            url: url,\r\n            body: body\r\n        }).pipe(\r\n\r\n            //subscribe only once\r\n            take(1),\r\n\r\n            //prepares the request\r\n            mergeMap(input => {\r\n                let options = this.getOptions(input.json ? 'application/json' : null);\r\n\r\n                let fullUrl = input.url;\r\n                if (fullUrl.indexOf('//') < 0) {\r\n                    let url_slash = '';\r\n                    if (!fullUrl.startsWith('/'))\r\n                        url_slash = '/';\r\n\r\n                    fullUrl = environment.api.url + url_slash + fullUrl;\r\n                }\r\n\r\n                switch (method) {\r\n                    case 'GET':\r\n                        return this.http.get<any>(fullUrl, options);\r\n\r\n                    case 'DELETE':\r\n                        return this.http.delete<any>(fullUrl, options);\r\n\r\n                    case 'POST':\r\n                        return this.http.post<any>(fullUrl, body, options);\r\n\r\n                    case 'PUT':\r\n                        return this.http.put<any>(fullUrl, body, options);\r\n\r\n                    case 'PATCH':\r\n                        return this.http.patch<any>(fullUrl, body, options);\r\n\r\n                }\r\n\r\n                return of(null);\r\n            }),\r\n\r\n            //gets the response\r\n            map(value => {\r\n                var response: any = value;\r\n                let result = new ApiResponse();\r\n                result.statusCode = 200;\r\n                result.statusMessage = 'OK';\r\n                result.data = response;\r\n                result.success = true;\r\n\r\n                return result;\r\n            }),\r\n\r\n            //gets the failed response\r\n            catchError(err => {\r\n                let e = <HttpErrorResponse>err;\r\n\r\n                let result = new ApiResponse();\r\n                result.statusCode = e.status;\r\n                result.statusMessage = e.message;\r\n                result.error = e.error;\r\n                result.success = false;\r\n\r\n                if (result.statusCode == 401) {\r\n                    this.session.clear();\r\n                    window.location.href = '/';\r\n                }\r\n\r\n                return of(result);\r\n            })\r\n        );\r\n\r\n    }\r\n\r\n    requestProgress(json: boolean, method: string, url: string, body: any, progress: RequestProgress): Observable<IResponse> {\r\n        let finished = false;\r\n\r\n        return of({\r\n            json: json,\r\n            method: method,\r\n            url: url,\r\n            body: body\r\n        }).pipe(\r\n\r\n            //subscribe only once\r\n            takeWhile(() => !finished && !progress.canceled),\r\n\r\n            //prepares the request\r\n            mergeMap(input => {\r\n                let options = this.getOptions(input.json ? 'application/json' : null);\r\n                options.reportProgress = true;\r\n                options.observe = 'events';\r\n\r\n                let fullUrl = input.url;\r\n                if (fullUrl.indexOf('//') < 0) {\r\n                    let url_slash = '';\r\n                    if (!fullUrl.startsWith('/'))\r\n                        url_slash = '/';\r\n\r\n                    fullUrl = environment.api.url + url_slash + fullUrl;\r\n                }\r\n\r\n                switch (method) {\r\n                    case 'GET':\r\n                        return this.http.get<any>(fullUrl, options);\r\n\r\n                    case 'DELETE':\r\n                        return this.http.delete<any>(fullUrl, options);\r\n\r\n                    case 'POST':\r\n                        return this.http.post<any>(fullUrl, body, options);\r\n\r\n                    case 'PUT':\r\n                        return this.http.put<any>(fullUrl, body, options);\r\n\r\n                    case 'PATCH':\r\n                        return this.http.patch<any>(fullUrl, body, options);\r\n\r\n                }\r\n\r\n                return of(null);\r\n            }),\r\n\r\n            map(value => {\r\n                if (progress.canceled)\r\n                    throw new Error('file upload canceled');\r\n\r\n                if (value.type == HttpEventType.UploadProgress) {\r\n                    if (progress) {\r\n                        let num = Math.round(100 * value.loaded / value.total);\r\n                        progress.progress(num);\r\n                    }\r\n\r\n                    return null;\r\n                }\r\n                else if (value.type == HttpEventType.Response) {\r\n                    finished = true;\r\n                    return value;\r\n                }\r\n\r\n                return null;\r\n            }),\r\n\r\n            filter(value => value != null),\r\n\r\n            //gets the response\r\n            map(value => {\r\n                var response: any = value;\r\n                let result = new ApiResponse();\r\n                result.statusCode = 200;\r\n                result.statusMessage = 'OK';\r\n                result.data = response.body;\r\n                result.success = true;\r\n\r\n                return result;\r\n            }),\r\n\r\n            //gets the failed response\r\n            catchError(err => {\r\n                let e = <HttpErrorResponse>err;\r\n\r\n                let result = new ApiResponse();\r\n                result.statusCode = e.status;\r\n                result.statusMessage = e.message;\r\n                result.error = e.error;\r\n                result.success = false;\r\n\r\n                if (result.statusCode == 401)\r\n                    this.session.clear();\r\n\r\n                return of(result);\r\n            })\r\n        );\r\n\r\n    }\r\n\r\n    toTransaction(response: Observable<IResponse>): Promise<TransactionResult> {\r\n        return response.pipe(\r\n            mergeMap(response => {\r\n                if (response.data != null)\r\n                    return of(<TransactionResult>response.data);\r\n                else if (response.error != null)\r\n                    return of(<TransactionResult>response.error);\r\n\r\n                return of(null);\r\n            })\r\n        ).toPromise();\r\n    }\r\n\r\n    toObject<T>(response: Observable<IResponse>): Promise<T> {\r\n        return response.pipe(\r\n            mergeMap(response => {\r\n                if (response.ok())\r\n                    return of(<T>response.data);\r\n\r\n                return of(null);\r\n            })\r\n        ).toPromise<T>();\r\n    }\r\n}","import { Directive, OnDestroy } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { takeWhile } from 'rxjs/operators';\r\n\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseComponent implements OnDestroy {\r\n\r\n    private _destroyed: boolean = false;\r\n\r\n    on<T>(observable: Observable<T>): Observable<T> {\r\n        return observable.pipe(takeWhile(() => !this._destroyed));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._destroyed = true;\r\n    }\r\n}\r\n","export class Base64Helper {\r\n\r\n    private static _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\n    public static encode(plain: string): string {\r\n        return btoa(encodeURIComponent(plain).replace(/%([0-9A-F]{2})/g, function (match, p1) {\r\n            return String.fromCharCode(parseInt(p1, 16))\r\n        }))\r\n    }\r\n\r\n    public static decode(encoded: string): string {\r\n        // Going backwards: from bytestream, to percent-encoding, to original string.\r\n        return decodeURIComponent(atob(encoded).split('').map(function (c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n    }\r\n\r\n    public static readBearer(token: string): string {\r\n        let sp = token.split('.');\r\n        if (sp.length != 3)\r\n            return null;\r\n\r\n        let decoded = this.decode(sp[1]);\r\n        return decoded;\r\n    }\r\n\r\n    public static encryptx(plain: string, full: boolean = false): string {\r\n        let n1 = this.randomizeInteger(10, 40);\r\n        let n2 = this.randomizeInteger(10, 99);\r\n        let start = this._keyStr.substr(n1, 1);\r\n\r\n        let n3 = this.randomizeInteger(10, 40);\r\n        let n4 = this.randomizeInteger(10, 99);\r\n        let end = this._keyStr.substr(n3, 1);\r\n\r\n        let str;\r\n        if (full)\r\n            str = plain;\r\n        else\r\n            str = plain.length > 15 ? plain.substr(0, 15) : plain;\r\n\r\n        return start + n2 + this.encode(str).replace('=', '') + end + n4;\r\n    }\r\n\r\n    public static decryptx(cipher: string): string {\r\n        if (cipher.length < 7)\r\n            return null;\r\n\r\n        let encoded = cipher.substr(3, cipher.length - 6);\r\n        if (encoded.length % 2 == 1)\r\n            encoded += '=';\r\n\r\n        return this.decode(encoded);\r\n\r\n    }\r\n\r\n    private static randomizeInteger(min: number, max: number): number {\r\n        if (max == null) {\r\n            max = (min == null ? Number.MAX_SAFE_INTEGER : min);\r\n            min = 0;\r\n        }\r\n\r\n        min = Math.ceil(min);  // inclusive min\r\n        max = Math.floor(max); // exclusive max\r\n\r\n        if (min > max - 1) {\r\n            throw new Error(\"Incorrect arguments.\");\r\n        }\r\n\r\n        return min + Math.floor((max - min) * Math.random());\r\n    }\r\n}","import { DatePipe } from \"@angular/common\";\r\n\r\nexport class DateHelper {\r\n\r\n    private static _pipe: DatePipe = new DatePipe('en-US');\r\n\r\n    /** Create Time Labels */\r\n    static createTimeLabels(count: number, scaleSeconds: number, reverse: boolean): string[] {\r\n\r\n        let labels = [];\r\n        let seconds = new Date().getTime() / 1000;\r\n\r\n        if (!reverse) {\r\n            seconds -= scaleSeconds * count;\r\n        }\r\n\r\n        for (let i = 0; i < count; i++) {\r\n\r\n            labels.push(this.findTimeFromUnixSeconds(seconds));\r\n\r\n            if (reverse) { seconds -= scaleSeconds; }\r\n            else { seconds += scaleSeconds; }\r\n        }\r\n\r\n        return labels;\r\n    }\r\n\r\n    /** Create Time Labels. Each time must be in unix seconds. */\r\n    static createLabels(times: number[]): string[] {\r\n\r\n        let labels = [];\r\n\r\n        for (let i = 0; i < times.length; i++) {\r\n\r\n            labels.push(this.findTimeFromUnixSeconds(times[i]));\r\n        }\r\n\r\n        return labels;\r\n    }\r\n\r\n    /** Returns HH:mm:ss string from unix time in seconds */\r\n    static findTimeFromUnixSeconds(unix: number): string {\r\n        let date = new Date(unix * 1000);\r\n        return this._pipe.transform(date, 'HH:mm:ss');\r\n    }\r\n\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","\r\nexport interface IResponse {\r\n    statusCode: number;\r\n    statusMessage: string;\r\n    data?: any;\r\n    error?: any;\r\n    success: boolean;\r\n\r\n    ok(): boolean;\r\n    getErrorMessage(): string;\r\n}\r\n\r\nexport class ApiResponse implements IResponse {\r\n    statusCode: number;\r\n    statusMessage: string;\r\n    data: any;\r\n    error: any;\r\n    success: boolean;\r\n\r\n    ok(): boolean {\r\n        return this.success && this.data;\r\n    }\r\n\r\n    getErrorMessage(): string {\r\n        if (this.statusMessage)\r\n            return this.statusMessage;\r\n\r\n        return null;\r\n    }\r\n\r\n}","\r\nexport class SessionUser {\r\n    id: string;\r\n    name: string;\r\n    token: string;\r\n    expiration: number;\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, of } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\nimport { ApiClient } from 'src/lib/api-client';\r\nimport { HorseClient } from 'src/models/horse-client';\r\nimport { TransactionResult } from 'src/models/transaction-result';\r\nimport { WebsocketService } from './websocket.service';\r\nimport { MessageCount } from 'src/models/message-count';\r\nimport { DateHelper } from 'src/lib/date-helper';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n\r\n    private _clients: HorseClient[] = [];\r\n    private _onconnected: Subject<HorseClient> = new Subject<HorseClient>();\r\n    private _ondisconnected: Subject<HorseClient> = new Subject<HorseClient>();\r\n\r\n    get clients(): HorseClient[] { return this._clients; }\r\n    get onconnected(): Observable<HorseClient> { return this._onconnected; }\r\n    get ondisconnected(): Observable<HorseClient> { return this._ondisconnected; }\r\n\r\n    constructor(private api: ApiClient, private socket: WebsocketService) { }\r\n\r\n    list(): Promise<HorseClient[]> {\r\n        return this.api.get('/client/list')\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        this._clients = response.data;\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    refresh(): Promise<TransactionResult> {\r\n        return null;\r\n    }\r\n\r\n    remove(client: HorseClient): Promise<TransactionResult> {\r\n        return null;\r\n    }\r\n\r\n    getGraph(name: string, resolution: string): Promise<MessageCount> {\r\n\r\n        let url = '/client/graph?resolution=' + resolution;\r\n        if (name != null && name.length > 0) {\r\n            url += '&name=' + name;\r\n        }\r\n\r\n        return of(this)\r\n            .pipe(\r\n                mergeMap(() => this.api.get(url)),\r\n                map(response => {\r\n\r\n                    if (!response.success)\r\n                        return null;\r\n\r\n                    let result = <MessageCount>response.data;\r\n                    result.labels = DateHelper.createLabels(result.d.map(x => x.u));\r\n\r\n                    return result;\r\n                })\r\n            )\r\n            .toPromise();\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ApiClient } from 'src/lib/api-client';\r\nimport { Dashboard } from 'src/models/dashboard';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n    constructor(private api: ApiClient) { }\r\n\r\n    /** Refreshes graph data */\r\n    load(): Promise<Dashboard> {\r\n\r\n        return this.api.get('/dashboard/stats')\r\n            .pipe(\r\n                map(response => {\r\n\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\nimport { ApiClient } from 'src/lib/api-client';\r\nimport { DateHelper } from 'src/lib/date-helper';\r\nimport { AddBindingModel } from 'src/models/add-binding-model';\r\nimport { CreateRouterModel } from 'src/models/create-router-model';\r\nimport { HorseRouter } from 'src/models/horse-router';\r\nimport { MessageCount } from 'src/models/message-count';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HorseRouterService {\r\n\r\n    private _routers: HorseRouter[];\r\n\r\n    constructor(private api: ApiClient) { }\r\n\r\n    list(): Promise<HorseRouter[]> {\r\n        return this.api.get('/router/list')\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        this._routers = response.data;\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    create(model: CreateRouterModel): Promise<any> {\r\n\r\n        return this.api.post('/router/create', model)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    get(name: string): Promise<HorseRouter> {\r\n\r\n        return this.api.get('/router/get?name=' + name)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    getGraph(name: string, resolution: string): Promise<MessageCount> {\r\n\r\n        let url = '/router/graph?resolution=' + resolution;\r\n        if (name != null && name.length > 0) {\r\n            url += '&name=' + name;\r\n        }\r\n\r\n        return of(this)\r\n            .pipe(\r\n                mergeMap(() => this.api.get(url)),\r\n                map(response => {\r\n\r\n                    if (!response.success)\r\n                        return null;\r\n\r\n                    let result = <MessageCount>response.data;\r\n                    result.labels = DateHelper.createLabels(result.d.map(x => x.u));\r\n\r\n                    return result;\r\n                })\r\n            )\r\n            .toPromise();\r\n    }\r\n\r\n    remove(name: string): Promise<any> {\r\n\r\n        return this.api.delete('/router/remove?name=' + name)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n    addBinding(model: AddBindingModel): Promise<any> {\r\n\r\n        return this.api.post('/router/binding', model)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n\r\n    removeBinding(router: string, binding: string): Promise<any> {\r\n\r\n        return this.api.delete('/router/binding?routerName=' + router + '&bindingName=' + binding)\r\n            .pipe(\r\n                map(response => {\r\n                    if (response.ok()) {\r\n                        return response.data;\r\n                    }\r\n                    return null;\r\n                }))\r\n            .toPromise();\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ApiClient } from 'src/lib/api-client';\r\nimport { SessionUser } from 'src/models/session-user';\r\nimport { SessionService } from './session.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n    constructor(private api: ApiClient, private session: SessionService) {\r\n    }\r\n\r\n    login(username: string, password: string): Promise<SessionUser> {\r\n\r\n        let model = {\r\n            username: username,\r\n            password: password\r\n        };\r\n\r\n        return this.api.post('/user/login', model)\r\n            .pipe(\r\n                map(response => {\r\n                    this.session.clear();\r\n                    \r\n                    if (response.ok()) {\r\n                        if (response.data.ok) {\r\n                            this.session.set(response.data);\r\n                            return this.session.get();\r\n                        }\r\n                    }\r\n\r\n                    return this.session.get();\r\n                })\r\n            )\r\n            .toPromise();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { interval, Observable, Subject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Base64Helper } from 'src/lib/base64-helper';\r\nimport { LoginResult } from 'src/models/login-result';\r\nimport { SessionUser } from 'src/models/session-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SessionService {\r\n\r\n    private _current: SessionUser = null;\r\n    private _changed: Subject<SessionUser> = new Subject<SessionUser>();\r\n\r\n    get onchanged(): Observable<SessionUser> {\r\n        return this._changed.pipe();\r\n    }\r\n\r\n    constructor() {\r\n    }\r\n\r\n    run(): void {\r\n        this._current = this.read();\r\n        this._changed = new Subject<SessionUser>();\r\n\r\n        interval(1000)\r\n            .subscribe(() => {\r\n                this._current = this.read();\r\n            });\r\n    }\r\n\r\n    set(login: LoginResult): SessionUser {\r\n\r\n        localStorage.setItem(environment.storage.token, login.token);\r\n        let user = this.deserialize(login.token);\r\n\r\n        this._current = user;\r\n        this._changed.next(user);\r\n\r\n        return user;\r\n    }\r\n\r\n\r\n    refresh(token: string): void {\r\n        let current = localStorage.getItem(environment.storage.token);\r\n        if (!current)\r\n            return;\r\n\r\n        localStorage.setItem(environment.storage.token, token);\r\n    }\r\n\r\n    clear(): void {\r\n        let old = this._current;\r\n\r\n        localStorage.removeItem(environment.storage.token);\r\n        this._current = null;\r\n\r\n        if (this._changed && old != null)\r\n            this._changed.next(null);\r\n    }\r\n\r\n    get(): SessionUser {\r\n        if (this._current)\r\n            return this._current;\r\n\r\n        this._current = this.read();\r\n        return this._current;\r\n    }\r\n\r\n    read(): SessionUser {\r\n        try {\r\n            let str = localStorage.getItem(environment.storage.token);\r\n            if (str == null) {\r\n                if (this._current && this._changed)\r\n                    this._changed.next(null);\r\n\r\n                return null;\r\n            }\r\n\r\n            let user = this.deserialize(str);\r\n\r\n            if (!this._current && this._changed && user)\r\n                this._changed.next(user);\r\n\r\n            this._current = user;\r\n            return user;\r\n        }\r\n        catch {\r\n            localStorage.removeItem(environment.storage.token);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private deserialize(token: string): SessionUser {\r\n        let token_info = JSON.parse(Base64Helper.readBearer(token));\r\n        let user = new SessionUser();\r\n\r\n        user.token = token;\r\n        user.id = token_info.sub;\r\n        user.name = token_info.name;\r\n        user.expiration = parseInt(token_info.exp) * 1000;\r\n\r\n        return user;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nexport enum WebClientStatus {\r\n    Disconnected,\r\n    Connecting,\r\n    Connected\r\n}\r\n\r\nexport interface SocketMessage {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebsocketService {\r\n\r\n    private _status: WebClientStatus;\r\n    private _socket: WebSocket;\r\n\r\n    private _onconnected: Subject<WebsocketService> = new Subject<WebsocketService>();\r\n    private _ondisconnected: Subject<WebsocketService> = new Subject<WebsocketService>();\r\n    private _onmessage: Subject<SocketMessage> = new Subject<SocketMessage>();\r\n\r\n    get onconnected(): Observable<WebsocketService> { return this._onconnected; }\r\n    get ondisconnected(): Observable<WebsocketService> { return this._ondisconnected; }\r\n    get onmessage(): Observable<SocketMessage> { return this._onmessage; }\r\n    get status(): WebClientStatus { return this._status; }\r\n\r\n    constructor() { }\r\n\r\n    connect(token: string): void {\r\n\r\n        //const host = environment.api.websocket + '?token=' + token;\r\n        const host = 'ws://' + location.host + '?token=' + token;\r\n        this._socket = new WebSocket(host);\r\n\r\n\r\n        this._socket.onopen = (ev: Event) => {\r\n            this._status = WebClientStatus.Connected;\r\n            this._onconnected.next(this);\r\n        };\r\n\r\n        this._socket.onclose = (ev: Event) => {\r\n            this._status = WebClientStatus.Disconnected;\r\n            this._ondisconnected.next(this);\r\n        };\r\n\r\n        this._socket.onmessage = this.messageReceived.bind(this);\r\n    }\r\n\r\n    send(type: string, model: any): boolean {\r\n\r\n        if (!this._socket || this._status !== WebClientStatus.Connected)\r\n            return false;\r\n\r\n        const message: SocketMessage = {\r\n            type,\r\n            payload: model\r\n        };\r\n\r\n        const str = JSON.stringify(message);\r\n        this._socket.send(str);\r\n        return true;\r\n    }\r\n\r\n    disconnect(): void {\r\n        if (this._socket != null) {\r\n            try {\r\n                this._socket.close();\r\n            }\r\n            catch { }\r\n            this._status = WebClientStatus.Disconnected;\r\n            this._socket = null;\r\n        }\r\n    }\r\n\r\n    private messageReceived(event: MessageEvent) {\r\n\r\n        const message: SocketMessage = JSON.parse(event.data);\r\n        if (message == null || message.type == null || message.payload == null)\r\n            return;\r\n\r\n        this._onmessage.next(message);\r\n    }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}