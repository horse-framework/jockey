{"version":3,"file":"src_app_router_router_module_ts.js","mappings":"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","sources":["./src/app/router/binding-add-modal/binding-add-modal.component.ts","./src/app/router/binding-add-modal/binding-add-modal.component.html","./src/app/router/router.component.ts","./src/app/router/router.component.html","./src/app/router/router.module.ts","./src/models/add-binding-model.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { AddBindingModel } from 'src/models/add-binding-model';\nimport { HorseQueueSummary } from 'src/app/queue/models/horse-queue';\nimport { QueueService } from 'src/app/queue/services/queue.service';\n\n@Component({\n  selector: 'app-binding-add-modal',\n  templateUrl: './binding-add-modal.component.html',\n  styleUrls: ['./binding-add-modal.component.css']\n})\nexport class BindingAddModalComponent implements OnInit, OnDestroy {\n\n  model: AddBindingModel = new AddBindingModel();\n\n  bindingTypes = [\n    { value: 'QueueBinding', text: 'Queue Binding' },\n    { value: 'AutoQueueBinding', text: 'Auto Queue Binding' },\n    { value: 'DynamicQueueBinding', text: 'Dynamic Queue Binding' },\n    { value: 'TopicBinding', text: 'Topic Binding' },\n    { value: 'DirectBinding', text: 'Direct Binding' },\n    { value: 'HttpBinding', text: 'Http Binding' },\n    { value: 'custom', text: '(Custom Binding)' }\n  ];\n\n  routerMethods = [\n    { value: 'RoundRobin', text: 'Round Robin: Each message is redirected different targets' },\n    { value: 'Distribute', text: 'Distribute: Each message is sent to all targets' },\n    { value: 'OnlyFirst', text: 'Only First: Each message is redirected to only first active targets' }\n  ];\n\n  httpMethods = [\n    { value: 'Get', text: 'GET' },\n    { value: 'Post', text: 'POST' },\n    { value: 'Put', text: 'PUT' },\n    { value: 'Patch', text: 'PATCH' },\n    { value: 'Delete', text: 'DELETE' }\n  ];\n\n  interactions = [\n    { value: 'None', text: 'No response interaction' },\n    { value: 'Response', text: 'Router waits response from that binding' },\n  ];\n\n  private _onconfirmed: Subject<AddBindingModel> = new Subject<AddBindingModel>();\n  get onconfirmed(): Observable<AddBindingModel> { return this._onconfirmed; }\n  private _confirmed: boolean = false;\n\n  queues: HorseQueueSummary[];\n\n  constructor(private queueService: QueueService) {\n  }\n\n  ngOnInit(): void {\n    this.queueService.listSummary().then(items => {\n      this.queues = items;\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (!this._confirmed)\n      this._onconfirmed.next(null);\n  }\n\n  add() {\n    this._confirmed = true;\n    this._onconfirmed.next(this.model);\n  }\n\n}\n","<h2 class=\"title\" mat-dialog-title>Add Binding</h2>\n<mat-dialog-content class=\"content\">\n    <div #queueForm>\n        <div class=\"form-item\">\n            <label>Binding Name</label>\n            <input placeholder=\"Binding Name\" class=\"jockey-text\" type=\"text\" [(ngModel)]=\"model.name\" />\n        </div>\n        <div class=\"form-item\">\n            <label>Binding Type</label>\n            <select [(ngModel)]=\"model.type\" class=\"jockey-select\">\n                <option [ngValue]=\"i.value\" *ngFor=\"let i of bindingTypes\">{{i.text}}</option>\n            </select>\n        </div>\n        <div class=\"form-item\" *ngIf=\"model.type == 'custom'\">\n            <label>Full Binding Type Name (Namespace.TypeName, AssemblyName)</label>\n            <input placeholder=\"Binding Full Type Name\" class=\"jockey-text\" type=\"text\" [(ngModel)]=\"model.customBindingType\" />\n        </div>\n        <div class=\"form-item\" *ngIf=\"model.type == 'HttpBinding'\">\n            <label>Binding Method</label>\n            <select [(ngModel)]=\"model.method\" class=\"jockey-select\" placeholder=\"Select an HTTP Method\">\n                <option [ngValue]=\"i.value\" *ngFor=\"let i of httpMethods\">{{i.text}}</option>\n            </select>\n        </div>\n        <div class=\"form-item\" *ngIf=\"model.type != 'HttpBinding'\">\n            <label>Binding Method</label>\n            <select [(ngModel)]=\"model.method\" class=\"jockey-select\" placeholder=\"Default value is Distribute\">\n                <option [ngValue]=\"i.value\" *ngFor=\"let i of routerMethods\">{{i.text}}</option>\n            </select>\n        </div>\n        <div class=\"form-item\" *ngIf=\"model.type == 'QueueBinding'\">\n            <label>Binding Target Queue</label>\n            <select [(ngModel)]=\"model.target\" class=\"jockey-select\">\n                <option [ngValue]=\"q.name\" *ngFor=\"let q of queues\">{{q.name}} ({{q.type}})</option>\n            </select>\n        </div>\n        <div class=\"form-item\" *ngIf=\"model.type != 'QueueBinding'\">\n            <label>Binding Target</label>\n            <input placeholder=\"Binding Target\" class=\"jockey-text\" type=\"text\" [(ngModel)]=\"model.target\" />\n        </div>\n        <div class=\"form-item\">\n            <label>Binding Interaction</label>\n            <select [(ngModel)]=\"model.interaction\" class=\"jockey-select\">\n                <option [ngValue]=\"m.value\" *ngFor=\"let m of interactions\">{{m.text}}</option>\n            </select>\n        </div>\n        <div class=\"form-item\">\n            <label>Binding Priority</label>\n            <input placeholder=\"Higher values for higher priority\" class=\"jockey-text\" type=\"number\"\n                [(ngModel)]=\"model.priority\" />\n        </div>\n        <div class=\"form-item\">\n            <label>Content Type</label>\n            <input placeholder=\"Left blank for router default\" class=\"jockey-text\" type=\"number\"\n                [(ngModel)]=\"model.contentType\" />\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions class=\"buttons\">\n    <button (click)=\"add()\" mat-button mat-dialog-close class=\"modal-btn btn-green\">Add Binding</button>\n    <button mat-button mat-dialog-close class=\"modal-btn btn-grey\">Cancel</button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/lib/base-component';\r\nimport { HorseRouter } from 'src/models/horse-router';\r\nimport { RouterBinding } from 'src/models/router-binding';\r\nimport { HorseRouterService } from 'src/services/horse-router.service';\r\nimport { ConfirmModalComponent } from '../layout/portal-layout/confirm-modal/confirm-modal.component';\r\nimport { BindingAddModalComponent } from './binding-add-modal/binding-add-modal.component';\r\n\r\n@Component({\r\n    selector: 'app-router',\r\n    templateUrl: './router.component.html',\r\n    styleUrls: ['./router.component.css']\r\n})\r\nexport class RouterComponent extends BaseComponent implements OnInit {\r\n\r\n    routerName: string;\r\n\r\n    model: HorseRouter;\r\n\r\n    constructor(private routerService: HorseRouterService,\r\n        private router: Router,\r\n        private dialog: MatDialog,\r\n        private activatedRoute: ActivatedRoute) {\r\n        super();\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.routerName = this.activatedRoute.snapshot.params.name;\r\n        this.model = await this.routerService.get(this.routerName);\r\n    }\r\n\r\n    remove(): void {\r\n\r\n        let dialogRef = this.dialog.open(ConfirmModalComponent, { width: '600px' });\r\n        let component = <ConfirmModalComponent>dialogRef.componentInstance;\r\n        component.message = 'Router and binding options will be removed belong it but binding targets will not be removed (bonded queues etc). Are you sure to <b class=\"imp\">delete</b> this router and all bindings?';\r\n        component.onclosed\r\n            .pipe(take(1))\r\n            .subscribe(value => {\r\n                if (value)\r\n                    this.routerService\r\n                        .remove(this.routerName)\r\n                        .then(msg => {\r\n                            this.router.navigateByUrl('/routers');\r\n                        });\r\n            });\r\n    }\r\n\r\n    addBinding(): void {\r\n\r\n        let dialogRef = this.dialog.open(BindingAddModalComponent, { width: '600px' });\r\n        let component = <BindingAddModalComponent>dialogRef.componentInstance;\r\n        component.model.router = this.routerName;\r\n        component.onconfirmed\r\n            .pipe(take(1))\r\n            .subscribe(value => {\r\n                if (value)\r\n                    this.routerService\r\n                        .addBinding(value)\r\n                        .then(msg => {\r\n                            this.ngOnInit();\r\n                        });\r\n            });\r\n    }\r\n\r\n    removeBinding(binding: RouterBinding): void {\r\n\r\n        let dialogRef = this.dialog.open(ConfirmModalComponent, { width: '600px' });\r\n        let component = <ConfirmModalComponent>dialogRef.componentInstance;\r\n        component.message = 'Are you sure to <b class=\"imp\">remove</b> this binding from the router?';\r\n        component.onclosed\r\n            .pipe(take(1))\r\n            .subscribe(value => {\r\n                if (value)\r\n                    this.routerService\r\n                        .removeBinding(this.routerName, binding.name)\r\n                        .then(msg => this.ngOnInit());\r\n            });\r\n    }\r\n}\r\n","<div *ngIf=\"model\">\r\n    <div class=\"router-info\">\r\n        <h2>{{model.name}}</h2>\r\n        <div>\r\n            <small>{{model.method}}</small>\r\n            <span (click)=\"remove()\">Delete Router</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"bindings\">\r\n        <div class=\"table\">\r\n            <div class=\"thead\">\r\n                <div class=\"th fx16\">Binding Name</div>\r\n                <div class=\"th fx16\">Binding Type</div>\r\n                <div class=\"th fx28\">Binding Target</div>\r\n                <div class=\"th fx10\">Content Type</div>\r\n                <div class=\"th fx10\">Interaction</div>\r\n                <div class=\"th fx10\">Priority</div>\r\n                <div class=\"th fx10\">Action</div>\r\n            </div>\r\n            <div class=\"tbody\">\r\n                <div class=\"trow\" *ngFor=\"let binding of model.bindings\">\r\n                    <div class=\"td fx16\">{{binding.name}}</div>\r\n                    <div class=\"td fx16\">{{binding.type}}</div>\r\n                    <div class=\"td fx28\">{{binding.target}}</div>\r\n                    <div class=\"td fx10\">{{binding.contentType}}</div>\r\n                    <div class=\"td fx10\">{{binding.interaction}}</div>\r\n                    <div class=\"td fx10\">{{binding.priority}}</div>\r\n                    <div class=\"td fx10\"><button class=\"remove-binding\" (click)=\"removeBinding(binding)\">Remove</button></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"add-binding\">\r\n        <button (click)=\"addBinding()\">Add Binding</button>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterComponent } from './router.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BindingAddModalComponent } from './binding-add-modal/binding-add-modal.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ConfirmModalComponent } from '../layout/portal-layout/confirm-modal/confirm-modal.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [RouterComponent, BindingAddModalComponent],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatDialogModule,\r\n        RouterModule.forChild([{ path: ':name', component: RouterComponent }])\r\n    ]\r\n})\r\nexport class HorseRouterModule { }\r\n","\r\nexport class AddBindingModel {\r\n    router: string;\r\n    name: string;\r\n    target: string;\r\n    priority: number = 0;\r\n    contentType: number = null;\r\n    type: string;\r\n    customBindingType: string;\r\n    interaction: 'None' | 'Response';\r\n    method: 'RoundRobin' | 'Distribute' | 'OnlyFirst' | 'Get' | 'Post' | 'Put' | 'Patch' | 'Delete';\r\n}"],"names":[],"sourceRoot":"webpack:///"}